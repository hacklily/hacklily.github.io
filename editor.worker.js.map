{"version":3,"sources":["../webpack/bootstrap","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/webpack/buildin/global.js","../node_modules/process/browser.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/monaco-editor/esm/vs/base/common/arrays.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/core/uint.js","../node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/monaco-editor/esm/vs/editor/common/core/token.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","__webpack_exports__","isWindows","isWeb","globals","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","NODE_ENV","PUBLIC_URL","HOMEPAGE","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_BACKEND_WS_URL","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","userAgent","indexOf","language","self","g","this","Function","window","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","setImmediate","finallyConstructor","callback","constructor","then","resolve","reason","reject","setTimeoutFunc","Promise","fn","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","promise","newValue","finale","thisArg","_unhandledRejectionFn","Handler","done","ex","prom","all","arr","slice","remaining","res","val","race","values","err","console","warn","globalNS","factory","scope","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","toString","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","Math","random","onGlobalMessage","event","source","data","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","task","errorHandler","ErrorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","onUnexpectedExternalError","isPromiseCanceledError","transformErrorForSerialization","error","$isError","stacktrace","canceledName","lifecycle_dispose","first","rest","_i","isArray","dispose","Disposable","_toDispose","_lifecycle_disposable_isDisposed","_register","None","freeze","ImmortalReference","getAllPropertyNames","obj","proto","getOwnPropertyNames","__extends","extendStatics","b","setPrototypeOf","__proto__","__","INITIALIZE","simpleWorker_SimpleWorkerProtocol","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","setWorkerId","workerId","sendMessage","method","_this","req","String","_send","vsWorker","handleMessage","serializedMessage","_handleMessage","msg","seq","replyMessage","reply","requestMessage","detail","strMsg","stringify","simpleWorker_SimpleWorkerServer","_super","SimpleWorkerClient","workerFactory","lazyProxyReject","_worker","_protocol","getId","loaderConfiguration","require","getConfig","requirejs","contexts","_","config","_onModuleLoaded","_lazyProxy","availableMethods","proxy","availableMethods_1","methodName","createProxyMethod","proxyMethodRequest","_onError","_request","getProxyObject","info","SimpleWorkerServer","postSerializedMessage","requestHandler","_requestHandler","initialize","loaderConfig","methods","_a","prop","baseUrl","paths","vs","catchError","result","handlerModule","_b","mergeSort","compare","_sort","a","lo","hi","aux","mid","leftIdx","rightIdx","_merge","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","createStringSequence","getLength","getElementAtIndex","pos","charCodeAt","stringDiff","original","modified","pretty","diff_LcsDiff","ComputeDiff","Iterator","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","diff_DiffChangeHelper","DiffChangeHelper","m_changes","m_originalStart","Number","MAX_VALUE","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","LcsDiff","originalSequence","newSequence","continueProcessingPredicate","OriginalSequence","ModifiedSequence","ContinueProcessingPredicate","m_forwardHistory","m_reverseHistory","ElementsAreEqual","newIndex","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","changes","ComputeDiffRecursive","PrettifyChanges","quitEarlyArr","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","diagonal","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_VALUE","historyIndex","originalStartPoint","modifiedStartPoint","lastForwardChange","max","numDifferences","tempOriginalIndex","maxDifferences","numDiagonals","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","abs","matchLengthOfLongest","temp","change","originalStop","modifiedStop","checkOriginal","checkModified","mergedChangeArr","ChangesOverlap","splice","prevChange","bestDelta","bestScore","_boundaryScore","delta","score","_OriginalIsBoundary","index","element","test","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","iterator_extends","FIN","_empty","next","iterator","empty","fromArray","from","elements","map","filter","collect","ArrayNavigator","items","start","end","current","previous","last","parent","ArrayIterator","MappedIterator","uri_a","uri_extends","_schemePattern","_singleSlashStart","_doubleSlashStart","_throwOnMissingSchema","_slash","_regexp","uri_URI","URI","schemeOrData","authority","path","query","fragment","_strict","scheme","_referenceResolution","_validateUri","isUri","thing","fsPath","with","_makeFsPath","configurable","_URI","match","exec","decodeURIComponent","file","replace","idx","substring","components","skipEncoding","_asFormatted","toJSON","revive","_fsPath","_formatted","external","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","code","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","uri","toLowerCase","encoder","userinfo","fromCharCode","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","equals","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","clone","lift","isIPosition","range_Range","Range","startLineNumber","startColumn","endLineNumber","endColumn","isEmpty","range","containsPosition","position","containsRange","otherRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","fromPositions","isIRange","areIntersectingOrTouching","areIntersecting","compareRangesUsingStarts","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","compareRangesUsingEnds","spansMultipleLines","MAXIMUM_RUN_TIME","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","modifiedSequence","diffComputer_LineMarkerSequence","LineMarkerSequence","lines","startColumns","endColumns","length_1","_getFirstNonBlankColumn","_getLastNonBlankColumn","_lines","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","txt","defaultValue","str","chCode","firstNonWhitespaceIndex","startIndex","lastNonWhitespaceIndex","getCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","charChanges","createFromDiffResult","originalLineSequence","modifiedLineSequence","shouldComputeCharChanges","shouldPostProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","length_2","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","maximumRunTimeMs","computationStartTime","Date","getTime","_continueProcessingPredicate","lineChanges","length_3","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","Uint8Matrix","rows","cols","Uint8Array","_data","row","set","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","prefixSumComputer_PrefixSumComputer","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","Int32Array","getCount","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","changeValue","removeValues","cnt","maxCnt","getTotalValue","_getAccumulatedValue","getAccumulatedValue","getIndexOf","accumulatedValue","floor","low","high","midStop","midStart","mirrorTextModel_MirrorTextModel","PrefixSumComputerWithCache","_cacheAccumulatedValueStart","_cache","_actual","_bustCache","cacheIndex","warmUpCache","accumulatedValueStart","accumulatedValueEnd","newCache","MirrorTextModel","eol","versionId","_uri","_eol","_versionId","_lineStarts","getText","join","onEvents","changes_1","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","insertText","insertLines","split","newLengths","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","USUAL_WORD_SEPARATORS_1","sep","RegExp","createWordRegExp","characterClassifier_CharacterClassifier","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","charCode","linkComputer_StateMachine","CharacterSet","add","has","StateMachine","edges","maxCharCode","maxState","to","states","_states","_maxCharCode","nextState","currentState","_stateMachine","_classifier","LinkComputer","_createLink","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","computeLinks","model","stateMachine","getClassifier","lineCount","getLineCount","getLineContent","j","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","hasOpenCurlyBracket","resetStateMachine","chClass","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","lastIndexOf","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","event_Event","Node","linkedList_LinkedList","LinkedList","_size","_first","unshift","_insert","atTheEnd","newNode","oldLast","_last","prev","oldFirst","_remove","shift","node","candidate","anchor","Event","_disposable","thisArgs","disposables","didFire","snapshot","each","reduce","merge","initial","output","emitter","event_Emitter","onFirstListenerAdd","fire","onLastListenerRemove","latch","cache","firstCall","shouldEmit","signal","any","events","combinedDisposable","debounce","delay","leading","leakWarningThreshold","subscription","numDebouncedCalls","cur","_output","stopwatch","buffer","_buffer","flush","onFirstListenerDidAdd","echo","onListenerDidAdd","ChainableEvent","chain","fromNodeEventEmitter","eventName","fromPromise","toPromise","cancellation_CancellationToken","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","_warnCountdown","_stacks","clear","check","listenerCount","threshold","count","topStack_1","topCount_1","Emitter","options","_disposed","_options","_leakageMon","_event","_listeners","firstListener","removeMonitor","remove","size","_noop","_deliveryQueue","iter","event_1","shortcutEvent","EventMultiplexer","hasListeners","hook","didCall","functional_once","unhook","EventBufferer","buffers","wrapEvent","bufferEvents","pop","Relay","listening","inputEvent","inputEventListener","context","CancellationToken","isCancellationToken","Cancelled","cancellation_MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","MutableToken","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","SimpleKeybinding","ctrlKey","shiftKey","altKey","metaKey","isModifierKey","toChord","keyCodes_ChordKeybinding","isDuplicateModifierCase","MarkerTag","MarkerSeverity","KeyCode","SelectionDirection","ScrollbarVisibility","OverviewRulerLane","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TrackedRangeStickiness","ScrollType","CursorChangeReason","RenderMinimap","WrappingIndent","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","RenderLineNumbersType","ContentWidgetPositionPreference","OverlayWidgetPositionPreference","MouseTargetType","IndentAction","CompletionItemKind","CompletionItemInsertTextRule","CompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","ChordKeybinding","parts","selection_extends","selection_Selection","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","liftSelection","sel","selectionsArrEqual","isISelection","createWithDirection","direction","Token","offset","standaloneBase_KeyMod","KeyMod","chord","firstPart","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","editorSimpleWorker_extends","editorSimpleWorker_MirrorModel","MirrorModel","getValue","getLinesContent","getWordAtPosition","wordDefinition","wordAtText","textOffset","lastIndex","matchIndex","word","getWordAtPosSlow","getWordAtPosFast","getWordAtText","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","getWordUntilPosition","wordAtPosition","createWordIterator","lineText","wordRangesIdx","wordRanges","_wordenize","getLineWords","content","words","ranges_1","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","out","lineLength","hasChanged","maxCharacter","editorSimpleWorker_EditorSimpleWorkerImpl","EditorSimpleWorkerImpl","foreignModuleFactory","_models","_getModel","_getModels","keys","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","BaseEditorSimpleWorker","_foreignModuleFactory","_foreignModule","originalUrl","modifiedUrl","ignoreTrimWhitespace","identical","_modelsAreIdentical","originalLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","edits_1","_diffLimit","editOffset","newEdit","textualSuggest","wordDef","wordDefFlags","suggestions","wordDefRegExp","currentWord","seen","_suggestionsLimit","kind","label","computeWordRanges","words_1","selectionText","wordRange","loadForeignModule","createData","ctx","getMirrorModels","fmr","monaco","editor","languages","Uri","initialized","foreignModule","editorWorker","simpleWorker"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nexport var isWindows = _isWindows;\nexport var isMacintosh = _isMacintosh;\nexport var isLinux = _isLinux;\nexport var isNative = _isNative;\nexport var isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nexport var globals = _globals;\nvar _setImmediate = null;\nexport function setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\nexport { ErrorHandler };\nexport var errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n","export function isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nexport function dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nexport function combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nexport function toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\nexport { Disposable };\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\nexport { ImmortalReference };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nexport function validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _a;\n    if (isNativeClass(ctor)) {\n        return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n    }\n    else {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n}\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing) {\n    return typeof thing === 'function'\n        && thing.hasOwnProperty('prototype')\n        && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\nexport function getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport { getAllPropertyNames } from '../types.js';\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: transformErrorForSerialization(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(Disposable));\nexport { SimpleWorkerClient };\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\nexport { SimpleWorkerServer };\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nexport function groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nexport function firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = null; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nexport function flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nexport function range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\nexport { DiffChange };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\nexport { Debug };\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\nexport { MyArray };\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\nexport { LcsDiff };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var FIN = { done: true, value: undefined };\nexport var Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nexport function getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\nexport { ArrayIterator };\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\nexport { ArrayNavigator };\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\nexport { MappedIterator };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nimport { isWindows } from './platform.js';\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\nexport { Position };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new Position(this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new Position(this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\nexport { Range };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nexport var empty = '';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nexport function equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nexport function repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.firstNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = strings.lastNonWhitespaceIndex(txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\nexport { DiffComputer };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\nexport { Uint8Matrix };\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nexport function toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../core/uint.js';\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\nexport { PrefixSumIndexOfResult };\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = toUint32(startIndex);\n        cnt = toUint32(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\nexport { PrefixSumComputer };\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\nexport { PrefixSumComputerWithCache };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\nexport { MirrorTextModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport var DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from './uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\nexport { CharacterClassifier };\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\nexport { CharacterSet };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nimport { Uint8Matrix } from '../core/uint.js';\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\nexport { StateMachine };\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\nexport { LinkComputer };\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\nexport { BasicInplaceReplace };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FIN } from './iterator.js';\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return FIN;\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\nexport { LinkedList };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { onUnexpectedError } from './errors.js';\nimport { once as onceFn } from './functional.js';\nimport { combinedDisposable, Disposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nexport var Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Similar to `buffer` but it buffers indefinitely and repeats\n     * the buffered events to every new listener.\n     */\n    function echo(event, nextTick, buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (buffer === void 0) { buffer = []; }\n        buffer = buffer.slice();\n        event(function (e) {\n            buffer.push(e);\n            emitter.fire(e);\n        });\n        var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n        var emitter = new Emitter({\n            onListenerDidAdd: function (emitter, listener, thisArgs) {\n                if (nextTick) {\n                    setTimeout(function () { return flush(listener, thisArgs); });\n                }\n                else {\n                    flush(listener, thisArgs);\n                }\n            }\n        });\n        return emitter.event;\n    }\n    Event.echo = echo;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new LinkedList();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\nexport { Emitter };\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return toDisposable(onceFn(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\nexport { EventMultiplexer };\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\nexport { EventBufferer };\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\nexport { Relay };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new Emitter();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\nexport { CancellationTokenSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\nexport { SimpleKeybinding };\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\nexport { ChordKeybinding };\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\nexport { ResolvedKeybindingPart };\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\nexport { ResolvedKeybinding };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(Range));\nexport { Selection };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\nexport { Token };\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\nexport { TokenizationResult };\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\nexport { TokenizationResult2 };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './promise-polyfill/polyfill.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\nexport { KeyMod };\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { mergeSort } from '../../../base/common/arrays.js';\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { FIN } from '../../../base/common/iterator.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport { getAllPropertyNames } from '../../../base/common/types.js';\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return FIN;\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(BaseMirrorModel));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = mergeSort(edits, function (a, b) {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = stringDiff(original, text, false);\n            var editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(computeLinks(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n        var seen = Object.create(null);\n        seen[currentWord.word] = true;\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\nexport { BaseEditorSimpleWorker };\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\nexport { EditorSimpleWorkerImpl };\n/**\n * Called on the worker side\n * @internal\n */\nexport function create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorkerImpl } from './common/services/editorSimpleWorker.js';\nvar initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new EditorSimpleWorkerImpl(foreignModule);\n    var simpleWorker = new SimpleWorkerServer(function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"sourceRoot":""}