{"version":3,"sources":["../webpack/bootstrap b7afc7387f882c56b5bb","../node_modules/react/index.js","../node_modules/aphrodite/lib/index.js","styles.tsx","../node_modules/react-modal/lib/index.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/object-assign/index.js","../node_modules/css-in-js-utils/lib/isPrefixedValue.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/react-dom/index.js","../node_modules/asap/browser-raw.js","gitfs.tsx","../node_modules/prop-types/index.js","../config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/EventListener.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","../node_modules/fbjs/lib/focusNode.js","../node_modules/aphrodite/lib/util.js","auth.ts","Header.tsx","RPCClient.tsx","../node_modules/aphrodite/lib/generate.js","../node_modules/inline-style-prefixer/utils/capitalizeString.js","../node_modules/aphrodite/lib/ordered-elements.js","../node_modules/react-modal/lib/helpers/tabbable.js","../node_modules/react-modal/lib/helpers/ariaAppHider.js","../node_modules/react-modal/lib/helpers/refCount.js","../node_modules/react-modal/lib/helpers/safeHTMLElement.js","ModalSaving.tsx","index.tsx","App.tsx","../node_modules/inline-style-prefixer/static/createPrefixer.js","../node_modules/inline-style-prefixer/utils/prefixProperty.js","../node_modules/inline-style-prefixer/utils/prefixValue.js","../node_modules/inline-style-prefixer/utils/addNewValuesOnly.js","../node_modules/inline-style-prefixer/utils/isObject.js","../node_modules/aphrodite/lib/staticPrefixData.js","../node_modules/inline-style-prefixer/static/plugins/calc.js","../node_modules/inline-style-prefixer/static/plugins/crossFade.js","../node_modules/inline-style-prefixer/static/plugins/cursor.js","../node_modules/inline-style-prefixer/static/plugins/filter.js","../node_modules/inline-style-prefixer/static/plugins/flex.js","../node_modules/inline-style-prefixer/static/plugins/flexboxIE.js","../node_modules/inline-style-prefixer/static/plugins/flexboxOld.js","../node_modules/inline-style-prefixer/static/plugins/gradient.js","../node_modules/inline-style-prefixer/static/plugins/imageSet.js","../node_modules/inline-style-prefixer/static/plugins/position.js","../node_modules/inline-style-prefixer/static/plugins/sizing.js","../node_modules/inline-style-prefixer/static/plugins/transition.js","../node_modules/css-in-js-utils/lib/hyphenateProperty.js","../node_modules/hyphenate-style-name/index.js","../node_modules/string-hash/index.js","../node_modules/aphrodite/lib/exports.js","../node_modules/aphrodite/lib/inject.js","../node_modules/asap/browser-asap.js","Editor.tsx","../node_modules/react-monaco-editor/lib/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/fbjs/lib/invariant.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","logo.svg","ButtonGroup.tsx","monacoConfig/CodelensProvider.tsx","monacoConfig/Commands.tsx","monacoConfig/LILYPOND_COMPLETION_ITEM_PROVIDER.tsx","monacoConfig/NOTATION_SYMBOLS.tsx","monacoConfig/LILYPOND_MONARCH_PROVIDER.tsx","Menu.tsx","../node_modules/react-modal/lib/components/Modal.js","../node_modules/react-modal/lib/components/ModalPortal.js","../node_modules/react-modal/lib/helpers/focusManager.js","../node_modules/react-modal/lib/helpers/scopeTab.js","../node_modules/warning/browser.js","../node_modules/react-modal/lib/helpers/bodyClassList.js","../node_modules/exenv/index.js","Modal404.tsx","ModalAbout.tsx","ModalConflict.tsx","ModalLocked.tsx","ModalLogin.tsx","ModalPublish.tsx","ModalUnsavedChangesInterstitial.tsx","Preview.tsx","../node_modules/dompurify/dist/purify.js","base64Binary.ts","Logs.tsx","util/debounce.ts","../node_modules/lodash.debounce/index.js","StandaloneAppHost.jsx","util/queryString.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","__esModule","undefined","default","headers","common","Accept","adapter","transformRequest","transformResponse","parentJsonpFunction","window","chunkIds","moreModules","executeModules","chunkId","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","shift","2","e","onScriptComplete","script","onerror","onload","clearTimeout","timeout","chunk","Error","installedChunkData","Promise","resolve","promise","reject","head","document","getElementsByTagName","createElement","type","charset","async","nc","setAttribute","src","p","0","1","setTimeout","appendChild","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","n","object","property","oe","err","console","error","s","value","_generate","_exports3","obj","_interopRequireDefault","defaultSelectorHandlers","__WEBPACK_IMPORTED_MODULE_0_aphrodite__","APP_STYLE","create","errorDecoration","border","color","fontStyle","fontWeight","textDecoration","errorMask","backgroundColor","bottom","left","padding","position","right","textAlign","top","githubButton","borderLeft","maxHeight","overflow","monacoHidden","display","pendingPreviewMask","animationDuration","animationIterationCount","animationName","0%","opacity","50%","100%","animationTimingFunction","previewPendingMaskModeView","readOnlyNotification","height","zIndex","sheetMusicError","verticalAlign","sheetMusicView","alignItems","justifyContent","sheetMusicViewEdit","sheetMusicViewView","MODAL_STYLE","big","margin","width","closeButton","float","gpl","@media (max-width: 530px)","license","fontSize","marginTop","link",":hover","cursor","login","modal","borderRadius","boxSizing","modalBody","modalHeader","borderBottom","overlay","shareURL","signInPrivacy","MENU_STYLE","deleteSong","innerSongList","listStyle","marginLeft","paddingLeft","menu","::after","@media (max-width: 500px)","borderBottomColor","borderLeftColor","borderRightColor","borderStyle","borderTopColor","borderWidth","content","pointerEvents","flexDirection","outline","menuColumn","marginRight","flex","paddingRight","menuOverlay","option","marginBottom","placeholder","transform","placeholderLink","section","paddingBottom","song","songList","HEADER_STYLE","headerGroupWrapper","headerSpacer","logo","miniGroup","modeItem","paddingTop","newSong","playButton","playTime","publish","publishActive","songs","songsText","srOnly","clip","GITHUB_STYLE","btnGithub",":active","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","lineHeight","transition","BUTTON_STYLE","buttonStyle",":first-child","borderBottomLeftRadius","borderTopLeftRadius",":focus",":last-child","borderBottomRightRadius","borderRight","borderTopRightRadius","selectedStyle","LOGS_STYLE","logsButton","mask","PUBLISH_STYLE","cell","whiteSpace","fontFamily","expand","footer","mono","publishBtn",":disabled","row","_Modal2","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","join","test3","split","forEach","letter","keys","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","arguments","key","regex","test","emptyObject","noop","fn","_75","_83","_18","_38","doResolve","handle","self","deferred","_47","asap","cb","onFulfilled","onRejected","ret","a","ex","LAST_ERROR","IS_ERROR","tryCallOne","handleResolved","newValue","then","getThen","finale","bind","_71","Handler","done","res","b","tryCallTwo","reason","_44","constructor","safeThen","g","Function","eval","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","global","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","createTextNode","observe","characterData","data","makeRequestCallFromMutationObserver","auth","repoParts","repo","accessToken","username","repoName","fetch","Date","getTime","Authorization","response","_a","sent","status","FileNotFound","json","getRepo","body","JSON","stringify","auto_init","description","has_issues","has_pages","has_projects","has_wiki","homepage","Content-Type","method","createRepo","err_1","ref","file","path","sha","filename","atob","base64","branch","message","Conflict","statusText","__webpack_exports__","enable","disable","enabled","matchWhitelist","list","some","cls","DEFAULT_WHITELIST","ReferenceError","RangeError","options","onUnhandled","id","allRejections","rejections","whitelist","displayId","logged","warn","stack","line","logError","_56","onHandled","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","args","Array","slice","remaining","race","values","normalizeName","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","support","iterable","Symbol","Headers","append","isArray","header","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","text","readAsText","readBlobAsText","chars","readArrayBufferAsText","decode","parse","Request","input","url","credentials","mode","upcased","toUpperCase","methods","indexOf","normalizeMethod","referrer","form","trim","bytes","replace","decodeURIComponent","Response","bodyInit","ok","viewClasses","DataView","isView","oldValue","has","thisArg","entries","clone","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","rawHeaders","parts","parseHeaders","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","y","encodeURIComponent","framesToPop","A","props","context","refs","updater","z","B","C","E","J","k","H","I","f","children","h","defaultProps","$$typeof","r","_owner","G","current","K","N","M","pop","keyPrefix","func","count","O","P","t","u","v","Q","x","=",":","escape","R","S","T","L","q","w","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","D","isPureReactComponent","F","unstable_isAsyncReactComponent","render","__self","__source","U","Children","toArray","only","Component","PureComponent","unstable_AsyncComponent","Fragment","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","V","freeze","W","pa","va","oa","wa","hasBooleanValue","hasStringBooleanValue","hasOverloadedBooleanValue","ua","Ia","Ja","_hasCaughtError","_caughtError","apply","Na","La","Ma","Oa","extractEvents","eventTypes","Pa","phasedRegistrationNames","Qa","registrationName","Ra","Sa","dependencies","Ta","Ua","Za","currentTarget","Ya","invokeGuardedCallbackAndCatchFirstError","$a","concat","ab","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","db","gb","ib","stateNode","Wa","disabled","jb","kb","bb","lb","rethrowCaughtError","pb","parentNode","tag","qb","rb","ob","tb","ub","vb","dispatchConfig","wb","_targetInst","xb","yb","zb","Ab","Bb","alternate","Eb","Db","canUseDOM","documentElement","Fb","_fallbackText","_startText","Gb","_root","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","Kb","eventPool","Lb","destructor","Jb","getPooled","Mb","Nb","dc","Pb","keyCode","ec","detail","mc","Xa","jc","restoreControlledState","oc","kc","lc","pc","rc","tc","sc","vc","nodeName","uc","wc","srcElement","correspondingUseElement","nodeType","yc","xc","implementation","hasFeature","zc","Bc","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ac","Cc","checked","Ec","Dc","change","Hc","Ic","Jc","Lc","Fc","detachEvent","Mc","Gc","propertyName","Nc","attachEvent","Oc","Pc","$c","bd","dd","getModifierState","cd","ed","fd","jd","displayName","kd","effectTag","ld","_reactInternalFiber","md","nd","child","sibling","rd","targetInst","ancestors","containerInfo","sd","topLevelType","ud","td","ba","listen","vd","wd","capture","qd","yd","Cd","Ad","zd","Bd","Hd","Gd","Fd","Ed","Id","firstChild","Jd","textContent","offset","nextSibling","Kd","contentEditable","Rd","Qd","Nd","da","start","selectionStart","end","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Pd","ea","Md","select","Od","Td","Ud","Vd","Wd","charCode","Zd","$d","ae","be","ce","he","ge","ke","le","je","ie","me","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","ne","X","pe","getChildContext","qe","__reactInternalMemoizedMergedChildContext","re","Y","memoizedState","updateQueue","memoizedProps","pendingProps","internalContextTag","lastEffect","firstEffect","nextEffect","expirationTime","se","te","ue","ve","we","handler","xe","ye","pendingChildren","Be","De","ze","Ee","Ae","Fe","baseState","first","last","callbackList","hasForceUpdate","isInitialized","Ge","He","Ie","partialState","Je","isReplace","isForced","Ke","Xe","We","Ze","_stringRef","$e","af","Map","Re","Ve","Se","Te","Ue","Ye","df","cf","bf","state","pendingContext","shouldSetTextContent","useSyncScheduling","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","enterHydrationState","resetHydrationState","tryToClaimNextHydratableInstance","nextCallback","adoptClassInstance","constructClassInstance","mountClassInstance","componentWillMount","componentDidMount","updateClassInstance","componentWillReceiveProps","componentDidUpdate","shouldComponentUpdate","componentWillUpdate","Le","Ob","beginWork","element","hydrate","beginFailedWork","kf","Qb","ja","isReadyForCommit","yg","zg","Ag","Ne","Oe","Sc","Bg","Tc","Cg","Dg","Eg","componentDidCatch","componentStack","ca","Qc","ha","qa","Fg","rg","Gg","Uc","ra","Rc","eb","qg","Set","add","_debugOwner","_debugSource","fileName","lineNumber","componentName","errorBoundary","errorBoundaryFound","errorBoundaryName","willRetry","suppressReactErrorLogging","Vc","ka","Hg","Rb","Ig","nextScheduledRoot","remainingExpirationTime","sa","Fa","la","Sb","ma","na","Wc","Pe","Tb","Jg","Xc","Kg","fb","Yc","Ub","Zc","finishedWork","timeRemaining","Lg","gf","getChildHostContext","getRootHostContext","getHostContext","getRootHostContainer","popHostContainer","popHostContext","resetHostContainer","hf","hydration","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","jf","Me","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","mutation","completeWork","ef","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitAttachRef","commitDetachRef","ff","now","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","computeAsyncExpiration","computeExpirationForFiber","scheduleWork","batchedUpdates","unbatchedUpdates","flushSync","deferredUpdates","lf","od","createContainer","updateContainer","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","pd","injectIntoDevTools","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Ce","findHostInstanceByFiber","If","mutationMethod","hasNumericValue","isNaN","hasPositiveNumericValue","Jf","mustUseProperty","attributeName","attributeNamespace","setAttributeNS","Kf","Gf","Ff","Ef","Hf","removeAttribute","Lf","step","min","max","defaultChecked","defaultValue","_wrapperState","initialValue","initialChecked","Mf","controlled","Nf","Of","parseFloat","Pf","Rf","aa","Qf","Sf","selected","defaultSelected","Tf","wasMultiple","multiple","Uf","dangerouslySetInnerHTML","Vf","Wf","Xf","Zf","$f","cg","lastChild","nodeValue","fg","style","dg","setProperty","hg","gg","ig","is","lg","ownerDocument","topBlur","topFocus","topCancel","topClose","Dd","ng","jg","innerHTML","createElementNS","og","pg","mg","kg","__html","bg","onClick","onclick","sg","tg","ug","vg","Ng","Pg","_reactRootContainer","Z","hasAttribute","Og","Qg","pf","Rg","fa","ia","suppressContentEditableWarning","suppressHydrationWarning","ta","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","HAS_STRING_BOOLEAN_VALUE","injectDOMPropertyConfig","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMMutationMethods","xa","ya","za","Aa","Ba","Ca","Da","allowFullScreen","autoFocus","autoPlay","cols","controls","defer","download","draggable","formNoValidate","hidden","loop","muted","noValidate","playsInline","readOnly","required","reversed","rows","rowSpan","scoped","seamless","size","span","spellCheck","tabIndex","itemScope","acceptCharset","className","htmlFor","httpEquiv","validity","badInput","activeElement","Ea","Ga","autoReverse","externalResourcesRequired","preserveAlpha","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","Ha","_rethrowError","_hasRethrowError","injection","injectErrorUtils","invokeGuardedCallback","hasCaughtError","clearCaughtError","Va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","hb","mb","getListener","enqueueEvents","processEventQueue","nb","Math","random","sb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","Cb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","Hb","Ib","eventPhase","bubbles","cancelable","timeStamp","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","augmentClass","Vb","Wb","documentMode","Xb","Yb","opera","parseInt","Zb","$b","ac","bc","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","cc","fc","ic","which","gc","ctrlKey","altKey","metaKey","char","hc","injectFiberControlledHostComponent","qc","enqueueStateRestore","restoreStateIfNeeded","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","week","Kc","ad","_isInputEventSupported","getAttribute","Alt","Control","Meta","Shift","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","mouseEnter","mouseLeave","hd","defaultView","parentWindow","xd","_enabled","_handleTopLevel","setHandleTopLevel","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","animationend","animationiteration","animationstart","transitionend","animation","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoad","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","Ld","Sd","onSelect","elapsedTime","pseudoElement","clipboardData","Xd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Yd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","repeat","locale","dataTransfer","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","de","ee","fe","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Qe","mf","nf","of","qf","performance","rf","sf","tf","requestIdleCallback","cancelIdleCallback","Bf","uf","vf","wf","xf","yf","zf","Af","didTimeout","Cf","addEventListener","requestAnimationFrame","Df","postMessage","Infinity","Yf","ag","MSApp","execUnsafeLocalFunction","namespaceURI","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","lineClamp","order","orphans","tabSize","widows","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","eg","charAt","substring","menuitem","area","base","br","col","embed","hr","img","keygen","meta","param","track","wbr","wg","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","xg","Mg","tagName","rangeCount","focusedElem","selectionRange","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","focus","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","unmount","Sg","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","bundleType","rendererPackageName","Tg","Ug","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","EventListener","eventType","remove","removeEventListener","registerDefault","doc","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","Node","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_stringHash2","mapObj","mappedObj","_fn","_fn2","newKey","UPPERCASE_RE","UPPERCASE_RE_TO_KEBAB","match","kebabifyStyleName","string","isUnitlessNumber","prefixes","prop","prefix","prefixKey","stringifyValue","stringifyAndImportantifyValue","importantify","hashString","hashObject","getOauthRedirect","csrf","CLIENT_ID","SCOPE","rpc","token","alert","reload","code","oauth","parsedAuth","href","__WEBPACK_IMPORTED_MODULE_4__styles__","MODE_VIEW","MODE_BOTH","MODE_EDIT","MIN_BOTH_WIDTH","Header","_super","_this","played","player","playing","timeInSeconds","handleFastForward","seek","handlePause","__awaiter","pause","handlePlay","midi","playerFromMIDIBuffer","addChangeListener","handlePlaying","play","wasPlaying","destroy","log","handleRewind","handleShowMakelily","onShowMakelily","__extends","player_1","loggedIn","onModeChanged","onShowMenu","windowWidth","_b","modeButtons","__WEBPACK_IMPORTED_MODULE_1_react___default","aria-hidden","title","viewMode","__WEBPACK_IMPORTED_MODULE_3__ButtonGroup__","onChange","makelilyButton","communityToolbar","renderCommunityToolbar","isDirty","__WEBPACK_IMPORTED_MODULE_2__logo_svg__","alt","renderTime","saveAsButton","online","onShowClone","onShowNew","onShowPublish","sandboxIsDirty","inSandbox","isImmutableSrc","micro","goToSandbox","saveShare","fmtTime","floor","PING_INTERVAL","RPCClient","socket","rejectors","resolvers","handleWSMessage","ping","pingInterval","params","genID","jsonrpc","readyState","WebSocket","OPEN","rejection","randomContainer","Uint32Array","crypto","getRandomValues","_extends","_inlineStylePrefixerStaticCreatePrefixer2","_libStaticPrefixData2","_orderedElements2","_util","prefixAll","selector","baseSelector","generateSubtreeStyles","generateCSS","styleTypes","selectorHandlers","stringHandlers","useImportant","merged","addStyleType","plainDeclarations","generatedStyles","newSelector","generateCSSRuleset","transformRule","transformValue","declarations","stringHandlerKeys","runStringHandlers","originalElements","elements","prefixedElements","elementNames","keyOrder","originalStyle","originalIndex","splice","unshift","rules","j","str","_createClass","defineProperties","descriptor","writable","Constructor","protoProps","staticProps","MAP_EXISTS","OrderedElements","instance","_classCallCheck","shouldReorder","_ret","nested","styleType","_this2","hidesContents","zeroSize","offsetWidth","offsetHeight","getComputedStyle","getPropertyValue","focusable","isTabIndexNotNaN","tabbableNode","parentElement","visible","tabbable","isTabIndexNaN","filter","assertNodeList","nodeList","validateElement","appElement","globalElement","_warning2","setElement","useElement","el","hide","show","documentNotReadyOrSSRTesting","resetForTesting","classListMap","bodyClass","totalCount","reduce","acc","curr","EE","SafeHTMLElement","HTMLElement","__WEBPACK_IMPORTED_MODULE_3__styles__","ModalSaving","__WEBPACK_IMPORTED_MODULE_2_react_modal__","contentLabel","isOpen","overlayClassName","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_2__App__","__assign","getQueryProps","dirtySongs","localStorage","getItem","startsWith","getDirtySongs","__WEBPACK_IMPORTED_MODULE_3__auth__","colourScheme","setQuery","editSong","markSongClean","setAuth","setColourScheme","setCSRF","isStandalone","NODE_ENV","PUBLIC_URL","HOMEPAGE","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_BACKEND_WS_URL","REACT_APP_STANDALONE","getElementById","hash","queryObj","__WEBPACK_IMPORTED_MODULE_4__util_queryString__","query","queryPropIdx","queryPropKey","queryUpdates","replaceState","origConnector","queryString","connector","newUrl","history","pushState","songID","csrfQueryParams","ev","__WEBPACK_IMPORTED_MODULE_18__styles__","INITIAL_WS_COOLOFF","BACKEND_WS_URL","PUBLIC_READONLY","QUERY_PROP_KEYS","DEFAULT_SONG","App","cleanSongs","null","baseSHA","connectToGitHubReason","defaultSelection","interstitialChanges","localFiles","locked","logs","makelilyClef","makelilyKey","makelilySingleTaskMode","makelilyTime","makelilyTool","innerWidth","__WEBPACK_IMPORTED_MODULE_5__Header__","pendingPreviews","reconnectCooloff","reconnectTimeout","NaN","saving","showMakelily","wsError","editor","standaloneAppHost","cancelInterstitial","discardChanges","edit","handleBeforeUnload","handleClear404","404","handleCodeChanged","handleDeleteSong","__WEBPACK_IMPORTED_MODULE_12__ModalPublish__","handleEditingNotification","handleExport","handleFind","find","handleFindNext","findNext","handleHideHelp","about","handleHideLogin","handleHideMakelily","makelilyInsertCB","handleHideMenu","handleHidePublish","saveAs","handleImport","handleShowPublish","handleImportRejected","standaloneImport","handleImportRequested","setQueryOrShowInterstitial","handleInsertLy","ly","insertText","handleLoadSong","handleLocalFilesChanged","handleLogsObtained","handleMidiObtained","handleModeChanged","handleModeChangedEdit","handleModeChangedSplit","handleModeChangedView","handleOpen","handleOpenFileStandalone","contents","handlePublished","handleResolveGitHub","handleResolveLocalStorage","handleSelectAll","selectAll","handleSelectionChanged","selection","handleShowHelp","tool","makelilyComponent","getMakelilyProperties","handleShowMenu","handleShowNew","isClean","handleUpdateGitHub","handleShowSaveAs","handleSignIn","handleSignOut","clear","__WEBPACK_IMPORTED_MODULE_2__auth__","handleWindowResize","handleWSError","disconnectWS","wsReconnectTick","handleWSOpen","__WEBPACK_IMPORTED_MODULE_16__RPCClient__","_c","__WEBPACK_IMPORTED_MODULE_4__gitfs__","repoDetails","err_2","err_3","setEditor","updates","setStandaloneAppHost","standalonePublish","fullPath","save","err_4","standaloneRender","filetype","renderLy","secondsRemaining","connectToWS","prevProps","fetchSong","__WEBPACK_IMPORTED_MODULE_10__ModalLocked__","isOnline","preview","renderPreview","Boolean","__WEBPACK_IMPORTED_MODULE_17__StandaloneAppHost__","showOpenDialog","showSaveAs","showUnsavedChangesDialog","showImport","showSaving","onNewSong","onOpen","onOpenFile","onOpenCancel","onImport","onImportRejected","onRequestImport","onSave","onSaveAsCancel","onSaveAsFile","onFind","onFindNext","onViewMode","onSelectAll","onSplitMode","onCodeMode","onAboutHacklily","onExportRequested","onLocalFilesChanged","onUnsavedChangesCancel","onUnsavedChangesDiscard","onUnsavedChangesSave","renderModal","__WEBPACK_IMPORTED_MODULE_3__Editor__","onSetCode","close","requestedRepo","requestedFile","req","hasConflict","songName","dirtySong","cleanSong","_404","conflict","__WEBPACK_IMPORTED_MODULE_7__Modal404__","onHide","__WEBPACK_IMPORTED_MODULE_13__ModalSaving__","__WEBPACK_IMPORTED_MODULE_9__ModalConflict__","resolveGitHub","resolveLocalStorage","__WEBPACK_IMPORTED_MODULE_11__ModalLogin__","__WEBPACK_IMPORTED_MODULE_8__ModalAbout__","onPublished","__WEBPACK_IMPORTED_MODULE_6__Menu__","onDeleteSong","onShowAbout","onSignIn","onSignOut","onLoadSong","__WEBPACK_IMPORTED_MODULE_14__ModalUnsavedChangesInterstitial__","cancel","MakelilyComponent","clef","defaultTool","keySig","singleTaskMode","onInsertLy","songURL","songParts","__WEBPACK_IMPORTED_MODULE_15__Preview__","onLogsObtained","onMidiObtained","onSelectionChanged","previewMaskStyle","_ref","_isObject2","combinedValue","len","processedValue","_prefixValue2","prefixMap","_addNewValuesOnly2","_processedValue","_prefixProperty2","prefixProperties","requiredPrefixes","_capitalizeString2","metaData","addIfNew","calc","crossFade","flexboxIE","flexboxOld","gradient","imageSet","sizing","transformOrigin","transformOriginX","transformOriginY","backfaceVisibility","perspective","perspectiveOrigin","transformStyle","transformOriginZ","animationDelay","animationDirection","animationFillMode","animationPlayState","appearance","userSelect","fontKerning","textEmphasisPosition","textEmphasis","textEmphasisStyle","textEmphasisColor","boxDecorationBreak","clipPath","maskImage","maskMode","maskRepeat","maskPosition","maskClip","maskOrigin","maskSize","maskComposite","maskBorderSource","maskBorderMode","maskBorderSlice","maskBorderWidth","maskBorderOutset","maskBorderRepeat","maskBorder","maskType","textDecorationStyle","textDecorationSkip","textDecorationLine","textDecorationColor","fontFeatureSettings","breakAfter","breakBefore","breakInside","columnFill","columnGap","columnRule","columnRuleColor","columnRuleStyle","columnRuleWidth","columnSpan","columnWidth","flexBasis","flexFlow","flexWrap","alignContent","alignSelf","transitionDelay","transitionDuration","transitionProperty","transitionTimingFunction","backdropFilter","scrollSnapType","scrollSnapPointsX","scrollSnapPointsY","scrollSnapDestination","scrollSnapCoordinate","shapeImageThreshold","shapeImageMargin","shapeImageOutside","hyphens","flowInto","flowFrom","regionFragment","textAlignLast","wrapFlow","wrapThrough","wrapMargin","touchAction","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridTemplate","gridAutoColumns","gridAutoRows","gridAutoFlow","grid","gridColumnGap","gridRowGap","gridArea","gridGap","textSizeAdjust","borderImage","borderImageRepeat","borderImageSource","_isPrefixedValue2","zoom-in","zoom-out","grab","grabbing","inline-flex","alternativeProps","alternativeValues","space-around","space-between","flex-start","flex-end","WebkitBoxOrient","WebkitBoxDirection","wrap-reverse","wrap","properties","maxWidth","minWidth","minHeight","min-content","max-content","fill-available","fit-content","contain-floats","propertyPrefixMap","outputValue","multipleValues","singleValue","dashCaseProperty","_hyphenateProperty2","pLen","prefixMapping","prefixValue","webkitOutput","mozOutput","WebkitTransition","WebkitTransitionProperty","MozTransition","MozTransitionProperty","Webkit","Moz","ms","_hyphenateStyleName2","uppercasePattern","msPattern","cache","charCodeAt","_inject","StyleSheet","sheetDefinition","_ref2","stringVal","_len","_name","_definition","rehydrate","renderedClassNames","addRenderedClassNames","StyleSheetServer","renderStatic","renderFunc","reset","startBuffering","html","css","flushToString","getRenderedClassNames","StyleSheetTestUtils","suppressStyleInjection","clearBufferAndResumeStyleInjection","makeExports","extensions","extensionSelectorHandlers","extension","selectorHandler","styleDefinitions","_key","injectAndGetClassName","_asap2","styleTag","injectStyleOnce","finalVal","valVal","valKey","injectGeneratedCSSOnce","alreadyInjected","injectionBuffer","isBuffering","generatedCSS","flushToStyleTag","definitions","generated","cssContent","cssContents","querySelector","styleSheet","cssText","injectStyleTag","classNames","processedStyleDefinitions","classNameBits","definitionBits","processStyleDefinitions","styleDefinition","rawTask","freeTasks","RawTask","pendingErrors","requestErrorThrow","__WEBPACK_IMPORTED_MODULE_8__styles__","registeredMonacoComponents","Editor","commands","__WEBPACK_IMPORTED_MODULE_5__monacoConfig_Commands__","oldDecorations","handleEditorDidMount","monacoModule","handleResize","handleEditorWillMount","languages","register","setMonarchTokensProvider","__WEBPACK_IMPORTED_MODULE_7__monacoConfig_LILYPOND_MONARCH_PROVIDER__","registerCompletionItemProvider","__WEBPACK_IMPORTED_MODULE_6__monacoConfig_LILYPOND_COMPLETION_ITEM_PROVIDER__","registerCodeLensProvider","__WEBPACK_IMPORTED_MODULE_4__monacoConfig_CodelensProvider__","layout","errors","matchErrors","exec","hoverMessage","inlineClassName","linesDecorationsClassName","endColumn","endLineNumber","startColumn","startLineNumber","deltaDecorations","setSelection","revealLineInCenter","selectionStartLineNumber","trigger","extractFirst","extractLast","timeRegex","clefRegex","keyRegex","codeBeforeCursor","lines","getPosition","column","op","forceMoveMarkers","identifier","major","minor","monaco","Range","executeEdits","monacoOptions","autoClosingBrackets","minimap","selectionHighlight","wordBasedSuggestions","readOnlyNotice","__WEBPACK_IMPORTED_MODULE_3__Header__","__WEBPACK_IMPORTED_MODULE_2_react_monaco_editor___default","editorDidMount","editorWillMount","language","theme","_react2","_propTypes2","MonacoEditor","_React$Component","_possibleConstructorReturn","__proto__","getPrototypeOf","afterViewInit","requireConfig","inElectron","process","loaderUrl","electronNodeRequire","require","onGotAmdLoader","__REACT_MONACO_EDITOR_LOADER_ISPENDING__","monacoPath","__dirname","amdRequireBaseUrl","encodeURI","config","baseUrl","browser","paths","vs","initMonaco","loaderCallbacks","__REACT_MONACO_EDITOR_LOADER_CALLBACKS__","currentCallback","loaderScript","assignRef","component","containerElement","__current_value","subClass","superClass","setPrototypeOf","_inherits","__prevent_trigger_change_event","setModelLanguage","getModel","destroyMonaco","onDidChangeModelContent","event","_props","setTheme","dispose","_props2","propTypes","oneOfType","invariant","ReactPropTypesSecret","shim","propName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bool","symbol","any","arrayOf","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","validateFormat","format","condition","argIndex","__WEBPACK_IMPORTED_MODULE_2__styles__","ButtonGroup","handleClick","toggleSelect","dataset","buttonGroupClassName","data-value","allowEmpty","CodelensProvider","provideCodeLenses","model","getLinesContent","memos","memo","command","setClef","setKey","setTime","insertNotes","resolveCodeLens","codeLens","Commands","moveToStartOfNextLine","lineIdx","setPosition","replaceLine","whitespace","whitespacePrefix","addCommand","internal","__WEBPACK_IMPORTED_MODULE_0__NOTATION_SYMBOLS__","LILYPOND_COMPLETION_ITEM_PROVIDER","provideCompletionItems","textUntilPosition","getValueInRange","kind","label","REGEX_COMMAND_SLASH","NOTATION_SYMBOLS","documentation","cleanUp","tokenPostfix","brackets","tokenizer","root","action","bracket","include","comment","lyricmode","dstring","cases","$#==$S3","@default","repoError","repoTree","fetchSongs","__WEBPACK_IMPORTED_MODULE_3__gitfs__","handleColourSchemeToggled","newColourScheme","handleSongDeleteClick","handleSongLiClick","signOut","warning","tutorial","rel","onRequestClose","renderSongs","renderSetColourScheme","lilySongs","endsWith","sort","eachSong","data-song","getParentElement","parentSelector","bodyOpenClassName","portalClassName","_react","_reactDom2","_ModalPortal2","ariaAppHider","newObj","_interopRequireWildcard","_safeHTMLElement","_safeHTMLElement2","isReact16","Modal","_Component","_temp","removePortal","portalRef","portal","renderPortal","defaultStyles","newProps","currentParent","newParent","closesAt","closeTimeoutMS","beforeClose","closeWithTimeout","afterOpen","onAfterOpen","ariaHideApp","shouldFocusAfterRender","shouldCloseOnOverlayClick","shouldReturnFocusAfterClose","aria","role","shouldCloseOnEsc","background","WebkitOverflowScrolling","_typeof","focusManager","_scopeTab2","refCount","bodyClassList","CLASS_NAMES","TAB_KEY","ESC_KEY","ModalPortal","setFocusAfterRender","focusAfterRender","setOverlayRef","setContentRef","afterClose","_this$props","returnFocus","teardownScopedFocus","popWithoutFocus","beforeOpen","closeTimer","setupScopedFocus","markForFocusLater","closeWithoutTimeout","focusContent","contentHasFocus","handleKeyDown","requestClose","handleOverlayOnClick","shouldClose","ownerHandlesClose","moveFromContentToOverlay","handleOverlayOnMouseUp","handleContentOnMouseUp","handleOverlayOnMouseDown","handleContentOnClick","handleContentOnMouseDown","shouldBeClosed","buildClassName","additional","ariaAttributes","contentStyles","overlayStyles","onMouseDown","onMouseUp","aria-modal","onKeyDown","aria-label","handleBlur","needToFocus","handleFocus","modalElement","_tabbable2","focusLaterElements","toFocus","tail","checkSafari","navigator","userAgent","classList","__WEBPACK_AMD_DEFINE_RESULT__","Modal404","ModalAbout","ModalConflict","setItem","removeItem","editingNotificationHandler","ModalLocked","ModalLogin","explanation","doPublish","overwrite","backend","pdf","files","pdfFilename","candidate","pdfFile","btoa","p1","b64EncodeUnicode","__WEBPACK_IMPORTED_MODULE_5__styles__","ModalPublish","invitationRequired","handleChange","handleSave","didFail","loadExistingSongs","__WEBPACK_IMPORTED_MODULE_4__ModalSaving__","ModalUnsavedChangesInterstitial","__WEBPACK_IMPORTED_MODULE_7__util_debounce__","BODY_IFRAME_TEMPLATE","Preview","previewAlreadyDirty","iframeLoaded","previousMIDIData","handleIFrameLoaded","contentWindow","localName","pathAndLocation","positionColumn","positionLineNumber","selectionStartColumn","handleModeDidChange","__WEBPACK_IMPORTED_MODULE_4__Header__","handleSetSheetMusicView","fetchNewPreview","__WEBPACK_IMPORTED_MODULE_6__styles__","__WEBPACK_IMPORTED_MODULE_2_react___default","frameBorder","renderPublishedURL","__WEBPACK_IMPORTED_MODULE_5__Logs__","dirtyLogs","reply","cleanLogs","scrollHeight","__WEBPACK_IMPORTED_MODULE_1_dompurify___default","sanitize","ALLOW_UNKNOWN_PROTOCOLS","__WEBPACK_IMPORTED_MODULE_3__base64Binary__","svgs","svgs_1","svg","__decorate","factory","addToSet","newObject","_toConsumableArray","arr2","createDOMPurify","getGlobal","DOMPurify","removed","isSupported","originalDocument","useDOMParser","useXHR","DocumentFragment","HTMLTemplateElement","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","_window$XMLHttpReques","_window$encodeURI","template","_document","createNodeIterator","createDocumentFragment","importNode","hooks","createHTMLDocument","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","svgFilters","mathMl","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","html$1","svg$1","mathMl$1","xml","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","MUSTACHE_EXPR","ERB_EXPR","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_TAGS","ADD_ATTR","ADD_URI_SAFE_ATTR","_forceRemove","outerHTML","_removeAttribute","attribute","getAttributeNode","_initDocument","dirty","parseFromString","firstElementChild","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","elm","attributes","_isClobbered","allowedTags","insertAdjacentHTML","cloneNode","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_sanitizeAttributes","attr","lcName","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","nodeIterator","setConfig","clearConfig","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","removePaddingChars","keyStr","inputStr","chr1","chr2","chr3","enc1","enc2","enc3","enc4","uarray","Logs","hover","handleMouseClick","handleMouseEnter","handleMouseLeave","onMouseLeave","onMouseEnter","propertyKey","originalMethod","__WEBPACK_IMPORTED_MODULE_0_lodash_debounce___default","__WEBPACK_IMPORTED_MODULE_0_lodash_debounce__","isObject","toNumber","objectToString","symbolTag","isSymbol","NAN","other","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","FUNC_ERROR_TEXT","freeGlobal","freeSelf","nativeMax","nativeMin","wait","invokeFunc","lastArgs","lastThis","lastInvokeTime","shouldInvoke","timeSinceLastCall","lastCallTime","maxing","maxWait","timerExpired","trailingEdge","timerId","remainingWait","trailing","debounced","isInvoking","leading","leadingEdge","__WEBPACK_IMPORTED_MODULE_1__gitfs__","Connection","disconnect","connect","StandaloneAppHost","channel","objects","webContentsBridge","remoteFiles","handleRenderCompleted","handleRenderError","unsavedChangesSave","unsavedChangesCancel","unsavedChangesDiscard","openCancel","openFile","renderCompleted","renderError","saveAsCancel","saveAsFile","pathChanged","QWebChannel","qt","webChannelTransport","unsavedChangesModalVisible","openDialogVisible","saveAsVisible","importVisible","savingVisible","qstr","a_1","substr","item"],"mappings":"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","file":"static/js/app.c16c41e5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [], result;\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// objects to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\t(function (module) {\n \t\t  if (module.exports\n \t\t    && !module.exports.__esModule\n \t\t    && module.exports.default === undefined\n \t\t  ) {\n \t\t    if (module.exports.headers\n \t\t      && module.exports.headers.common\n \t\t      && module.exports.headers.common.Accept\n \t\t      && module.exports.adapter\n \t\t      && module.exports.transformRequest\n \t\t      && module.exports.transformResponse\n \t\t    ) {\n \t\t      return;\n \t\t    }\n \t\t    module.exports.default = module.exports;\n \t\t  }\n \t\t})(module);\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData === 0) {\n \t\t\treturn new Promise(function(resolve) { resolve(); });\n \t\t}\n\n \t\t// a Promise means \"currently loading\".\n \t\tif(installedChunkData) {\n \t\t\treturn installedChunkData[2];\n \t\t}\n\n \t\t// setup Promise in chunk cache\n \t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t});\n \t\tinstalledChunkData[2] = promise;\n\n \t\t// start chunk loading\n \t\tvar head = document.getElementsByTagName('head')[0];\n \t\tvar script = document.createElement('script');\n \t\tscript.type = 'text/javascript';\n \t\tscript.charset = 'utf-8';\n \t\tscript.async = true;\n \t\tscript.timeout = 120000;\n\n \t\tif (__webpack_require__.nc) {\n \t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t}\n \t\tscript.src = __webpack_require__.p + \"static/js/\" + ({}[chunkId]||chunkId) + \".\" + {\"0\":\"dc208eea\",\"1\":\"f60b90b5\"}[chunkId] + \".chunk.js\";\n \t\tvar timeout = setTimeout(onScriptComplete, 120000);\n \t\tscript.onerror = script.onload = onScriptComplete;\n \t\tfunction onScriptComplete() {\n \t\t\t// avoid mem leaks in IE.\n \t\t\tscript.onerror = script.onload = null;\n \t\t\tclearTimeout(timeout);\n \t\t\tvar chunk = installedChunks[chunkId];\n \t\t\tif(chunk !== 0) {\n \t\t\t\tif(chunk) {\n \t\t\t\t\tchunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));\n \t\t\t\t}\n \t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t}\n \t\t};\n \t\thead.appendChild(script);\n\n \t\treturn promise;\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b7afc7387f882c56b5bb","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 0\n// module chunks = 2 3","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _generate = require('./generate');\n\nvar _exports2 = require('./exports');\n\nvar _exports3 = _interopRequireDefault(_exports2);\n\nvar useImportant = true; // Add !important to all style definitions\nexports['default'] = (0, _exports3['default'])(useImportant, _generate.defaultSelectorHandlers);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/index.js\n// module id = 1\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { StyleSheet } from 'aphrodite';\n\n// tslint:disable:typedef\n\nconst previewPendingAnimation = {\n  '0%': {\n    opacity: 0.0,\n  },\n  '50%': {\n    opacity: 0.15,\n  },\n  // tslint:disable-next-line:object-literal-sort-keys\n  '100%': {\n    opacity: 0.0,\n  },\n};\n\nconst PREVIEW_WIDTH = '50%';\nconst EDITOR_WIDTH = '50%';\n\nexport const APP_STYLE = StyleSheet.create({\n  errorDecoration: {\n    border: '2px solid red',\n    color: 'red',\n    fontStyle: 'oblique',\n    fontWeight: 'bold',\n    textDecoration: 'underline',\n  },\n  errorMask: {\n    backgroundColor: 'black',\n    bottom: 0,\n    color: 'white',\n    left: PREVIEW_WIDTH,\n    padding: 15,\n    position: 'absolute',\n    right: 0,\n    textAlign: 'center',\n    top: 0,\n  },\n  githubButton: {\n    borderLeft: '1px solid #ccc',\n    bottom: 10,\n    color: 'black',\n    maxHeight: '90%',\n    overflow: 'auto',\n    position: 'absolute',\n    right: 110,\n    textDecoration: 'none',\n  },\n  monacoHidden: {\n    display: 'none',\n  },\n  pendingPreviewMask: {\n    animationDuration: '2s',\n    animationIterationCount: 'infinite',\n    animationName: previewPendingAnimation,\n    animationTimingFunction: 'ease-in-out',\n    backgroundColor: 'black',\n    bottom: 0,\n    left: PREVIEW_WIDTH,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  previewPendingMaskModeView: {\n    left: 0,\n  },\n  readOnlyNotification: {\n    backgroundColor: '#1e1e1e',\n    color: 'white',\n    fontWeight: 'bold',\n    height: 20,\n    left: 0,\n    padding: 10,\n    top: 0,\n    zIndex: 100000,\n  },\n  sheetMusicError: {\n    color: '#aeaeae',\n    display: 'inline-block',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n  },\n  sheetMusicView: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    border: '0 none',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    position: 'absolute',\n    right: '0',\n    top: 0,\n  },\n  sheetMusicViewEdit: {\n    left: EDITOR_WIDTH,\n  },\n  sheetMusicViewView: {\n    left: 0,\n  },\n});\n\nexport const MODAL_STYLE = StyleSheet.create({\n  big: {\n    margin: '0 0 0 -400px',\n    width: 800,\n  },\n  closeButton: {\n    float: 'right',\n    textDecoration: 'none',\n  },\n  gpl: {\n    '@media (max-width: 530px)': {\n      display: 'none',\n    },\n    bottom: 10,\n    position: 'absolute',\n    right: 10,\n  },\n  license: {\n    fontSize: 12,\n    marginTop: 20,\n  },\n  link: {\n    ':hover': {\n      color: 'black',\n    },\n    color: 'blue',\n    cursor: 'pointer',\n    fontSize: 16,\n    textDecoration: 'underline',\n  },\n  login: {\n    textAlign: 'center',\n  },\n  modal: {\n    '@media (max-width: 530px)': {\n      left: 0,\n      margin: 0,\n      position: 'absolute',\n      width: '100%',\n    },\n    backgroundColor: 'white',\n    border: '1px solid rgba(0, 0, 0, 0.3)',\n    borderRadius: 6,\n    boxSizing: 'border-box',\n    color: '#555555',\n    left: '50%',\n    margin: '0 0 0 -265px',\n    padding: '15px 15px 0 15px',\n    position: 'absolute',\n    top: 80,\n    width: 530,\n    zIndex: 1050,\n  },\n  modalBody: {\n    margin: 0,\n    maxHeight: 'none',\n    padding: '20px 0 2px 0',\n  },\n  modalHeader: {\n    borderBottom: '1px solid #ddd',\n    padding: '0 0 9px 0',\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  shareURL: {\n    display: 'block',\n    padding: 5,\n    textAlign: 'center',\n  },\n  signInPrivacy: {\n    marginTop: -10,\n    textAlign: 'center',\n  },\n});\n\nexport const MENU_STYLE = StyleSheet.create({\n  deleteSong: {\n    ':hover': {\n      color: 'red',\n    },\n    color: '#aeaeae',\n    float: 'right',\n  },\n  innerSongList: {\n    listStyle: 'none',\n    marginLeft: 0,\n    marginTop: 0,\n    paddingLeft: 0,\n  },\n  menu: {\n    '::after': {\n      '@media (max-width: 500px)': {\n        left: 97,\n      },\n      borderBottomColor: 'white',\n      borderLeftColor: 'transparent',\n      borderRightColor: 'transparent',\n      borderStyle: 'solid',\n      borderTopColor: 'transparent',\n      borderWidth: 12,\n      bottom: '100%',\n      content: '\" \"',\n      height: 0,\n      left: 40,\n      marginLeft: -30,\n      pointerEvents: 'none',\n      position: 'absolute',\n      width: 0,\n    },\n    '@media (max-width: 500px)': {\n      left: 0,\n      position: 'absolute',\n      width: '100%',\n    },\n    backgroundColor: 'white',\n    border: '1px solid rgba(0, 0, 0, 0.3)',\n    display: 'flex',\n    flexDirection: 'row',\n    height: 500,\n    left: 65,\n    outline: 'none',\n    padding: '14px 7px 4px 7px',\n    position: 'absolute',\n    top: 48,\n    width: 400,\n    zIndex: 1050,\n\n  },\n  menuColumn: {\n    '@media (max-width: 500px)': {\n      marginRight: 14,\n    },\n    display: 'flex',\n    flex: 1,\n    flexDirection: 'column',\n    overflow: 'auto',\n    paddingLeft: 7,\n    paddingRight: 7,\n  },\n  menuOverlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.35)',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  option: {\n    ':hover': {\n      color: 'blue',\n    },\n    backgroundColor: '#f6f6f6',\n    border: '1px solid #dedede',\n    color: 'black',\n    fontSize: 16,\n    marginBottom: 10,\n    padding: 10,\n    textAlign: 'left',\n    textDecoration: 'none',\n  },\n  placeholder: {\n    color: 'black',\n    fontSize: 16,\n    left: '50%',\n    position: 'absolute',\n    textAlign: 'center',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n  },\n  placeholderLink: {\n    ':hover': {\n      color: 'black',\n    },\n    color: 'blue',\n    fontSize: 16,\n    textDecoration: 'underline',\n  },\n  section: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    paddingBottom: 7,\n  },\n  song: {\n    ':hover': {\n      color: 'blue',\n    },\n    color: 'black',\n    fontSize: 16,\n    marginBottom: 4,\n    textDecoration: 'none',\n  },\n  songList: {\n    flex: 1,\n    position: 'relative',\n  },\n});\n\nexport const HEADER_STYLE = StyleSheet.create({\n  headerGroupWrapper: {\n    marginBottom: 'auto',\n    marginTop: 'auto',\n  },\n  headerSpacer: {\n    flex: 1,\n  },\n  logo: {\n    height: 32,\n    marginLeft: 16,\n    padding: '9px 0',\n    transform: 'scale(-1, 1)',\n    width: 32,\n  },\n  miniGroup: {\n    marginLeft: 16,\n  },\n  modeItem: {\n    fontSize: 14,\n    paddingBottom: 5,\n    paddingTop: 5,\n    width: 14,\n  },\n  newSong: {\n    ':hover': {\n      color: 'black',\n    },\n    color: '#aeaeae',\n    fontSize: 14,\n    marginRight: 32,\n    textDecoration: 'none',\n  },\n  playButton: {\n    ':hover': {\n      backgroundColor: '#ccc',\n    },\n    color: '#6e6e6e',\n    display: 'inline-block',\n    fontSize: 14,\n    height: 36,\n    padding: 9,\n  },\n  playTime: {\n    textAlign: 'left',\n    width: 80,\n  },\n  publish: {\n    color: '#aeaeae',\n    cursor: 'unset',\n    fontSize: 14,\n    marginRight: 16,\n    textDecoration: 'none',\n  },\n  publishActive: {\n    ':hover': {\n      color: 'black',\n    },\n    cursor: 'pointer',\n  },\n  songs: {\n    marginLeft: 16,\n  },\n  songsText: {\n    ':hover': {\n      backgroundColor: '#ccc',\n    },\n    color: '#6e6e6e',\n    display: 'inline-block',\n    fontSize: 14,\n    padding: 9,\n  },\n  srOnly: {\n    border: 0,\n    clip: 'rect(0,0,0,0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    width: 1,\n  },\n});\n\nexport const GITHUB_STYLE = StyleSheet.create({\n  btnGithub: {\n    ':active': {\n      backgroundColor: '#101010',\n    },\n    ':hover': {\n      backgroundColor: '#444444',\n    },\n    backgroundColor: '#2a2a2a',\n    backgroundImage: 'url(\\'./github.svg\\')',\n    backgroundPosition: '1em',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '2em',\n    border: 'none',\n    borderRadius: '0.5em',\n    color: 'white',\n    cursor: 'pointer',\n    fontSize: '1em',\n    height: '4em',\n    lineHeight: '1em',\n    padding: '0 2em 0 4em',\n    textDecoration: 'none',\n    transition: 'all 0.5s',\n    width: 262,\n  },\n});\n\n/**\n * @license\n * Copyright notice for the original version of 'button'\n * (https://github.com/Khan/react-components/blob/master/js/styles.jsx):\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Khan Academy\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nexport const BUTTON_STYLE = StyleSheet.create({\n  buttonStyle: {\n    ':first-child': {\n      borderBottomLeftRadius: '3px',\n      borderLeft: '1px solid #ccc',\n      borderTopLeftRadius: '3px',\n    },\n    ':focus': {\n      zIndex: '2',\n    },\n    ':hover': {\n      backgroundColor: '#ccc',\n    },\n    ':last-child': {\n      borderBottomRightRadius: '3px',\n      borderRight: '1px solid #ccc',\n      borderTopRightRadius: '3px',\n    },\n    backgroundColor: 'white',\n    border: '1px solid #ccc',\n    borderLeft: '0',\n    cursor: 'pointer',\n    margin: '0',\n    padding: '5px 10px',\n    position: 'relative', // for hover\n  },\n\n  selectedStyle: {\n    backgroundColor: '#ddd',\n  },\n});\n\nexport const LOGS_STYLE = StyleSheet.create({\n  logsButton: {\n    borderLeft: '1px solid #ccc',\n    bottom: 10,\n    maxHeight: '90%',\n    overflow: 'auto',\n    position: 'absolute',\n    right: 20,\n  },\n  mask: {\n    bottom: 0,\n    left: 0,\n    position: 'fixed',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport const PUBLISH_STYLE = StyleSheet.create({\n  // I'm having a hard time both expanding the input (flex works great here)\n  // while vertically aligning things (inline-block works here), so I've resorted\n  // to an unholy hack. A fix would be very appreciated.\n  cell: {\n    display: 'table-cell',\n    fontSize: 14,\n    whiteSpace: 'nowrap',\n    width: '1px',\n  },\n  error: {\n    bottom: 20,\n    color: 'red',\n    fontFamily: 'sans-serif',\n    fontSize: 14,\n    position: 'absolute',\n  },\n  expand: {\n    width: '100%',\n  },\n  footer: {\n    display: 'inline-block',\n    marginBottom: 10,\n    marginTop: 15,\n    width: '100%',\n  },\n  mono: {\n    fontFamily: 'monospace',\n  },\n  publishBtn: {\n    ':disabled': {\n      backgroundColor: '#ccc',\n      cursor: 'not-allowed',\n    },\n    color: 'black',\n    float: 'right',\n    fontFamily: 'sans-serif',\n    fontSize: 14,\n    textDecoration: 'none',\n  },\n  row: {\n    display: 'table',\n    fontSize: 14,\n    width: '100%',\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/styles.tsx","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./components/Modal\");\n\nvar _Modal2 = _interopRequireDefault(_Modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Modal2.default;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/index.js\n// module id = 3\n// module chunks = 2","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 4\n// module chunks = 2 3","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 5\n// module chunks = 2 3","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPrefixedValue;\nvar regex = /-webkit-|-moz-|-ms-/;\n\nfunction isPrefixedValue(value) {\n  return typeof value === 'string' && regex.test(value);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-in-js-utils/lib/isPrefixedValue.js\n// module id = 6\n// module chunks = 2","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 7\n// module chunks = 2 3","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 8\n// module chunks = 2 3","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 2 3","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 10\n// module chunks = 2 3","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 11\n// module chunks = 2 3","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { Auth, Repo } from './auth';\n\nexport interface File {\n  path: string;\n  sha: string;\n}\n\n/**\n * Token that is thrown when we cannot cat a file becasue it does not exist.\n */\nexport class FileNotFound {\n  message: string = 'This file does not exist.';\n}\n\nexport async function getRepo(\n  accessToken: string,\n  username: string,\n  repoName: string,\n): Promise<Repo> {\n  const response: Response = await fetch(\n    `https://api.github.com/repos/${username}/${repoName}?cache_bust=${new Date().getTime()}`,\n    {\n      headers: {\n        Accept: 'application/json',\n        Authorization: `token ${accessToken}`,\n      },\n    },\n  );\n\n  if (response.status === 404) {\n    throw new FileNotFound();\n  } else if (response.status >= 400) {\n    throw new Error('Could not get repo');\n  }\n\n  return response.json();\n}\n\nexport async function createRepo(\n  accessToken: string,\n  username: string,\n  repoName: string,\n): Promise<Repo> {\n  const response: Response = await fetch(\n    `https://api.github.com/user/repos?cache_bust=${new Date().getTime()}`,\n    {\n      body: JSON.stringify({\n        auto_init: true,\n        description: `Sheet music by ${username}`,\n        has_issues: false,\n        has_pages: true,\n        has_projects: false,\n        has_wiki: false,\n        homepage: `https://${username}.github.io/sheet-music`,\n        name: repoName,\n      }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: `token ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n    },\n  );\n\n  if (response.status >= 400) {\n    throw new Error('Could not create repo');\n  }\n\n  return response.json();\n}\n\nexport async function getOrCreateRepo(auth: Auth): Promise<Repo> {\n  const repoParts: string[] = auth.repo.split('/');\n  if (repoParts.length !== 2) {\n    throw new Error('Could not get repo details.');\n  }\n\n  let repo: Repo;\n  try {\n    repo = await getRepo(auth.accessToken, repoParts[0], repoParts[1]);\n  } catch (err) {\n    if (err instanceof FileNotFound) {\n      if (repoParts[0] !== auth.username) {\n        throw new Error('Invalid repo.');\n      }\n      repo = await createRepo(auth.accessToken, repoParts[0], repoParts[1]);\n    } else {\n      throw err;\n    }\n  }\n\n  return repo;\n}\n\nexport async function ls(\n    accessToken: string,\n    repo: string,\n    ref: string = 'master',\n  ): Promise<File[]> {\n\n  const headers: {} = {\n    Authorization: `token ${accessToken}`,\n  };\n\n  // Note: sadly, cache: 'no-store' seems to be broken in Chrome with GH, so we use an\n  // ugly cache_bust.\n  const response: Response = await fetch(\n    `https://api.github.com/repos/${repo}/contents?ref=${ref}&cache_bust=${new Date().getTime()}`,\n    {\n      headers,\n    },\n  );\n\n  return (await response.json()).map((file: File) => ({\n    path: file.path,\n    sha: file.sha,\n  }));\n}\n\n/**\n * Token that is thrown when we cannot save a file to GitHub because it already\n * exists, or was modified between when we got the SHA and when we made the save request.\n */\nexport class Conflict {\n  message: string = 'Cannot save file because it conflicts with another file.';\n}\n\nexport async function cat(\n    accessToken: string,\n    repo: string,\n    filename: string,\n    ref: string = 'master',\n): Promise<{content: string, sha: string}> {\n\n  const headers: {} = {\n    Authorization: `token ${accessToken}`,\n  };\n\n  // Note: we should get more strict with our ref and get rid of the cache_bust\n  const response: Response = await fetch(\n    `https://api.github.com/repos/${repo}/contents/${filename}?ref=${ref}` +\n      `&cache_bust=${new Date().getTime()}`,\n    {\n      headers,\n    },\n  );\n\n  if (response.status === 404) {\n    throw new FileNotFound();\n  }\n\n  const obj: {content: string, sha: string} = await response.json();\n\n  return {\n    content: atob(obj.content),\n    sha: obj.sha,\n  };\n}\n\nexport async function write(\n    accessToken: string,\n    repo: string,\n    filename: string,\n    base64: string,\n    sha?: string,\n    ref: string = 'master',\n): Promise<void> {\n  const response: Response = await fetch(\n    `https://api.github.com/repos/${repo}/contents/${filename}`,\n    {\n      body: JSON.stringify({\n        branch: ref,\n        content: base64,\n        message: `Saved via ${process.env.HOMEPAGE || 'Hacklily'}`,\n        sha: sha ? sha : undefined,\n      }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: `token ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      method: 'PUT',\n    },\n  );\n\n  if (response.status === 409) {\n    throw new Conflict();\n  }\n\n  if (response.status === 404) {\n    throw new FileNotFound();\n  }\n\n  if (response.status !== 200 && response.status !== 201) {\n    throw new Error(`Status: ${response.statusText}`);\n  }\n}\n\nexport async function rm(\n    accessToken: string,\n    repo: string,\n    filename: string,\n    sha: string,\n    ref: string = 'master',\n): Promise<void> {\n  const response: Response = await fetch(\n    `https://api.github.com/repos/${repo}/contents/${filename}`,\n    {\n      body: JSON.stringify({\n        branch: ref,\n        message: `Saved via ${process.env.HOMEPAGE || 'Hacklily'}`,\n        sha: sha ? sha : undefined,\n      }),\n      headers: {\n        Accept: 'application/json',\n        Authorization: `token ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      method: 'DELETE',\n    },\n  );\n\n  if (response.status === 409) {\n    throw new Conflict();\n  }\n\n  if (response.status !== 200) {\n    throw new Error(`Status: ${response.statusText}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/gitfs.tsx","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = 13\n// module chunks = 2","'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/polyfills.js\n// module id = 14\n// module chunks = 2 3","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 15\n// module chunks = 2 3","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 16\n// module chunks = 2 3","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 17\n// module chunks = 2 3","/** @license React v16.2.0\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/emptyObject\"),p=require(\"fbjs/lib/emptyFunction\"),q=\"function\"===typeof Symbol&&Symbol[\"for\"],r=q?Symbol[\"for\"](\"react.element\"):60103,t=q?Symbol[\"for\"](\"react.call\"):60104,u=q?Symbol[\"for\"](\"react.return\"):60105,v=q?Symbol[\"for\"](\"react.portal\"):60106,w=q?Symbol[\"for\"](\"react.fragment\"):60107,x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?y(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===r}\nfunction escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}\nfunction P(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+Q(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=x&&a[x]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=\nf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\"object\"===d&&(e=\"\"+a,y(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\nfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(L,\"$\\x26/\")+\"/\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(L,\"$\\x26/\")+\"/\");b=N(b,g,c,d);null==a||P(a,\"\",S,b);O(b)}\nvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\"\",R,b);O(b)},count:function(a){return null==a?0:P(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\"143\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\nd=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\nisValidElement:K,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\"default\"]?W[\"default\"]:W;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 18\n// module chunks = 2 3","/** @license React v16.2.0\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),l=require(\"fbjs/lib/ExecutionEnvironment\"),B=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),ba=require(\"fbjs/lib/EventListener\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ia=require(\"fbjs/lib/focusNode\"),D=require(\"fbjs/lib/emptyObject\");\nfunction E(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:E(\"227\");\nvar oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}\nvar ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),\nhasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};\nfunction va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}\nvar xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,\"default\":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,\nscoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\na.setAttribute(\"value\",\"\"+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,\nxmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\\-\\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ha,\nIa);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\nvar P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?E(\"197\"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=\nq)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E(\"198\")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}\nfunction Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};\nfunction Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E(\"96\",a);if(!Oa[c]){b.extractEvents?void 0:E(\"97\",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E(\"99\",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E(\"98\",d,a)}}}}\nfunction Qa(a,b,c){Ra[a]?E(\"100\",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E(\"101\"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E(\"102\",c):void 0,Ma[c]=d,b=!0)}b&&Na()}\nvar Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction $a(a,b){null==b?E(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;\nfunction cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};\nfunction ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?E(\"231\",b,typeof c):void 0;\nreturn c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E(\"95\"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q=\"__reactInternalInstance$\"+nb,ob=\"__reactEventHandlers$\"+nb;\nfunction pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E(\"33\")}function rb(a){return a[ob]||null}\nvar sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\nfunction vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}\nfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}\nfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\nvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var S={_root:null,_startText:null,_fallbackText:null};\nfunction Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return\"value\"in S._root?S._root.value:S._root[Eb()]}\nvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nB(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Lb(a){a instanceof this?void 0:E(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&\"CompositionEvent\"in window,Wb=null;l.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\nif(Xb=l.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\nvar Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\nfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Pb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\nfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\nvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=\ne:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:E(\"194\");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\nfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\nfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction yc(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\nfunction Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Mc),Gc=Fc=null)}function Mc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\nfunction Nc(a,b,c){\"topFocus\"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Mc)):\"topBlur\"===a&&Lc()}function Oc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Pc(a,b){if(\"topClick\"===a)return Ic(b)}function $c(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\nvar ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\na&&e.setAttribute(\"value\",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar gd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===\nb)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\nfunction kd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E(\"188\"):void 0}\nfunction nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:E(\"189\")}}c.alternate!==d?E(\"190\"):void 0}3!==c.tag?E(\"188\"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var qd=[];\nfunction rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}\nfunction vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}\nvar xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar zd={animationend:yd(\"Animation\",\"AnimationEnd\"),animationiteration:yd(\"Animation\",\"AnimationIteration\"),animationstart:yd(\"Animation\",\"AnimationStart\"),transitionend:yd(\"Transition\",\"TransitionEnd\")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),\"TransitionEvent\"in window||delete zd.transitionend.transition);\nfunction Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return\"\"}\nvar Dd={topAbort:\"abort\",topAnimationEnd:Cd(\"animationend\")||\"animationend\",topAnimationIteration:Cd(\"animationiteration\")||\"animationiteration\",topAnimationStart:Cd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:Cd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ed={},Fd=0,Gd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Ld=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Nd=null,Od=null,Pd=null,Qd=!1;\nfunction Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;\"selectionStart\"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type=\"select\",a.target=Nd,Ab(a),a)}\nvar Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case \"topBlur\":Pd=Od=Nd=null;break;case \"topMouseDown\":Qd=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Qd=!1,Rd(c,d);case \"topSelectionChange\":if(Ld)break;\ncase \"topKeyDown\":case \"topKeyUp\":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});\nfunction Wd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar Xd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Yd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Wd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Yd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===a.type?Wd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?Wd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};de[a]=c;ee[b]=c});\nvar fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Wd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Zd;break;case \"topBlur\":case \"topFocus\":a=Vd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\n$d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Td;break;case \"topTransitionEnd\":a=be;break;case \"topScroll\":a=bd;break;case \"topWheel\":a=ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nWa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}\nfunction me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}\nfunction oe(a,b,c){null!=ie.cursor?E(\"168\"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E(\"108\",jd(a)||\"Unknown\",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}\nfunction re(a,b){var c=a.stateNode;c?void 0:E(\"169\");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}\nfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction te(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):E(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\nfunction ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;\nfunction Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){\"function\"===typeof ze&&ze(a)}function Ee(a){\"function\"===typeof Ae&&Ae(a)}\nfunction Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\nfunction He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===\nc.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}\nfunction Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?E(\"191\",e):void 0;e.call(b)}}\nfunction Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\na(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\nb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E(\"158\");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E(\"159\"):void 0);var u=g.context,z=ke(b);z=me(b,z);\"function\"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe=\"function\"===typeof Symbol&&Symbol[\"for\"],Re=Qe?Symbol[\"for\"](\"react.element\"):60103,Se=Qe?Symbol[\"for\"](\"react.call\"):60104,Te=Qe?Symbol[\"for\"](\"react.return\"):60105,Ue=Qe?Symbol[\"for\"](\"react.portal\"):60106,Ve=Qe?Symbol[\"for\"](\"react.fragment\"):60107,We=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction Xe(a){if(null===a||\"undefined\"===typeof a)return null;a=We&&a[We]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ye=Array.isArray;\nfunction Ze(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E(\"110\"):void 0,d=b.stateNode);d?void 0:E(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?E(\"148\"):void 0;b._owner?void 0:E(\"149\",c)}return c}\nfunction $e(a,b){\"textarea\"!==a.type&&E(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d[\"return\"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d[\"return\"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);\nb[\"return\"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=e(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,\nd,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function z(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ve(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c[\"return\"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b[\"return\"]=a,b;case Te:return c=xe(b,a.internalContextTag,\nc),c.type=b.value,c[\"return\"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b[\"return\"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===\ne?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=\na.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=\nd(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n[\"delete\"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);\"function\"!==typeof h?E(\"150\"):void 0;m=h.call(m);null==m?E(\"151\"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,\ng,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n[\"delete\"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);\nvar m=\"object\"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d[\"return\"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d[\"return\"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h[\"return\"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===\nm)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d[\"return\"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d[\"return\"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===\nf.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d[\"return\"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E(\"152\",h.displayName||\nh.name||\"Component\")}return c(a,d)}}var bf=af(!0),cf=af(!1);\nfunction df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,\nb.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E(\"153\"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,\nG=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E(\"155\"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=\n1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E(\"153\"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),\ne=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E(\"154\"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),\n2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;\ncase 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E(\"156\")}},beginFailedWork:function(a,b,\nc){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E(\"235\"):E(\"236\");\nreturn{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=\nk(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E(\"166\"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child[\"return\"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if(\"string\"!==typeof m)return null===b.stateNode?E(\"166\"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E(\"165\");b.tag=8;A=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E(\"247\");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===\np[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E(\"167\");default:E(\"156\")}}}}\nfunction ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){\"function\"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\nb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?E(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);\nelse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E(\"235\"):E(\"236\"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,\nN=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}E(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\nnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\na)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\nc,c);break;case 3:break;default:E(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,\nb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};\nfunction hf(a){function b(a){a===gf?E(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);\nd=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}\nfunction jf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E(\"175\")},prepareToHydrateHostTextInstance:function(){E(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=\nk(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\ny)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}\nfunction kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E(\"177\"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,\nt);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E(\"178\"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R[\"delete\"](e))),null==f?E(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\nbreak;case 3:null===ca&&(ca=f.error);break;default:E(\"157\")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E(\"178\"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;\"function\"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\ne.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\nif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E(\"243\"):void 0;ja=!0;a.isReadyForCommit=\n!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E(\"183\"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g[\"return\"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=\nnull;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\ng._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m=\"\\n    in \"+(m||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:m=\"\"}h+=m;g=g[\"return\"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&\nVc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||\na.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E(\"185\");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?\nSb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a[\"return\"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E(\"244\"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,\nO.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=\nnull,Ub=!1,a;}function m(a,c){Fa?E(\"245\"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E(\"246\"):\nvoid 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,\nPe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=\nka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E(\"187\"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}\nfunction lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=\nc._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E(\"170\");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:E(\"171\")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},\na,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf[\"default\"]?nf[\"default\"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var qf=\"object\"===typeof performance&&\"function\"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};\nvar sf=void 0,tf=void 0;\nif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=\na)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,\"*\"))};sf=function(a,b){uf=a;null!=b&&\"number\"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},\ntf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Ff={},Gf={};\nfunction Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}\nfunction If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Kf(a,b,va(b,c)?c:null)}\nfunction Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\nfunction Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\nfunction Nf(a,b){b=b.checked;null!=b&&If(a,\"checked\",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Pf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Qf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\nfunction Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E(\"91\"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Wf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Zf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function $f(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Zf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ag=void 0,bg=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||\"innerHTML\"in a)a.innerHTML=b;else{ag=ag||document.createElement(\"div\");ag.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});\nfunction fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:E(\"61\")),null!=b.style&&\"object\"!==typeof b.style?E(\"62\",c()):void 0)}\nfunction ig(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns(\"\");\nfunction lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?wd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(wd(\"topFocus\",\"focus\",a),wd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&wd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(yc(\"close\",!0)&&wd(\"topClose\",\"close\",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}\nvar mg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction pg(a,b,c,d){var e=ig(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Mf(a,c);f=Lf(a,c);U(\"topInvalid\",\"invalid\",a);\nlg(d,\"onChange\");break;case \"option\":f=Rf(a,c);break;case \"select\":Tf(a,c);f=B({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;case \"textarea\":Vf(a,c);f=Uf(a,c);U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?fg(a,k,kg):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&cg(a,k):\"number\"===typeof k&&cg(a,\n\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\nC)}}\nfunction sg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Lf(a,c);d=Lf(a,d);f=[];break;case \"option\":c=Rf(a,c);d=Rf(a,d);f=[];break;case \"select\":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case \"textarea\":c=Uf(a,c);d=Uf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\n\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===\ng?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f}\nfunction tg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?fg(a,h,kg):\"dangerouslySetInnerHTML\"===g?bg(a,h):\"children\"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case \"input\":Of(a,e);break;case \"textarea\":Wf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,\n!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction ug(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":Mf(a,c);U(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"select\":Tf(a,c);\nU(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"textarea\":Vf(a,c),U(\"topInvalid\",\"invalid\",a),lg(e,\"onChange\")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}\nvar wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Of(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E(\"90\");Cc(d);Of(d,e)}}}break;case \"textarea\":Wf(a,c);break;case \"select\":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\nvar Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:\n{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\na.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\ntypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\nb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\nb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\ndidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;\nfunction Pg(a,b,c,d,e){Ng(c)?void 0:E(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E(\"200\");return pf(a,b,null,c)}\nfunction Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\nvar Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?E(\"188\"):E(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E(\"38\"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:\nE(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};\nZ.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:\"16.2.0\",rendererPackageName:\"react-dom\"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug[\"default\"]?Ug[\"default\"]:Ug;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 19\n// module chunks = 2 3","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 20\n// module chunks = 2 3","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/EventListener.js\n// module id = 21\n// module chunks = 2 3","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 22\n// module chunks = 2 3","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 23\n// module chunks = 2 3","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 24\n// module chunks = 2 3","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 25\n// module chunks = 2 3","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 26\n// module chunks = 2 3","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/focusNode.js\n// module id = 27\n// module chunks = 2 3","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _stringHash = require('string-hash');\n\nvar _stringHash2 = _interopRequireDefault(_stringHash);\n\n/* ::\ntype Pair = [ string, any ];\ntype Pairs = Pair[];\ntype PairsMapper = (pair: Pair) => Pair;\ntype ObjectMap = { [id:string]: any };\n*/\n\nvar mapObj = function mapObj(obj, /* : ObjectMap */\nfn /* : PairsMapper */\n) /* : ObjectMap */{\n    var keys = Object.keys(obj);\n    var mappedObj = {};\n    for (var i = 0; i < keys.length; i += 1) {\n        var _fn = fn([keys[i], obj[keys[i]]]);\n\n        var _fn2 = _slicedToArray(_fn, 2);\n\n        var newKey = _fn2[0];\n        var newValue = _fn2[1];\n\n        mappedObj[newKey] = newValue;\n    }\n    return mappedObj;\n};\n\nexports.mapObj = mapObj;\nvar UPPERCASE_RE = /([A-Z])/g;\nvar UPPERCASE_RE_TO_KEBAB = function UPPERCASE_RE_TO_KEBAB(match /* : string */) {\n    return (/* : string */'-' + match.toLowerCase()\n    );\n};\n\nvar kebabifyStyleName = function kebabifyStyleName(string /* : string */) /* : string */{\n    var result = string.replace(UPPERCASE_RE, UPPERCASE_RE_TO_KEBAB);\n    if (result[0] === 'm' && result[1] === 's' && result[2] === '-') {\n        return '-' + result;\n    }\n    return result;\n};\n\nexports.kebabifyStyleName = kebabifyStyleName;\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n * Taken from React's CSSProperty.js\n */\nvar isUnitlessNumber = {\n    animationIterationCount: true,\n    borderImageOutset: true,\n    borderImageSlice: true,\n    borderImageWidth: true,\n    boxFlex: true,\n    boxFlexGroup: true,\n    boxOrdinalGroup: true,\n    columnCount: true,\n    flex: true,\n    flexGrow: true,\n    flexPositive: true,\n    flexShrink: true,\n    flexNegative: true,\n    flexOrder: true,\n    gridRow: true,\n    gridColumn: true,\n    fontWeight: true,\n    lineClamp: true,\n    lineHeight: true,\n    opacity: true,\n    order: true,\n    orphans: true,\n    tabSize: true,\n    widows: true,\n    zIndex: true,\n    zoom: true,\n\n    // SVG-related properties\n    fillOpacity: true,\n    floodOpacity: true,\n    stopOpacity: true,\n    strokeDasharray: true,\n    strokeDashoffset: true,\n    strokeMiterlimit: true,\n    strokeOpacity: true,\n    strokeWidth: true\n};\n\n/**\n * Taken from React's CSSProperty.js\n *\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n    return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n * Taken from React's CSSProperty.js\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\n// Taken from React's CSSProperty.js\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n    prefixes.forEach(function (prefix) {\n        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n    });\n});\n\nvar stringifyValue = function stringifyValue(key, /* : string */\nprop /* : any */\n) /* : string */{\n    if (typeof prop === \"number\") {\n        if (isUnitlessNumber[key]) {\n            return \"\" + prop;\n        } else {\n            return prop + \"px\";\n        }\n    } else {\n        return '' + prop;\n    }\n};\n\nexports.stringifyValue = stringifyValue;\nvar stringifyAndImportantifyValue = function stringifyAndImportantifyValue(key, /* : string */\nprop /* : any */\n) {\n    return (/* : string */importantify(stringifyValue(key, prop))\n    );\n};\n\nexports.stringifyAndImportantifyValue = stringifyAndImportantifyValue;\n// Turn a string into a hash string of base-36 values (using letters and numbers)\nvar hashString = function hashString(string /* : string */) {\n    return (/* string */(0, _stringHash2['default'])(string).toString(36)\n    );\n};\n\nexports.hashString = hashString;\n// Hash a javascript object using JSON.stringify. This is very fast, about 3\n// microseconds on my computer for a sample object:\n// http://jsperf.com/test-hashfnv32a-hash/5\n//\n// Note that this uses JSON.stringify to stringify the objects so in order for\n// this to produce consistent hashes browsers need to have a consistent\n// ordering of objects. Ben Alpert says that Facebook depends on this, so we\n// can probably depend on this too.\nvar hashObject = function hashObject(object /* : ObjectMap */) {\n    return (/* : string */hashString(JSON.stringify(object))\n    );\n};\n\nexports.hashObject = hashObject;\n// Given a single style value string like the \"b\" from \"a: b;\", adds !important\n// to generate \"b !important\".\nvar importantify = function importantify(string /* : string */) {\n    return (/* : string */\n        // Bracket string character access is very fast, and in the default case we\n        // normally don't expect there to be \"!important\" at the end of the string\n        // so we can use this simple check to take an optimized path. If there\n        // happens to be a \"!\" in this position, we follow up with a more thorough\n        // check.\n        string[string.length - 10] === '!' && string.slice(-11) === ' !important' ? string : string + ' !important'\n    );\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/util.js\n// module id = 28\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport RPCClient, { SignInResponse } from './RPCClient';\n\nexport interface Repo {\n  ['private']: boolean;\n\n  created_at: string;\n  description: string;\n  fork: false;\n  forks_count: number;\n  full_name: string;\n  has_pages: boolean;\n  name: string;\n  network_count: number;\n  project_count: number;\n  pushed_at: string;\n  stargazers_count: number;\n  subscribers_count: number;\n  updated_at: string;\n  url: string;\n}\n\nexport interface Auth {\n  accessToken: string;\n  email: string;\n  name: string;\n  repo: string;\n  repoDetails?: Repo;\n  username: string;\n}\n\nexport const CLIENT_ID: string | undefined = process.env.REACT_APP_GITHUB_CLIENT_ID;\nconst SCOPE: string = 'repo';\nexport function getOauthRedirect(csrf: string): string {\n  return (\n   'https://github.com/login/oauth/authorize' +\n   `?client_id=${CLIENT_ID}&scope=${SCOPE}&state=${csrf}`\n  );\n}\n\n/**\n * It's good practice when logging out to revoke the OAuth token, I guess.\n */\nexport async function revokeGitHubAuth(rpc: RPCClient, token: string): Promise<void> {\n  try {\n    await rpc.call('signOut', {\n      token,\n    });\n  } catch (err) {\n    alert('Could not revoke GitHub authorization. ' +\n      'If you would like, you can manually do this from your GitHub settings.');\n  } finally {\n    window.location.reload();\n  }\n}\n\n/**\n * Called by <App /> to continue the OAuth flow.\n */\nexport async function checkLogin(\n    rpc: RPCClient,\n    code: string,\n    state: string,\n    csrf: string,\n): Promise<Auth> {\n  if (csrf !== state) {\n    console.warn('Invalid csrf.');\n    throw new Error('Something went wrong. Could not log you in.');\n  }\n  const response: SignInResponse = await rpc.call('signIn', {\n    oauth: code,\n    state,\n  });\n\n  if (\n      !response.result.accessToken ||\n      !response.result.email ||\n      !response.result.name ||\n      !response.result.repo ||\n      !response.result.username\n  ) {\n    throw new Error('Could not log you in.');\n  }\n\n  return response.result;\n}\n\n/**\n * Deserializes Auth. Used when parsing localStorage.\n */\nexport function parseAuth(auth: string | undefined): Auth | null {\n  if (!auth) {\n    return null;\n  }\n  try {\n    const parsedAuth: Auth = JSON.parse(auth);\n    if (parsedAuth && parsedAuth.accessToken && parsedAuth.email &&\n        parsedAuth.name && parsedAuth.repo && parsedAuth.username) {\n      return parsedAuth;\n    }\n\n    return null;\n  } catch (err) {\n    return null;\n  }\n}\n\nexport function redirectToLogin(csrf: string): void {\n  window.location.href = getOauthRedirect(csrf);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/auth.ts","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\n\nimport * as logoSvg from './logo.svg';\n\nimport ButtonGroup, { ButtonSpec } from './ButtonGroup';\nimport { BUTTON_STYLE, HEADER_STYLE } from './styles';\n\nexport type ViewMode = 'view' | 'edit' | 'both';\nexport const MODE_VIEW: ViewMode = 'view';\nexport const MODE_BOTH: ViewMode = 'both';\nexport const MODE_EDIT: ViewMode = 'edit';\nexport const MIN_BOTH_WIDTH: number = 630;\n\ninterface Player {\n  // TODO(joshuan): Export hackmidi types :(\n  addChangeListener(fn: (timeInSeconds: number, isPlaying: boolean) => void): void;\n  destroy(): void;\n  getDuration(): number;\n  pause(): void;\n  play(): void;\n  removeChangeListener(fn: (timeInSeconds: number, isPlaying: boolean) => void): void;\n  seek(time: number): void;\n}\n\ninterface Props {\n  inSandbox: boolean;\n  isDirty: boolean;\n  isImmutableSrc: boolean;\n  loggedIn: boolean;\n  midi: ArrayBuffer | null;\n  mode: ViewMode;\n  online: boolean;\n  sandboxIsDirty: boolean;\n  song: string | undefined;\n  windowWidth: number;\n  onModeChanged(mode: ViewMode): void;\n  onShowClone(): void;\n  onShowMakelily(): void;\n  onShowMenu(): void;\n  onShowNew(): void;\n  onShowPublish(): void;\n}\n\ninterface State {\n  // The interface changes after we've played once.\n  played: boolean;\n  player: Player | null;\n  playing: boolean;\n  timeInSeconds: number;\n}\n\nfunction last<T>(t: T[]): T {\n  return t[t.length - 1];\n}\n\n/**\n * Renders the top of the app.\n */\nexport default class Header extends React.PureComponent<Props> {\n  state: State = {\n    played: false,\n    player: null,\n    playing: false,\n    timeInSeconds: 0,\n  };\n\n  componentWillReceiveProps(props: Props): void {\n    if (props.midi !== this.props.midi && this.state.player) {\n      const player: Player = this.state.player;\n      this.setState(\n        {\n          player: null,\n          playing: false,\n        },\n        () => {\n          player.destroy();\n        },\n      );\n    }\n  }\n\n  // tslint:disable-next-line:max-func-body-length\n  render(): JSX.Element {\n    const { mode, loggedIn, onModeChanged, onShowMenu, windowWidth } = this.props;\n    const { played, playing } = this.state;\n    const modeButtons: ButtonSpec[] = [];\n    if (windowWidth < MIN_BOTH_WIDTH) {\n      modeButtons.push({\n        content: (\n          <i\n            aria-hidden={true}\n            className={`fa fa-eye ${css(HEADER_STYLE.modeItem)}`}\n          />\n        ),\n        title: 'View',\n        value: MODE_VIEW,\n      });\n      modeButtons.push({\n        content: (\n          <i\n            aria-hidden={true}\n            className={`fa fa-pencil ${css(HEADER_STYLE.modeItem)}`}\n          />\n        ),\n        title: 'Edit',\n        value: MODE_EDIT,\n      });\n    }\n\n    const viewMode: React.ReactNode = modeButtons.length > 0 && (\n      <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.miniGroup)}>\n        <ButtonGroup\n          value={mode}\n          buttons={modeButtons}\n          onChange={onModeChanged}\n        />\n      </div>\n    );\n\n    const playButton: React.ReactNode = (\n      <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.miniGroup)}>\n        <button\n          title={playing ? 'Pause' : 'Play'}\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton)}\n          onClick={playing ? this.handlePause : this.handlePlay}\n        >\n          <i className={playing ? 'fa-pause fa' : 'fa-play fa'} />\n        </button>\n      </div>\n    );\n\n    const makelilyButton: React.ReactNode = (\n      <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.miniGroup)}>\n        <button\n          title=\"Lilypond Tools\"\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton)}\n          onClick={this.handleShowMakelily}\n        >\n          <i className=\"fa-briefcase fa\" />{' '}\n          Tools\n        </button>\n      </div>\n    );\n\n    const communityToolbar: React.ReactNode = this.renderCommunityToolbar();\n    let menu: React.ReactNode = null;\n    if (windowWidth >= MIN_BOTH_WIDTH) {\n      menu = (\n        <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.songs)}>\n          <button\n            title=\"Menu\"\n            className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.songsText)}\n            onClick={onShowMenu}\n          >\n            {!loggedIn && <span>Hacklily &mdash; </span>}\n            {this.props.song ? last(this.props.song.split('/')).split('.ly')[0] : 'untitled'}\n            {this.props.isDirty ? '*' : ''}{' '}\n            <span className={css(HEADER_STYLE.srOnly)}>: an online LilyPond editor</span>\n            <i className=\"fa fa-chevron-down\" aria-hidden={true} />\n          </button>\n        </div>\n      );\n    } else {\n      menu = (\n        <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.songs)}>\n          <button\n            title=\"Menu\"\n            className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.songsText)}\n            onClick={onShowMenu}\n          >\n            <i className=\"fa-bars fa\" />{' '}\n            Menu\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"header\">\n        <img src={logoSvg} className={css(HEADER_STYLE.logo)} alt=\"Frog, Hacklily logo\" />\n        {menu || <span style={{ width: 10 }} />}\n        {viewMode}\n        {makelilyButton}\n        {played ? this.renderTime() : playButton}\n        <div className={css(HEADER_STYLE.headerSpacer)} />\n        {communityToolbar}\n      </div>\n    );\n  }\n  private handleFastForward = (): void => {\n    if (!this.state.player) {\n      return;\n    }\n    this.state.player.seek(this.state.timeInSeconds + 4);\n  }\n  private handlePause = async (): Promise<void> => {\n    this.setState({\n      playing: false,\n    });\n\n    const { player } = this.state;\n\n    if (player) {\n      player.pause();\n    }\n  }\n\n  private handlePlay = async (): Promise<void> => {\n    if (!this.props.midi) {\n      alert('No MIDI data found. Make sure you have ' +\n        'a \\\\midi {} and a \\\\layout {} in your \\\\score {}.');\n\n      return;\n    }\n\n    let player: Player;\n    if (this.state.player) {\n      player = this.state.player;\n    } else {\n      const { playerFromMIDIBuffer } = await import('hackmidi');\n\n      player = await playerFromMIDIBuffer(\n        this.props.midi,\n        'https://www.hacklily.org/hackmidi/samples/');\n      this.setState({\n        player,\n      });\n      player.addChangeListener(this.handlePlaying);\n    }\n\n    player.play();\n    this.setState({\n      played: true,\n      playing: true,\n    });\n  }\n\n  private handlePlaying = (timeInSeconds: number, playing: boolean): void => {\n    const wasPlaying: boolean = this.state.playing;\n    this.setState({\n      playing,\n      timeInSeconds,\n    });\n\n    const player: Player | null = this.state.player;\n    if (!player) {\n      // TODO(joshuan): Fix this!\n      // tslint:disable-next-line no-console\n      console.log('handlePlaying called, but there\\'s no song');\n\n      return;\n    }\n\n    if (wasPlaying && !playing && timeInSeconds === 0) {\n      // TODO(joshuan): Convince timidity to not cleanup at end. Then, get rid of this.\n      this.setState(\n        {\n          player: null,\n        },\n        () => {\n          setTimeout(\n            () => {\n              player.destroy();\n            },\n            0,\n          );\n        },\n      );\n    }\n  }\n\n  private handleRewind = (): void => {\n    if (!this.state.player) {\n      return;\n    }\n    this.state.player.seek(Math.max(0, this.state.timeInSeconds - 4));\n  }\n\n  private handleShowMakelily = (): void => {\n    this.props.onShowMakelily();\n  }\n\n  // tslint:disable-next-line:cyclomatic-complexity\n  private renderCommunityToolbar(): React.ReactNode {\n    const { online, song, onShowClone, onShowNew, onShowPublish, isDirty, windowWidth,\n      sandboxIsDirty, inSandbox, isImmutableSrc} = this.props;\n    const micro: boolean = windowWidth <= 750;\n\n    const goToSandbox: string = sandboxIsDirty ? 'Back to scratchpad' : 'New song';\n    let saveAsButton: React.ReactNode;\n    if (!inSandbox) {\n      saveAsButton = (\n        <button\n            title=\"Save As\"\n            className={css(HEADER_STYLE.newSong)}\n            onClick={onShowClone}\n        >\n          <i className=\"fa fa-clone\" />{' '}\n          {!micro && !isImmutableSrc && <span>Save As</span>}\n          {!micro && isImmutableSrc && <span>Import</span>}\n        </button>\n      );\n    }\n\n    let saveShare: React.ReactNode;\n    if (song) {\n      if (isDirty) {\n        saveShare = (\n          <span>\n            <i className=\"fa fa-save\" />{' '}\n            {!micro && <span>Save updates</span>}\n          </span>\n        );\n      } else if (!micro) {\n        saveShare = 'All changes saved.';\n      }\n    } else {\n      saveShare = (\n        <span>\n          <i className=\"fa fa-save\" />{' '}\n          {!micro && <span>Save / share</span>}\n        </span>\n      );\n    }\n\n    if (!isDirty && !this.props.song) {\n      return (\n        <div className={css(HEADER_STYLE.headerGroupWrapper)}>\n          <button\n            title=\"Publish\"\n            className={css(HEADER_STYLE.newSong)}\n          >\n            {!micro && <span>No changes made.</span>}\n          </button>\n        </div>\n      );\n    }\n\n    if (online) {\n      return (\n        <div className={css(HEADER_STYLE.headerGroupWrapper)}>\n          <button\n            title=\"Publish\"\n            className={css(HEADER_STYLE.newSong)}\n            onClick={onShowNew}\n          >\n            <i className={`fa ${sandboxIsDirty ? 'fa-chevron-left' : 'fa-plus'}`} />{' '}\n            {!micro && <span>{goToSandbox}</span>}\n          </button>\n          {saveAsButton}\n          <button\n            title=\"Publish\"\n            className={css(HEADER_STYLE.publish, isDirty && HEADER_STYLE.publishActive)}\n            onClick={isDirty || !song ? onShowPublish : undefined}\n          >\n            {saveShare}\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className={css(HEADER_STYLE.headerGroupWrapper)}>\n        <i className=\"fa fa-spinner fa-spin\" aria-hidden={true} />\n        <div style={{ display: 'inline-block', width: 10 }} />\n      </div>\n    );\n  }\n\n  private renderTime(): React.ReactNode {\n    const { timeInSeconds } = this.state;\n    const fmtTime: string = String(Math.floor(timeInSeconds * 100) / 100);\n    const { playing } = this.state;\n\n    return (\n      <div className={css(HEADER_STYLE.headerGroupWrapper, HEADER_STYLE.miniGroup)}>\n        <button\n          title=\"Rewind\"\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton)}\n          onClick={this.handleRewind}\n        >\n          <i className=\"fa-backward fa\" />\n        </button>\n        <button\n          title={playing ? 'Pause' : 'Play'}\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton)}\n          onClick={playing ? this.handlePause : this.handlePlay}\n        >\n          <i className={playing ? 'fa-pause fa' : 'fa-play fa'} />\n        </button>\n        <button\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton, HEADER_STYLE.playTime)}\n          disabled={true}\n        >\n          {fmtTime}\n        </button>\n        <button\n          title=\"Fast-forward\"\n          className={css(BUTTON_STYLE.buttonStyle, HEADER_STYLE.playButton)}\n          onClick={this.handleFastForward}\n        >\n          <i className=\"fa-forward fa\" />\n        </button>\n      </div>\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Header.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { Auth } from './auth';\n\nconst PING_INTERVAL: number = 2500;\n\n// -------------------------------------------------------------------------\n// JSON-RPC 2.0 definitions\n// -------------------------------------------------------------------------\n\n/**\n * A rpc call is represented by sending a Request object to a Server.\n *\n * http://www.jsonrpc.org/specification#request_object\n */\nexport class BaseRPCRequest {\n\n  /**\n   * An identifier established by the Client that MUST contain a String, Number, or NULL value\n   * if included. If it is not included it is assumed to be a notification. The value SHOULD\n   * normally not be Null [1] and Numbers SHOULD NOT contain fractional parts [2]\n   *\n   * The Server MUST reply with the same value in the Response object if included. This member\n   * is used to correlate the context between the two objects.\n   *\n   * Note: will be set by RPC if undefined beforehand.\n   */\n  id?: string | number | null;\n\n  /**\n   * A String specifying the version of the JSON-RPC protocol. MUST be exactly \"2.0\".\n   */\n  jsonrpc: '2.0';\n\n  /**\n   * A String containing the name of the method to be invoked. Method names that begin with\n   * the word rpc followed by a period character (U+002E or ASCII 46) are reserved for rpc-internal\n   * methods and extensions and MUST NOT be used for anything else.\n   */\n  method: string;\n\n  /**\n   * A Structured value that holds the parameter values to be used during the invocation of the\n   * method. This member MAY be omitted.\n   */\n  params: {} | undefined;\n}\n\n/**\n * When a rpc call encounters an error, the Response Object MUST contain the error member with\n * a value that is a Object with the following members:\n *\n * http://www.jsonrpc.org/specification#error_object\n */\nexport interface RPCError {\n  /**\n   * A Number that indicates the error type that occurred.\n   * This MUST be an integer.\n   */\n  code: number;\n\n  /**\n   * A Primitive or Structured value that contains additional information about the error.\n   * This may be omitted.\n   * The value of this member is defined by the Server (e.g. detailed error information,\n   * nested errors etc.).\n   */\n  data?: {};\n\n  /**\n   * A String providing a short description of the error.\n   * The message SHOULD be limited to a concise single sentence.\n   */\n  message: string;\n}\n\n/**\n * When a rpc call is made, the Server MUST reply with a Response, except for in the case\n * of Notifications.\n *\n * http://www.jsonrpc.org/specification#response_object\n */\nexport interface BaseRPCResponse {\n  /**\n   * This member is REQUIRED on error.\n   * This member MUST NOT exist if there was no error triggered during invocation.\n   * The value for this member MUST be an Object as defined in section 5.1.\n   */\n  error?: RPCError;\n\n  /**\n   * This member is REQUIRED.\n   * It MUST be the same as the value of the id member in the Request Object.\n   * If there was an error in detecting the id in the Request object\n   * (e.g. Parse error/Invalid Request), it MUST be Null.\n   */\n  id: string | number | null;\n\n  /**\n   * A String specifying the version of the JSON-RPC protocol. MUST be exactly \"2.0\".\n   */\n  jsonrpc: '2.0';\n\n  /**\n   * This member is REQUIRED on success.\n   * This member MUST NOT exist if there was an error invoking the method.\n   * The value of this member is determined by the method invoked on the Server.\n   */\n  result?: {} | string | number | null;\n}\n\n// -------------------------------------------------------------------------\n// \"render\"\n// -------------------------------------------------------------------------\n\nexport interface RenderParams {\n  backend: 'svg' | 'pdf';\n  src: string;\n}\n\nexport interface RenderResponse extends BaseRPCResponse {\n  error: {\n    code: number;\n    data?: {\n      logs?: string;\n    }\n    message: string;\n  };\n  result: {\n    err: string;\n    files: string[];\n    logs: string;\n    midi?: string;\n  };\n}\n\n// -------------------------------------------------------------------------\n// \"signIn\"\n// -------------------------------------------------------------------------\n\nexport interface SignInParams {\n  oauth: string;\n  state: string;\n}\n\nexport interface SignInResponse extends BaseRPCResponse {\n  result: Auth;\n}\n\n// -------------------------------------------------------------------------\n// \"signOut\"\n// -------------------------------------------------------------------------\n\nexport interface SignOutParams {\n  token: string;\n}\n\n// -------------------------------------------------------------------------\n// \"status\"\n// -------------------------------------------------------------------------\n\nexport interface Status {\n  alive: boolean;\n  backlog: number;\n  busy_worker_count: number;\n  free_worker_count: number;\n  local_worker_count: number;\n  remote_worker_count: number;\n  startup_time: string;\n  total_worker_count: number;\n  uptime_secs: number;\n}\n\nexport interface StatusResponse extends BaseRPCResponse {\n  result: Status;\n}\n\n// -------------------------------------------------------------------------\n// Method map\n// -------------------------------------------------------------------------\n\ninterface RPCRequestParamsMap {\n  // To type check values\n  [key: string]: {};\n\n  get_status: {};\n  ping: {};\n  render: RenderParams;\n  signIn: SignInParams;\n  signOut: SignOutParams;\n}\n\ninterface RPCResponseMap {\n  // To type check values\n  [key: string]: BaseRPCResponse;\n\n  get_status: StatusResponse;\n  ping: BaseRPCResponse;\n  render: RenderResponse;\n  signIn: SignInResponse;\n  signOut: BaseRPCResponse;\n}\n\n// -------------------------------------------------------------------------\n// RPCClient Implementation\n// -------------------------------------------------------------------------\n\n/**\n * This is a wrapper around a WebSocket that calls the Hacklily backend.\n * It implements a JSONRPC 2.0 session.\n */\nexport default class RPCClient {\n  private pingInterval: number;\n  private rejectors: {[key: string]: (response: BaseRPCResponse) => void} = {};\n  private resolvers: {[key: string]: (response: BaseRPCResponse) => void} = {};\n  private socket: WebSocket;\n\n  constructor(socket: WebSocket) {\n    this.socket = socket;\n    this.socket.addEventListener('message', this.handleWSMessage);\n    this.pingInterval = window.setInterval(this.ping, PING_INTERVAL);\n  }\n\n  // tslint:disable-next-line:promise-function-async -- promises resolved outside function\n  call<T extends keyof RPCRequestParamsMap & keyof RPCResponseMap>\n      (method: T, params: RPCRequestParamsMap[T]): Promise<RPCResponseMap[T]> {\n    const id: string = this.genID();\n    const request: BaseRPCRequest = {\n      id,\n      jsonrpc: '2.0',\n      method,\n      params,\n    };\n\n    if (this.socket.readyState !== WebSocket.OPEN) {\n      const rejection: BaseRPCResponse = {\n        error: {\n          code: -32000,\n          message: 'Network error',\n        },\n        id,\n        jsonrpc: '2.0',\n      };\n\n      return Promise.reject(rejection);\n    }\n\n    // tslint:disable-next-line:promise-must-complete -- managed resolved outside function\n    const promise: Promise<BaseRPCResponse> = new Promise<BaseRPCResponse>(\n      (\n        resolve: (response: BaseRPCResponse) => void,\n        reject: (reason: BaseRPCResponse) => void,\n      ): void => {\n        this.resolvers[id] = resolve;\n        this.rejectors[id] = reject;\n      },\n    );\n\n    this.socket.send(JSON.stringify(request));\n\n    return promise;\n  }\n\n  destroy(): void {\n    clearInterval(this.pingInterval);\n    for (const id of Object.keys(this.resolvers)) {\n      const response: BaseRPCResponse = {\n        error: {\n          code: -32000,\n          message: 'Network error',\n        },\n        id,\n        jsonrpc: '2.0',\n      };\n      this.rejectors[id](response);\n      delete this.resolvers[id];\n      delete this.rejectors[id];\n    }\n    delete this.resolvers;\n    delete this.rejectors;\n    delete this.socket;\n  }\n\n  private genID(): string {\n    const randomContainer: Uint32Array = new Uint32Array(1);\n    crypto.getRandomValues(randomContainer);\n\n    return randomContainer[0].toString();\n  }\n\n  private handleWSMessage = (e: MessageEvent): void => {\n    const data: BaseRPCResponse = JSON.parse(e.data.toString());\n    if (!data.id) {\n      throw new Error(`Got reply with no id: ${e.data}`);\n    }\n    if (!(data.id in this.resolvers)) {\n      // This is not one of our events.\n      return;\n    }\n    try {\n      if (data.error) {\n        this.rejectors[data.id](data);\n      } else {\n        this.resolvers[data.id](data);\n      }\n    } finally {\n      delete this.rejectors[data.id];\n      delete this.resolvers[data.id];\n    }\n  }\n\n  private ping = async(): Promise<void> => {\n    await this.call('ping', {});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/RPCClient.tsx","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _inlineStylePrefixerStaticCreatePrefixer = require('inline-style-prefixer/static/createPrefixer');\n\nvar _inlineStylePrefixerStaticCreatePrefixer2 = _interopRequireDefault(_inlineStylePrefixerStaticCreatePrefixer);\n\nvar _libStaticPrefixData = require('../lib/staticPrefixData');\n\nvar _libStaticPrefixData2 = _interopRequireDefault(_libStaticPrefixData);\n\nvar _orderedElements = require('./ordered-elements');\n\nvar _orderedElements2 = _interopRequireDefault(_orderedElements);\n\nvar _util = require('./util');\n\nvar prefixAll = (0, _inlineStylePrefixerStaticCreatePrefixer2['default'])(_libStaticPrefixData2['default']);\n\n/* ::\nimport type { SheetDefinition } from './index.js';\ntype StringHandlers = { [id:string]: Function };\ntype SelectorCallback = (selector: string) => any;\nexport type SelectorHandler = (\n    selector: string,\n    baseSelector: string,\n    callback: SelectorCallback\n) => string | null;\n*/\n\n/**\n * `selectorHandlers` are functions which handle special selectors which act\n * differently than normal style definitions. These functions look at the\n * current selector and can generate CSS for the styles in their subtree by\n * calling the callback with a new selector.\n *\n * For example, when generating styles with a base selector of '.foo' and the\n * following styles object:\n *\n *   {\n *     ':nth-child(2n)': {\n *       ':hover': {\n *         color: 'red'\n *       }\n *     }\n *   }\n *\n * when we reach the ':hover' style, we would call our selector handlers like\n *\n *   handler(':hover', '.foo:nth-child(2n)', callback)\n *\n * Since our `pseudoSelectors` handles ':hover' styles, that handler would call\n * the callback like\n *\n *   callback('.foo:nth-child(2n):hover')\n *\n * to generate its subtree `{ color: 'red' }` styles with a\n * '.foo:nth-child(2n):hover' selector. The callback would return CSS like\n *\n *   '.foo:nth-child(2n):hover{color:red !important;}'\n *\n * and the handler would then return that resulting CSS.\n *\n * `defaultSelectorHandlers` is the list of default handlers used in a call to\n * `generateCSS`.\n *\n * @name SelectorHandler\n * @function\n * @param {string} selector: The currently inspected selector. ':hover' in the\n *     example above.\n * @param {string} baseSelector: The selector of the parent styles.\n *     '.foo:nth-child(2n)' in the example above.\n * @param {function} generateSubtreeStyles: A function which can be called to\n *     generate CSS for the subtree of styles corresponding to the selector.\n *     Accepts a new baseSelector to use for generating those styles.\n * @returns {?string} The generated CSS for this selector, or null if we don't\n *     handle this selector.\n */\nvar defaultSelectorHandlers = [\n// Handle pseudo-selectors, like :hover and :nth-child(3n)\nfunction pseudoSelectors(selector, /* : string */\nbaseSelector, /* : string */\ngenerateSubtreeStyles /* : Function */\n) /* */{\n    if (selector[0] !== \":\") {\n        return null;\n    }\n    return generateSubtreeStyles(baseSelector + selector);\n},\n\n// Handle media queries (or font-faces)\nfunction mediaQueries(selector, /* : string */\nbaseSelector, /* : string */\ngenerateSubtreeStyles /* : Function */\n) /* */{\n    if (selector[0] !== \"@\") {\n        return null;\n    }\n    // Generate the styles normally, and then wrap them in the media query.\n    var generated = generateSubtreeStyles(baseSelector);\n    return selector + '{' + generated + '}';\n}];\n\nexports.defaultSelectorHandlers = defaultSelectorHandlers;\n/**\n * Generate CSS for a selector and some styles.\n *\n * This function handles the media queries and pseudo selectors that can be used\n * in aphrodite styles.\n *\n * @param {string} selector: A base CSS selector for the styles to be generated\n *     with.\n * @param {Object} styleTypes: A list of properties of the return type of\n *     StyleSheet.create, e.g. [styles.red, styles.blue].\n * @param {Array.<SelectorHandler>} selectorHandlers: A list of selector\n *     handlers to use for handling special selectors. See\n *     `defaultSelectorHandlers`.\n * @param stringHandlers: See `generateCSSRuleset`\n * @param useImportant: See `generateCSSRuleset`\n *\n * To actually generate the CSS special-construct-less styles are passed to\n * `generateCSSRuleset`.\n *\n * For instance, a call to\n *\n *     generateCSS(\".foo\", [{\n *       color: \"red\",\n *       \"@media screen\": {\n *         height: 20,\n *         \":hover\": {\n *           backgroundColor: \"black\"\n *         }\n *       },\n *       \":active\": {\n *         fontWeight: \"bold\"\n *       }\n *     }], defaultSelectorHandlers);\n *\n * with the default `selectorHandlers` will make 5 calls to\n * `generateCSSRuleset`:\n *\n *     generateCSSRuleset(\".foo\", { color: \"red\" }, ...)\n *     generateCSSRuleset(\".foo:active\", { fontWeight: \"bold\" }, ...)\n *     // These 2 will be wrapped in @media screen {}\n *     generateCSSRuleset(\".foo\", { height: 20 }, ...)\n *     generateCSSRuleset(\".foo:hover\", { backgroundColor: \"black\" }, ...)\n */\nvar generateCSS = function generateCSS(selector, /* : string */\nstyleTypes, /* : SheetDefinition[] */\nselectorHandlers, /* : SelectorHandler[] */\nstringHandlers, /* : StringHandlers */\nuseImportant /* : boolean */\n) /* : string */{\n    var merged = new _orderedElements2['default']();\n\n    for (var i = 0; i < styleTypes.length; i++) {\n        merged.addStyleType(styleTypes[i]);\n    }\n\n    var plainDeclarations = new _orderedElements2['default']();\n    var generatedStyles = \"\";\n\n    // TODO(emily): benchmark this to see if a plain for loop would be faster.\n    merged.forEach(function (val, key) {\n        // For each key, see if one of the selector handlers will handle these\n        // styles.\n        var foundHandler = selectorHandlers.some(function (handler) {\n            var result = handler(key, selector, function (newSelector) {\n                return generateCSS(newSelector, [val], selectorHandlers, stringHandlers, useImportant);\n            });\n            if (result != null) {\n                // If the handler returned something, add it to the generated\n                // CSS and stop looking for another handler.\n                generatedStyles += result;\n                return true;\n            }\n        });\n        // If none of the handlers handled it, add it to the list of plain\n        // style declarations.\n        if (!foundHandler) {\n            plainDeclarations.set(key, val, true);\n        }\n    });\n\n    return generateCSSRuleset(selector, plainDeclarations, stringHandlers, useImportant, selectorHandlers) + generatedStyles;\n};\n\nexports.generateCSS = generateCSS;\n/**\n * Helper method of generateCSSRuleset to facilitate custom handling of certain\n * CSS properties. Used for e.g. font families.\n *\n * See generateCSSRuleset for usage and documentation of paramater types.\n */\nvar runStringHandlers = function runStringHandlers(declarations, /* : OrderedElements */\nstringHandlers, /* : StringHandlers */\nselectorHandlers /* : SelectorHandler[] */\n) /* : void */{\n    if (!stringHandlers) {\n        return;\n    }\n\n    var stringHandlerKeys = Object.keys(stringHandlers);\n    for (var i = 0; i < stringHandlerKeys.length; i++) {\n        var key = stringHandlerKeys[i];\n        if (declarations.has(key)) {\n            // A declaration exists for this particular string handler, so we\n            // need to let the string handler interpret the declaration first\n            // before proceeding.\n            //\n            // TODO(emily): Pass in a callback which generates CSS, similar to\n            // how our selector handlers work, instead of passing in\n            // `selectorHandlers` and have them make calls to `generateCSS`\n            // themselves. Right now, this is impractical because our string\n            // handlers are very specialized and do complex things.\n            declarations.set(key, stringHandlers[key](declarations.get(key), selectorHandlers),\n\n            // Preserve order here, since we are really replacing an\n            // unprocessed style with a processed style, not overriding an\n            // earlier style\n            false);\n        }\n    }\n};\n\nvar transformRule = function transformRule(key, /* : string */\nvalue, /* : string */\ntransformValue /* : function */\n) {\n    return (/* : string */(0, _util.kebabifyStyleName)(key) + ':' + transformValue(key, value) + ';'\n    );\n};\n\n/**\n * Generate a CSS ruleset with the selector and containing the declarations.\n *\n * This function assumes that the given declarations don't contain any special\n * children (such as media queries, pseudo-selectors, or descendant styles).\n *\n * Note that this method does not deal with nesting used for e.g.\n * psuedo-selectors or media queries. That responsibility is left to  the\n * `generateCSS` function.\n *\n * @param {string} selector: the selector associated with the ruleset\n * @param {Object} declarations: a map from camelCased CSS property name to CSS\n *     property value.\n * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS\n *     property name to a function which will map the given value to the value\n *     that is output.\n * @param {bool} useImportant: A boolean saying whether to append \"!important\"\n *     to each of the CSS declarations.\n * @returns {string} A string of raw CSS.\n *\n * Examples:\n *\n *    generateCSSRuleset(\".blah\", { color: \"red\" })\n *    -> \".blah{color: red !important;}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {}, false)\n *    -> \".blah{color: red}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {color: c => c.toUpperCase})\n *    -> \".blah{color: RED}\"\n *    generateCSSRuleset(\".blah:hover\", { color: \"red\" })\n *    -> \".blah:hover{color: red}\"\n */\nvar generateCSSRuleset = function generateCSSRuleset(selector, /* : string */\ndeclarations, /* : OrderedElements */\nstringHandlers, /* : StringHandlers */\nuseImportant, /* : boolean */\nselectorHandlers /* : SelectorHandler[] */\n) /* : string */{\n    // Mutates declarations\n    runStringHandlers(declarations, stringHandlers, selectorHandlers);\n\n    var originalElements = _extends({}, declarations.elements);\n\n    // NOTE(emily): This mutates handledDeclarations.elements.\n    var prefixedElements = prefixAll(declarations.elements);\n\n    var elementNames = Object.keys(prefixedElements);\n    if (elementNames.length !== declarations.keyOrder.length) {\n        // There are some prefixed values, so we need to figure out how to sort\n        // them.\n        //\n        // Loop through prefixedElements, looking for anything that is not in\n        // sortOrder, which means it was added by prefixAll. This means that we\n        // need to figure out where it should appear in the sortOrder.\n        for (var i = 0; i < elementNames.length; i++) {\n            if (!originalElements.hasOwnProperty(elementNames[i])) {\n                // This element is not in the sortOrder, which means it is a prefixed\n                // value that was added by prefixAll. Let's try to figure out where it\n                // goes.\n                var originalStyle = undefined;\n                if (elementNames[i][0] === 'W') {\n                    // This is a Webkit-prefixed style, like \"WebkitTransition\". Let's\n                    // find its original style's sort order.\n                    originalStyle = elementNames[i][6].toLowerCase() + elementNames[i].slice(7);\n                } else if (elementNames[i][1] === 'o') {\n                    // This is a Moz-prefixed style, like \"MozTransition\". We check\n                    // the second character to avoid colliding with Ms-prefixed\n                    // styles. Let's find its original style's sort order.\n                    originalStyle = elementNames[i][3].toLowerCase() + elementNames[i].slice(4);\n                } else {\n                    // if (elementNames[i][1] === 's') {\n                    // This is a Ms-prefixed style, like \"MsTransition\".\n                    originalStyle = elementNames[i][2].toLowerCase() + elementNames[i].slice(3);\n                }\n\n                if (originalStyle && originalElements.hasOwnProperty(originalStyle)) {\n                    var originalIndex = declarations.keyOrder.indexOf(originalStyle);\n                    declarations.keyOrder.splice(originalIndex, 0, elementNames[i]);\n                } else {\n                    // We don't know what the original style was, so sort it to\n                    // top. This can happen for styles that are added that don't\n                    // have the same base name as the original style.\n                    declarations.keyOrder.unshift(elementNames[i]);\n                }\n            }\n        }\n    }\n\n    var transformValue = useImportant === false ? _util.stringifyValue : _util.stringifyAndImportantifyValue;\n\n    var rules = [];\n    for (var i = 0; i < declarations.keyOrder.length; i++) {\n        var key = declarations.keyOrder[i];\n        var value = prefixedElements[key];\n        if (Array.isArray(value)) {\n            // inline-style-prefixer returns an array when there should be\n            // multiple rules for the same key. Here we flatten to multiple\n            // pairs with the same key.\n            for (var j = 0; j < value.length; j++) {\n                rules.push(transformRule(key, value[j], transformValue));\n            }\n        } else {\n            rules.push(transformRule(key, value, transformValue));\n        }\n    }\n\n    if (rules.length) {\n        return selector + '{' + rules.join(\"\") + '}';\n    } else {\n        return \"\";\n    }\n};\nexports.generateCSSRuleset = generateCSSRuleset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/generate.js\n// module id = 32\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalizeString;\nfunction capitalizeString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/utils/capitalizeString.js\n// module id = 33\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar MAP_EXISTS = typeof Map !== 'undefined';\n\nvar OrderedElements = (function () {\n    /* ::\n    elements: {[string]: any};\n    keyOrder: string[];\n    */\n\n    function OrderedElements() {\n        _classCallCheck(this, OrderedElements);\n\n        this.elements = {};\n        this.keyOrder = [];\n    }\n\n    _createClass(OrderedElements, [{\n        key: 'forEach',\n        value: function forEach(callback /* : (string, any) => void */) {\n            for (var i = 0; i < this.keyOrder.length; i++) {\n                // (value, key) to match Map's API\n                callback(this.elements[this.keyOrder[i]], this.keyOrder[i]);\n            }\n        }\n    }, {\n        key: 'set',\n        value: function set(key, /* : string */value, /* : any */shouldReorder /* : ?boolean */) {\n            var _this = this;\n\n            if (!this.elements.hasOwnProperty(key)) {\n                this.keyOrder.push(key);\n            } else if (shouldReorder) {\n                var index = this.keyOrder.indexOf(key);\n                this.keyOrder.splice(index, 1);\n                this.keyOrder.push(key);\n            }\n\n            if (value == null) {\n                this.elements[key] = value;\n                return;\n            }\n\n            if (MAP_EXISTS && value instanceof Map || value instanceof OrderedElements) {\n                var _ret = (function () {\n                    // We have found a nested Map, so we need to recurse so that all\n                    // of the nested objects and Maps are merged properly.\n                    var nested = _this.elements.hasOwnProperty(key) ? _this.elements[key] : new OrderedElements();\n                    value.forEach(function (value, key) {\n                        nested.set(key, value, shouldReorder);\n                    });\n                    _this.elements[key] = nested;\n                    return {\n                        v: undefined\n                    };\n                })();\n\n                if (typeof _ret === 'object') return _ret.v;\n            }\n\n            if (!Array.isArray(value) && typeof value === 'object') {\n                // We have found a nested object, so we need to recurse so that all\n                // of the nested objects and Maps are merged properly.\n                var nested = this.elements.hasOwnProperty(key) ? this.elements[key] : new OrderedElements();\n                var keys = Object.keys(value);\n                for (var i = 0; i < keys.length; i += 1) {\n                    nested.set(keys[i], value[keys[i]], shouldReorder);\n                }\n                this.elements[key] = nested;\n                return;\n            }\n\n            this.elements[key] = value;\n        }\n    }, {\n        key: 'get',\n        value: function get(key /* : string */) /* : any */{\n            return this.elements[key];\n        }\n    }, {\n        key: 'has',\n        value: function has(key /* : string */) /* : boolean */{\n            return this.elements.hasOwnProperty(key);\n        }\n    }, {\n        key: 'addStyleType',\n        value: function addStyleType(styleType /* : any */) /* : void */{\n            var _this2 = this;\n\n            if (MAP_EXISTS && styleType instanceof Map || styleType instanceof OrderedElements) {\n                styleType.forEach(function (value, key) {\n                    _this2.set(key, value, true);\n                });\n            } else {\n                var keys = Object.keys(styleType);\n                for (var i = 0; i < keys.length; i++) {\n                    this.set(keys[i], styleType[keys[i]], true);\n                }\n            }\n        }\n    }]);\n\n    return OrderedElements;\n})();\n\nexports['default'] = OrderedElements;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/ordered-elements.js\n// module id = 34\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findTabbableDescendants;\n/*!\n * Adapted from jQuery UI core\n *\n * http://jqueryui.com\n *\n * Copyright 2014 jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n *\n * http://api.jqueryui.com/category/ui-core/\n */\n\nvar tabbableNode = /input|select|textarea|button|object/;\n\nfunction hidesContents(element) {\n  var zeroSize = element.offsetWidth <= 0 && element.offsetHeight <= 0;\n\n  // If the node is empty, this is good enough\n  if (zeroSize && !element.innerHTML) return true;\n\n  // Otherwise we need to check some styles\n  var style = window.getComputedStyle(element);\n  return zeroSize ? style.getPropertyValue(\"overflow\") !== \"visible\" : style.getPropertyValue(\"display\") == \"none\";\n}\n\nfunction visible(element) {\n  var parentElement = element;\n  while (parentElement) {\n    if (parentElement === document.body) break;\n    if (hidesContents(parentElement)) return false;\n    parentElement = parentElement.parentNode;\n  }\n  return true;\n}\n\nfunction focusable(element, isTabIndexNotNaN) {\n  var nodeName = element.nodeName.toLowerCase();\n  var res = tabbableNode.test(nodeName) && !element.disabled || (nodeName === \"a\" ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n  return res && visible(element);\n}\n\nfunction tabbable(element) {\n  var tabIndex = element.getAttribute(\"tabindex\");\n  if (tabIndex === null) tabIndex = undefined;\n  var isTabIndexNaN = isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);\n}\n\nfunction findTabbableDescendants(element) {\n  return [].slice.call(element.querySelectorAll(\"*\"), 0).filter(tabbable);\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/tabbable.js\n// module id = 35\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertNodeList = assertNodeList;\nexports.setElement = setElement;\nexports.validateElement = validateElement;\nexports.hide = hide;\nexports.show = show;\nexports.documentNotReadyOrSSRTesting = documentNotReadyOrSSRTesting;\nexports.resetForTesting = resetForTesting;\n\nvar _warning = require(\"warning\");\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar globalElement = null;\n\nfunction assertNodeList(nodeList, selector) {\n  if (!nodeList || !nodeList.length) {\n    throw new Error(\"react-modal: No elements were found for selector \" + selector + \".\");\n  }\n}\n\nfunction setElement(element) {\n  var useElement = element;\n  if (typeof useElement === \"string\") {\n    var el = document.querySelectorAll(useElement);\n    assertNodeList(el, useElement);\n    useElement = \"length\" in el ? el[0] : el;\n  }\n  globalElement = useElement || globalElement;\n  return globalElement;\n}\n\nfunction validateElement(appElement) {\n  if (!appElement && !globalElement) {\n    (0, _warning2.default)(false, [\"react-modal: App element is not defined.\", \"Please use `Modal.setAppElement(el)` or set `appElement={el}`.\", \"This is needed so screen readers don't see main content\", \"when modal is opened. It is not recommended, but you can opt-out\", \"by setting `ariaHideApp={false}`.\"].join(\" \"));\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction hide(appElement) {\n  if (validateElement(appElement)) {\n    (appElement || globalElement).setAttribute(\"aria-hidden\", \"true\");\n  }\n}\n\nfunction show(appElement) {\n  if (validateElement(appElement)) {\n    (appElement || globalElement).removeAttribute(\"aria-hidden\");\n  }\n}\n\nfunction documentNotReadyOrSSRTesting() {\n  globalElement = null;\n}\n\nfunction resetForTesting() {\n  globalElement = null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/ariaAppHider.js\n// module id = 36\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.add = add;\nexports.remove = remove;\nexports.totalCount = totalCount;\nvar classListMap = {};\n\nfunction get() {\n  return classListMap;\n}\n\nfunction add(bodyClass) {\n  // Set variable and default if none\n  if (!classListMap[bodyClass]) {\n    classListMap[bodyClass] = 0;\n  }\n  classListMap[bodyClass] += 1;\n  return bodyClass;\n}\n\nfunction remove(bodyClass) {\n  if (classListMap[bodyClass]) {\n    classListMap[bodyClass] -= 1;\n  }\n  return bodyClass;\n}\n\nfunction totalCount() {\n  return Object.keys(classListMap).reduce(function (acc, curr) {\n    return acc + classListMap[curr];\n  }, 0);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/refCount.js\n// module id = 37\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canUseDOM = undefined;\n\nvar _exenv = require(\"exenv\");\n\nvar _exenv2 = _interopRequireDefault(_exenv);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EE = _exenv2.default;\n\nvar SafeHTMLElement = EE.canUseDOM ? window.HTMLElement : {};\n\nvar canUseDOM = exports.canUseDOM = EE.canUseDOM;\n\nexports.default = SafeHTMLElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/safeHTMLElement.js\n// module id = 38\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { MODAL_STYLE } from './styles';\n\n/**\n * A modal that is rendered while saving a song.\n * There's no escaping this modal. It's visible until saving completes.\n */\nclass ModalSaving extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"Saving...\"\n        isOpen={true}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            Saving, please wait&hellip;{' '}\n            <i className=\"fa fa-spinner fa-spin\" aria-hidden={true} />\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nexport default ModalSaving;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalSaving.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App, { QUERY_PROP_KEYS, QueryProps, Song } from './App';\nimport { Auth, parseAuth } from './auth';\nimport { parseQuery, toQueryString } from './util/queryString';\n\n/**\n * Renders Hacklily, with props set.\n */\nfunction render(): void {\n  ReactDOM.render(\n    <App\n      {...getQueryProps()}\n      dirtySongs={getDirtySongs()}\n      auth={getAuth()}\n      csrf={localStorage.csrf || null}\n      colourScheme={localStorage.colourScheme || 'vs-dark'}\n      setQuery={setQuery}\n      editSong={editSong}\n      markSongClean={markSongClean}\n      setAuth={setAuth}\n      setColourScheme={setColourScheme}\n      setCSRF={setCSRF}\n      isStandalone={process.env.REACT_APP_STANDALONE === 'yes'}\n    />,\n    document.getElementById('root'),\n  );\n}\n\n/**\n * Gets query props from the URL.\n *\n * If a hash string is present, it will be used instead of the query.\n */\nfunction getQueryProps(): QueryProps {\n  const hash: string = window.location.hash.slice(1);\n  const queryObj: { [key: string]: string } = parseQuery(hash || window.location.search);\n  const query: QueryProps = {};\n  Object.keys(queryObj).forEach((key: string) => {\n    const queryPropIdx: number = (QUERY_PROP_KEYS as string[]).indexOf(key);\n    if (queryPropIdx === -1) {\n      console.warn(\n        `Warning: unknown query property ${key}. ` +\n        'Please add it to QUERY_PROP_KEYS in App.tsx.',\n      );\n\n      return;\n    }\n    // Note: queryPropKey === key, just typed correctly\n    const queryPropKey: keyof QueryProps = QUERY_PROP_KEYS[queryPropIdx];\n    query[queryPropKey] = queryObj[key];\n  });\n\n  return query;\n}\n\n/**\n * Like React's setState, but for the URL query parameters.\n *\n * If the query string is too long, a hash ('#') will be used instead of a query to avoid needing\n * to pass the long URL to the server.\n */\nfunction setQuery(\n  queryUpdates: Pick<QueryProps, keyof QueryProps>,\n  replaceState: boolean = false,\n): void {\n\n  const query: QueryProps = getQueryProps();\n  (Object.keys(queryUpdates) as (keyof QueryProps)[]).forEach((key: keyof QueryProps): void => {\n    if (key in queryUpdates) {\n      query[key] = queryUpdates[key];\n    }\n  });\n\n  const origConnector: string = window.location.hash.length > 1 ? '#' : '?';\n  const base: string = location.href.split(origConnector)[0];\n  const queryString: string = toQueryString(query as { [key: string]: string });\n  const connector: string = base.length + queryString.length + 1 > 1024 ? '#' : '?';\n\n  const newUrl: string = queryString.length ? `${base}${connector}${queryString}` : base;\n\n  if (replaceState) {\n    history.replaceState(null, '', newUrl);\n  } else {\n    history.pushState(null, '', newUrl);\n  }\n  render();\n}\n\nfunction getDirtySongs(): { [key: string]: Song } {\n  const songs: { [key: string]: Song } = {};\n  for (let i: number = 0; i < localStorage.length; i = i + 1) {\n    const key: string | null = localStorage.key(i);\n    if (!key) {\n      continue;\n    }\n    const value: string | null = localStorage.getItem(key);\n    if (!value) {\n      continue;\n    }\n    if (key.startsWith('dirtySong::')) {\n      songs[key.split('::')[1]] = JSON.parse(value);\n    }\n  }\n\n  return songs;\n}\n\nfunction getAuth(): Auth | null {\n  return parseAuth(localStorage.auth);\n}\n\nfunction editSong(songID: string, song: Song): void {\n  localStorage[`dirtySong::${songID}`] = JSON.stringify(song);\n  render();\n}\n\nfunction markSongClean(song: string): void {\n  delete localStorage[`dirtySong::${song}`];\n  render();\n}\n\nfunction setAuth(auth: Auth | null): void {\n  if (!auth) {\n    delete localStorage.auth;\n  } else {\n    localStorage.auth = JSON.stringify(auth);\n  }\n  render();\n}\n\nfunction setColourScheme(colourScheme: 'vs-dark' | 'vs'): void {\n  localStorage.colourScheme = colourScheme;\n  document.location.reload();\n}\n\nfunction setCSRF(csrf: string | null): void {\n  if (!csrf) {\n    delete localStorage.csrf;\n    delete localStorage.csrfQueryParams;\n  } else {\n    localStorage.csrf = csrf;\n    localStorage.csrfQueryParams = JSON.stringify(getQueryProps(), null, 2);\n  }\n  render();\n}\n\n/*\n * Init Hacklily.\n */\nwindow.addEventListener('popstate', (ev: PopStateEvent): void => {\n  render();\n});\n\n// Add back query props during OAuth flow, if needed.\nconst queryProps: QueryProps = getQueryProps();\nif (queryProps.state === localStorage.csrf && localStorage.csrf &&\n    localStorage.csrfQueryParams) {\n  // no need to render, because setQuery calls render.\n  const newQuery: QueryProps = JSON.parse(localStorage.csrfQueryParams);\n  setQuery(newQuery, true);\n} else {\n  render();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/index.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport Makelily from 'makelily'; // note: use for types only\nimport React from 'react';\n\nimport {\n  Auth,\n  checkLogin,\n  redirectToLogin,\n  revokeGitHubAuth,\n} from './auth';\nimport Editor from './Editor';\nimport { cat, FileNotFound, getOrCreateRepo } from './gitfs';\nimport Header, { MIN_BOTH_WIDTH, MODE_BOTH, MODE_EDIT, MODE_VIEW, ViewMode } from './Header';\nimport Menu from './Menu';\nimport Modal404 from './Modal404';\nimport ModalAbout from './ModalAbout';\nimport ModalConflict from './ModalConflict';\nimport ModalLocked, { lock, setEditingNotificationHandler } from './ModalLocked';\nimport ModalLogin from './ModalLogin';\nimport ModalPublish, { doPublish, doUnpublish } from './ModalPublish';\nimport ModalSaving from './ModalSaving';\nimport ModalUnsavedChangesInterstitial from './ModalUnsavedChangesInterstitial';\nimport Preview from './Preview';\nimport RPCClient from './RPCClient';\nimport StandaloneAppHost from './StandaloneAppHost';\nimport { APP_STYLE } from './styles';\n\nfunction last<T>(t: T[]): T {\n  return t[t.length - 1];\n}\n\nconst INITIAL_WS_COOLOFF: number = 2;\nconst BACKEND_WS_URL: string | undefined = process.env.REACT_APP_BACKEND_WS_URL;\nconst PUBLIC_READONLY: string = 'PUBLIC_READONLY';\n\n/**\n * Properties derived from URL.\n *\n * e.g., https://www.hacklily.org/?edit=hacklily/user-jnetterf/test.ly =>\n *   {\n *     edit: 'hacklily/user-jnetterf/test.ly',\n *   }\n *\n * NOTE: When you add a key here, also add it to QUERY_PROP_KEYS below.\n */\nexport interface QueryProps {\n  /**\n   * Truthy if this was redirected from a 404 page.\n   */\n  '404'?: string;\n\n  /*\n   * Truthy if we should show the about page.\n   */\n  about?: string;\n\n  /**\n   * When logging in from GitHub, code is the temporary code that will be exchanged via\n   * the backend for an access token.\n   *\n   * See also 'state'.\n   *\n   * See https://developer.github.com/v3/oauth/\n   */\n  code?: string;\n\n  /**\n   * The song being edited, with the following format:\n   *\n   *   `${org}/${repo}/${song}.ly`\n   *\n   * If it is undefined, Hacklily will act as a sandbox.\n   */\n  edit?: string;\n\n  /**\n   * If truthy, and we are authenticated, show a dialog to save a\n   * copy of this song.\n   */\n  saveAs?: string;\n\n  /**\n   * When set, open a read-only sandbox with this code.\n   * Takes precedence over \"edit\".\n   */\n  src?: string;\n\n  /**\n   * In standalone mode, whether to show the import dialog.\n   */\n  standaloneImport?: boolean;\n\n  /**\n   * When logging in from GitHub, this is the CSRF, generated in ConnectToGitHub.\n   *\n   * See also 'code'.\n   *\n   * See https://developer.github.com/v3/oauth/.\n   */\n  state?: string;\n}\n\nexport const QUERY_PROP_KEYS: (keyof QueryProps)[] = [\n  '404',\n  'about',\n  'code',\n  'edit',\n  'saveAs',\n  'src',\n  'state',\n  'standaloneImport',\n];\n\nexport interface Song {\n  /**\n   * The SHA of the clean version of the song. Null if no version has been saved.\n   *\n   * Used to detect changes from other sources while editing a song.\n   */\n  baseSHA: string | null;\n\n  /**\n   * The version of the song, with all the edits.\n   */\n  src: string;\n}\n\ninterface Props extends QueryProps {\n  /**\n   * From localStorage, information about the current GitHub user.\n   */\n  auth: Auth | null;\n\n  /**\n   * From localStorage, the color scheme.\n   */\n  colourScheme: 'vs-dark' | 'vs';\n\n  /**\n   * From localStorage, used as part of the GitHub OAuth flow.\n   */\n  csrf: string;\n\n  /**\n   * From localStorage, all songs that have changes not pushed to GitHub.\n   */\n  dirtySongs: {[key: string]: Song};\n\n  isStandalone: boolean;\n\n  /**\n   * Mark a song as dirty and store it in localStorage.\n   */\n  editSong(songID: string, song: Song): void;\n\n  /**\n   * Remove a song from dirtySongs. This can be either because the song is now\n   * clean, or because the local changes have been discarded. Updates localStorage.\n   */\n  markSongClean(song: string): void;\n\n  /**\n   * Logs in or out of GitHub. Updates localStorage.\n   */\n  setAuth(auth: Auth | null): void;\n\n  /**\n   * Stores the color scheme in localStorage.\n   */\n  setColourScheme(colourScheme: 'vs-dark' | 'vs'): void;\n\n  /**\n   * Sets the CSRF (\"state\") as part of the GitHub OAuth flow.\n   */\n  setCSRF(csrf: string): void;\n\n  /**\n   * Updates a field in the URL query.\n   */\n  setQuery<K extends keyof QueryProps>(updates: Pick<QueryProps, K>, replaceState?: boolean): void;\n}\n\ninterface State {\n  cleanSongs: {[key: string]: Song};\n  connectToGitHubReason: string | null;\n  defaultSelection: monaco.ISelection | null;\n  interstitialChanges: {} | null;\n\n  /**\n   * In the standalone app, songs that are in the local song\n   * folder.\n   */\n  localFiles: string[] | null;\n\n  /**\n   * True if we started editing this song in another tab.\n   */\n  locked: boolean;\n  login: boolean;\n  logs: string | null;\n  makelilyClef: string;\n  makelilyKey: string;\n  makelilySingleTaskMode: boolean;\n  makelilyTime: string;\n  makelilyTool: string;\n  menu: boolean;\n  midi: ArrayBuffer | null;\n  mode: ViewMode;\n  pendingPreviews: number;\n  publish: boolean;\n  reconnectCooloff: number;\n  reconnectTimeout: number;\n  saving: boolean;\n  showMakelily: typeof Makelily | null;\n  windowWidth: number;\n  wsError: boolean;\n\n  makelilyInsertCB?(ly: string): void;\n}\n\nconst DEFAULT_SONG: string =\n`\\\\header {\n  title = \"Untitled\"\n  composer = \"Composer\"\n}\n\n\\\\relative c' {\n  c4\n}`;\n\n/**\n * Root component of Hacklily. This renders everything on the page.\n *\n * Receives props from the query (URL) as well as localStorage -- see index.tsx for how that works.\n */\nexport default class App extends React.PureComponent<Props, State> {\n  state: State = {\n    cleanSongs: {\n      null: {\n        baseSHA: null,\n        src: DEFAULT_SONG,\n      },\n    },\n    connectToGitHubReason: null,\n    defaultSelection: null,\n    interstitialChanges: null,\n    localFiles: null,\n    locked: false,\n    login: false,\n    logs: '',\n    makelilyClef: 'treble',\n    makelilyKey: 'c \\\\major',\n    makelilySingleTaskMode: true,\n    makelilyTime: '4/4',\n    makelilyTool: 'notes',\n    menu: false,\n    midi: null,\n    mode: window.innerWidth >= MIN_BOTH_WIDTH ? MODE_BOTH : MODE_VIEW,\n    pendingPreviews: 0,\n    publish: false,\n    reconnectCooloff: INITIAL_WS_COOLOFF,\n    reconnectTimeout: NaN,\n    saving: false,\n    showMakelily: null,\n    windowWidth: window.innerWidth,\n    wsError: false,\n  };\n\n  private editor: Editor | null = null;\n  private rpc: RPCClient | null = null;\n  private socket: WebSocket | null = null;\n  private standaloneAppHost: StandaloneAppHost | null = null;\n\n  componentDidMount(): void {\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (this.props.edit !== prevProps.edit) {\n      this.fetchSong();\n      lock(this.props.edit || 'null');\n    }\n    if (this.props.isStandalone && !this.props.auth && this.props.csrf && !this.props.code) {\n      redirectToLogin(this.props.csrf);\n    }\n\n    if (!this.props.auth && !this.state.login &&\n        !this.props.state && this.props.saveAs) {\n      // We're not in a situation where we can save as, so remove that query.\n      this.props.setQuery(\n        {\n          saveAs: undefined,\n        },\n        true,\n      );\n    }\n  }\n\n  componentWillMount(): void {\n    this.connectToWS();\n    this.fetchSong();\n    lock(this.props.edit || 'null');\n    window.addEventListener('beforeunload', this.handleBeforeUnload);\n    setEditingNotificationHandler(this.handleEditingNotification);\n    if (this.props.isStandalone && !this.props.auth && !this.props.csrf) {\n      const randomContainer: Uint32Array = new Uint32Array(1);\n      crypto.getRandomValues(randomContainer);\n      const csrf: string = randomContainer[0].toString();\n      this.props.setCSRF(csrf);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.disconnectWS();\n    window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    window.addEventListener('resize', this.handleWindowResize);\n    setEditingNotificationHandler(null);\n  }\n\n  // tslint:disable-next-line:max-func-body-length\n  render(): JSX.Element {\n    const {\n      logs,\n      mode,\n      midi,\n      defaultSelection,\n      windowWidth,\n    } = this.state;\n\n    const {\n      auth,\n      edit,\n      isStandalone,\n    } = this.props;\n\n    const online: boolean = this.isOnline();\n    const preview: React.ReactNode = this.renderPreview();\n    const song: Song | undefined = this.song();\n    const sandboxIsDirty: boolean = Boolean(this.props.edit || this.props.src) &&\n      Boolean(this.props.dirtySongs.null);\n\n    const header: React.ReactNode = !isStandalone && (\n      <Header\n        mode={mode}\n        midi={midi}\n        online={online}\n        loggedIn={auth !== null}\n        onModeChanged={this.handleModeChanged}\n        onShowClone={this.handleShowSaveAs}\n        onShowMakelily={this.handleShowMakelily}\n        onShowMenu={this.handleShowMenu}\n        onShowNew={this.handleShowNew}\n        onShowPublish={this.handleShowPublish}\n        sandboxIsDirty={sandboxIsDirty}\n        song={this.props.src ? 'untitled-import' : edit}\n        inSandbox={!this.props.edit && !this.props.src}\n        isDirty={this.isDirty()}\n        isImmutableSrc={Boolean(this.props.src)}\n        windowWidth={windowWidth}\n      />\n    );\n\n    let standaloneAppHost: JSX.Element | null;\n    if (this.props.isStandalone) {\n      standaloneAppHost = (\n        <StandaloneAppHost\n          ref={this.setStandaloneAppHost}\n          auth={auth}\n          showOpenDialog={this.state.menu}\n          showSaveAs={this.state.publish}\n          showUnsavedChangesDialog={!!this.state.interstitialChanges}\n          showImport={!!this.props.standaloneImport}\n          showSaving={this.state.saving}\n          onNewSong={this.handleShowNew}\n          onOpen={this.handleOpen}\n          onOpenFile={this.handleOpenFileStandalone}\n          onOpenCancel={this.handleHideMenu}\n          onImport={this.handleImport}\n          onImportRejected={this.handleImportRejected}\n          onRequestImport={this.handleImportRequested}\n          onSave={this.handleShowPublish}\n          onSaveAsCancel={this.handleHidePublish}\n          onSaveAsFile={this.standalonePublish}\n          onFind={this.handleFind}\n          onFindNext={this.handleFindNext}\n          onViewMode={this.handleModeChangedView}\n          onSelectAll={this.handleSelectAll}\n          onSplitMode={this.handleModeChangedSplit}\n          onCodeMode={this.handleModeChangedEdit}\n          onAboutHacklily={this.handleShowHelp}\n          onExportRequested={this.handleExport}\n          onLocalFilesChanged={this.handleLocalFilesChanged}\n          onUnsavedChangesCancel={this.cancelInterstitial}\n          onUnsavedChangesDiscard={this.discardChanges}\n          onUnsavedChangesSave={this.handleShowPublish}\n        />\n      );\n    } else {\n      standaloneAppHost = null;\n    }\n\n    return (\n      <div className={`App ${isStandalone ? 'standalone' : ''}`}>\n        {header}\n        {this.renderModal()}\n        <div className=\"content\">\n          <Editor\n            ref={this.setEditor}\n            code={song ? song.src : undefined}\n            colourScheme={this.props.colourScheme}\n            mode={mode}\n            onSetCode={this.handleCodeChanged}\n            logs={logs}\n            defaultSelection={defaultSelection}\n            readOnly={song ? song.baseSHA === PUBLIC_READONLY : false}\n            isImmutableSrc={Boolean(this.props.src)}\n            showMakelily={this.handleShowMakelily}\n          />\n          {preview}\n        </div>\n        {standaloneAppHost}\n      </div>\n    );\n  }\n\n  private cancelInterstitial = (): void => {\n    this.setState({\n      interstitialChanges: null,\n    });\n  }\n\n  private connectToWS(): void {\n    if (!BACKEND_WS_URL) {\n      this.setState({\n        wsError: true,\n      });\n\n      return;\n    }\n    this.socket = new WebSocket(BACKEND_WS_URL);\n\n    this.socket.addEventListener('open', this.handleWSOpen);\n    this.socket.addEventListener('error', this.handleWSError);\n    this.socket.addEventListener('close', this.handleWSError);\n    this.forceUpdate();\n  }\n\n  private discardChanges = (): void => {\n    if (!this.state.interstitialChanges) {\n      throw new Error('Invariant violation');\n    }\n    const edit: string = this.props.edit || 'null';\n    this.props.markSongClean(edit);\n    this.props.setQuery(this.state.interstitialChanges);\n    this.setState({\n      interstitialChanges: null,\n    });\n  }\n\n  private disconnectWS(): void {\n    if (this.socket) {\n      this.socket.removeEventListener('open', this.handleWSOpen);\n      this.socket.removeEventListener('error', this.handleWSError);\n      this.socket.removeEventListener('close', this.handleWSError);\n      this.socket.close();\n      this.socket = null;\n      if (this.rpc) {\n        this.rpc.destroy();\n        this.rpc = null;\n      }\n    }\n  }\n\n  private async fetchSong(): Promise<void> {\n    const { auth, edit } = this.props;\n    if (edit === 'null' || !edit) {\n      return;\n    }\n\n    const path: string[] = edit.split('/');\n    const requestedRepo: string = `${path[0]}/${path[1]}`;\n    const requestedFile: string = path.slice(2).join('/');\n\n    // TODO(joshuan): For logged in users, allow them to edit files in any\n    // repo they control.\n\n    if (!auth || auth.repo !== requestedRepo) {\n      const req: Response = await fetch(\n        `https://raw.githubusercontent.com/${requestedRepo}/` +\n        `master/${requestedFile}`);\n\n      if (req.status >= 400) {\n        alert('Could not fetch the requested song.');\n\n        return;\n      }\n      const content: string = await req.text();\n      const cleanSongs: {[key: string]: Song} = JSON.parse(JSON.stringify(this.state.cleanSongs));\n      if (cleanSongs[edit]) {\n        // We have a better version.\n        return;\n      }\n      cleanSongs[edit] = {\n        baseSHA: PUBLIC_READONLY,\n        src: content,\n      };\n\n      this.setState({\n        cleanSongs,\n      });\n\n      return;\n    }\n\n    try {\n      const { content, sha } = await cat(auth.accessToken, auth.repo, requestedFile);\n      const cleanSongs: {[key: string]: Song} = JSON.parse(JSON.stringify(this.state.cleanSongs));\n      cleanSongs[edit] = {\n        baseSHA: sha,\n        src: content,\n      };\n\n      this.setState({\n        cleanSongs,\n      });\n    } catch (err) {\n      if (err instanceof FileNotFound) {\n        this.props.setQuery({\n          edit: undefined,\n          src: undefined,\n          404: '1',\n        });\n      }\n    }\n  }\n\n  private handleBeforeUnload = (ev: BeforeUnloadEvent): void => {\n    // Don't bug users when going to GitHub OAuth\n    if (this.state.login) {\n      return;\n    }\n\n    // Don't bug users when they have no choice\n    if (this.state.locked) {\n      return;\n    }\n\n    // Don't bug users in the app\n    if (this.props.isStandalone) {\n      return;\n    }\n\n    if (this.isDirty()) {\n      this.setState({\n        interstitialChanges: null,\n      });\n      ev.returnValue = 'Changes you made have not been saved.';\n    }\n  }\n\n  private handleClear404 = (): void => {\n    this.props.setQuery({\n      404: undefined,\n    });\n  }\n\n  private handleCodeChanged = (newValue: string): void => {\n    const { baseSHA, src: clean } = this.state.cleanSongs[this.props.edit || 'null'];\n    if (clean === newValue) {\n      this.props.markSongClean(this.props.edit || 'null');\n    } else {\n      this.props.editSong(this.props.edit || 'null', {\n        baseSHA,\n        src: newValue,\n      });\n    }\n  }\n\n  private handleDeleteSong = async (songID: string): Promise<void> => {\n    try {\n      this.setState({\n        saving: true,\n      });\n      const { auth } = this.props;\n      if (!auth || !this.rpc) {\n        throw new Error('Invariant violation: contract broken');\n      }\n      const path: string = last(songID.split('/'));\n\n      const ok: boolean = await doUnpublish(auth, path, this.rpc);\n\n      if (ok) {\n        const cleanSongs: {[key: string]: Song} =\n          JSON.parse(JSON.stringify(this.state.cleanSongs));\n        delete cleanSongs[songID];\n        this.setState({\n          cleanSongs,\n          menu: false,\n        });\n        this.props.markSongClean(songID);\n        this.props.setQuery({\n          edit: undefined,\n          src: undefined,\n        });\n      }\n    } finally {\n      this.setState({\n        saving: false,\n      });\n    }\n  }\n\n  private handleEditingNotification = (song: string): void => {\n    if (song === (this.props.edit || 'null')) {\n      this.setState({\n        locked: true,\n      });\n    }\n  }\n\n  private handleExport = (): void => {\n    throw new Error('Not implemented');\n  }\n\n  private handleFind = (): void => {\n    if (this.editor) {\n      this.editor.find();\n    }\n  }\n\n  private handleFindNext = (): void => {\n    if (this.editor) {\n      this.editor.findNext();\n    }\n  }\n\n  private handleHideHelp = (): void => {\n    this.props.setQuery({\n      about: undefined,\n    });\n  }\n\n  private handleHideLogin = (): void => {\n    this.setState({\n      connectToGitHubReason: null,\n      login: false,\n    });\n  }\n\n  private handleHideMakelily = (): void => {\n    this.setState({\n      makelilyInsertCB: undefined,\n      showMakelily: null,\n    });\n  }\n\n  private handleHideMenu = (): void => {\n    this.setState({\n      menu: false,\n    });\n  }\n\n  private handleHidePublish = (): void => {\n    if (this.props.saveAs) {\n      this.props.setQuery({\n        saveAs: undefined,\n      });\n    } else {\n      this.setState({\n        publish: false,\n      });\n    }\n    if (this.state.interstitialChanges) {\n      this.cancelInterstitial();\n    }\n  }\n\n  private handleImport = async (name: string, src: string): Promise<void> => {\n    this.props.setQuery(\n      {\n        edit: undefined,\n        src: undefined,\n      },\n      true,\n    );\n    this.props.editSong('null', {\n      baseSHA: null,\n      src,\n    });\n    this.handleShowPublish();\n  }\n\n  private handleImportRejected = (): void => {\n    this.props.setQuery({\n      standaloneImport: undefined,\n    });\n  }\n\n  private handleImportRequested = (): void => {\n    this.setQueryOrShowInterstitial({\n      standaloneImport: true,\n    });\n  }\n\n  private handleInsertLy = (ly: string): void => {\n    if (this.editor) {\n      if (this.state.makelilyInsertCB) {\n        this.state.makelilyInsertCB(`${ly}\\n`);\n      } else {\n        this.editor.insertText(`\\n${ly}\\n`);\n      }\n    }\n    this.setState({\n      makelilyInsertCB: undefined,\n      showMakelily: null,\n    });\n  }\n\n  private handleLoadSong = (edit: string): void => {\n    this.setQueryOrShowInterstitial({\n      edit,\n      src: undefined,\n    });\n    this.setState({\n      menu: false,\n    });\n  }\n\n  private handleLocalFilesChanged = (): void => {\n    if (this.standaloneAppHost) {\n      this.setState({\n        localFiles: this.standaloneAppHost.localFiles,\n      });\n    }\n  }\n\n  private handleLogsObtained = (logs: string | null): void => {\n    if (logs !== this.state.logs) {\n      this.setState({\n        logs,\n      });\n    }\n  }\n\n  private handleMidiObtained = (midi: ArrayBuffer | null): void => {\n    if (midi !== this.state.midi) {\n      this.setState({\n        midi,\n      });\n    }\n  }\n\n  private handleModeChanged = (mode: ViewMode): void => {\n    this.setState({\n      mode,\n    });\n  }\n\n  private handleModeChangedEdit = (): void => {\n    this.handleModeChanged(MODE_EDIT);\n  }\n\n  private handleModeChangedSplit = (): void => {\n    this.handleModeChanged(MODE_BOTH);\n  }\n\n  private handleModeChangedView = (): void => {\n    this.handleModeChanged(MODE_VIEW);\n  }\n\n  private handleOpen = (): void => {\n    this.setState({\n      menu: true,\n    });\n  }\n\n  private handleOpenFileStandalone = (filename: string, source: 'remote' | 'local',\n                                      sha: string, contents: string): void => {\n    const { auth } = this.props;\n    this.handleHideMenu();\n    if (source === 'remote') {\n      if (!auth) {\n        throw new Error('Not signed in. Cannot open remote file.');\n      }\n      this.handleLoadSong(`${auth.repo}/${filename}`);\n    } else {\n      throw new Error('Not implemented');\n    }\n  }\n\n  private handlePublished = (edit: string): void => {\n    this.props.markSongClean('null');\n    if (this.state.interstitialChanges) {\n      this.props.setQuery(this.state.interstitialChanges);\n      this.setState({\n        interstitialChanges: null,\n      });\n    } else {\n      this.props.setQuery({\n        edit,\n        saveAs: undefined,\n        src: undefined,\n      });\n    }\n\n    this.setState({\n      publish: false,\n    });\n\n    if (!this.rpc) {\n      throw new Error('Expected rpc to be defined');\n    }\n\n    this.rpc.call('notifySaved', {});\n  }\n\n  private handleResolveGitHub = (): void => {\n    if (!this.props.edit) {\n      // The sandbox can't have conflicts.\n      throw new Error('Expected us to be editing a published song');\n    }\n    this.props.markSongClean(this.props.edit);\n  }\n\n  private handleResolveLocalStorage = (): void => {\n    if (!this.props.edit) {\n      // The sandbox can't have conflicts.\n      throw new Error('Expected us to be editing a published song');\n    }\n\n    this.props.editSong(this.props.edit, {\n      baseSHA: this.state.cleanSongs[this.props.edit].baseSHA,\n      // tslint:disable-next-line:no-non-null-assertion\n      src: this.song()!.src,\n    });\n  }\n\n  private handleSelectAll = (): void => {\n    if (this.editor) {\n      this.editor.selectAll();\n    }\n  }\n\n  private handleSelectionChanged = (selection: monaco.ISelection | null): void => {\n    if (selection !== this.state.defaultSelection) {\n      this.setState({\n        defaultSelection: selection,\n      });\n    }\n  }\n  private handleShowHelp = (): void => {\n    this.setState({\n      menu: false,\n    });\n    this.props.setQuery({\n      about: '1',\n    });\n  }\n\n  private handleShowMakelily = async(\n    tool?: string, cb?: (ly: string) => void): Promise<void> => {\n\n    const editor: Editor | null = this.editor;\n    if (!editor) {\n      return;\n    }\n\n    const makelilyComponent: typeof Makelily = (await import('makelily')).default;\n\n    this.setState({\n      showMakelily: makelilyComponent,\n      ...editor.getMakelilyProperties(),\n      makelilyInsertCB: cb,\n      makelilySingleTaskMode: !!tool,\n      makelilyTool: tool || this.state.makelilyTool,\n    });\n  }\n\n  private handleShowMenu = (): void => {\n    this.setState({\n      menu: true,\n    });\n    if (this.props.about) {\n      this.props.setQuery({\n        about: undefined,\n      });\n    }\n  }\n\n  private handleShowNew = (): void => {\n    const isClean: boolean = !this.props.dirtySongs[this.props.edit || 'null'];\n\n    if (!this.props.auth && !isClean) {\n      this.setState({\n        connectToGitHubReason: 'Connect to GitHub to save this song\\u2026',\n        login: true,\n      });\n    } else {\n      this.setQueryOrShowInterstitial({\n        edit: undefined,\n        src: undefined,\n      });\n    }\n  }\n\n  private handleShowPublish = (): void => {\n    if (!this.props.auth) {\n      this.setState({\n        connectToGitHubReason: 'Connect to GitHub to share this song\\u2026',\n        login: true,\n      });\n    } else if (this.props.edit) {\n      this.handleUpdateGitHub();\n    } else {\n      this.setState({\n        publish: true,\n      });\n    }\n  }\n\n  private handleShowSaveAs = (): void => {\n    if (!this.props.auth) {\n      this.setState({\n        connectToGitHubReason: 'Connect to GitHub to save a copy of this song\\u2026',\n        login: true,\n      });\n      this.props.setQuery(\n        {\n          saveAs: '1',\n        },\n        // HACK: replace because going back in history won't clear the login modal\n        true,\n      );\n    } else {\n      this.props.setQuery({\n        saveAs: '1',\n      });\n    }\n  }\n\n  private handleSignIn = (): void => {\n    this.setState({\n      connectToGitHubReason: null,\n      login: true,\n      menu: false,\n      publish: false,\n    });\n  }\n\n  private handleSignOut = (): void => {\n    const { auth } = this.props;\n\n    if (!this.rpc) {\n      alert('Cannot sign out because you are not connected to the server.');\n\n      return;\n    }\n\n    this.props.setAuth(null);\n\n    if (!auth) {\n      throw new Error('Cannot sign out because we are not signed in.');\n    }\n    const token: string = auth.accessToken;\n    localStorage.clear();\n    revokeGitHubAuth(this.rpc, token);\n  }\n\n  private handleUpdateGitHub = async (): Promise<void> => {\n    try {\n      this.setState({\n        saving: true,\n      });\n      const song: Song | undefined = this.song();\n      const { auth, edit } = this.props;\n      if (!auth || !edit || !song || !this.rpc) {\n        throw new Error('Invariant violation: contract broken');\n      }\n      const path: string = last(edit.split('/'));\n\n      try {\n        await doPublish(song.src, auth, path, this.rpc, true);\n        const cleanSongs: {[key: string]: Song} =\n          JSON.parse(JSON.stringify(this.state.cleanSongs));\n        cleanSongs[edit] = {\n          baseSHA: song.baseSHA,\n          src: song.src,\n        };\n        this.setState({\n          cleanSongs,\n        });\n        this.props.markSongClean(edit);\n      } catch (err) {\n        alert(err.toString());\n      }\n\n      if (!this.rpc) {\n        throw new Error('Expected rpc to be defined');\n      }\n\n      await this.rpc.call('notifySaved', {});\n    } finally {\n      this.setState({\n        saving: false,\n      });\n      if (this.state.interstitialChanges) {\n        this.props.setQuery(this.state.interstitialChanges);\n        this.setState({\n          interstitialChanges: null,\n        });\n      }\n    }\n  }\n\n  private handleWindowResize = (): void => {\n    this.setState({\n      windowWidth: window.innerWidth,\n    });\n    if (this.state.mode === MODE_BOTH && window.innerWidth < MIN_BOTH_WIDTH) {\n      this.setState({\n        mode: MODE_VIEW,\n      });\n    }\n    if (this.state.mode !== MODE_BOTH && window.innerWidth >= MIN_BOTH_WIDTH) {\n      this.setState({\n        mode: MODE_BOTH,\n      });\n    }\n\n  }\n\n  private handleWSError = (e: Event): void => {\n    if (!this.socket) {\n      return;\n    }\n\n    this.disconnectWS();\n    this.setState({\n      reconnectCooloff: this.state.reconnectCooloff * 2,\n      reconnectTimeout: this.state.reconnectCooloff,\n      wsError: true,\n    });\n    setTimeout(this.wsReconnectTick, 1000);\n  }\n\n  private handleWSOpen = async (): Promise<void> => {\n    if (!this.socket) {\n      throw new Error('Socket not opened, but handleWSOpen called.');\n    }\n    this.rpc = new RPCClient(this.socket);\n    if (this.props.code && this.props.state) {\n      try {\n        const auth: Auth = await checkLogin(\n          this.rpc,\n          this.props.code,\n          this.props.state,\n          this.props.csrf,\n        );\n        auth.repoDetails = await getOrCreateRepo(auth);\n        // Note: needs to be in this order, or saveAs will disappear.\n        this.props.setAuth(auth);\n        this.props.setQuery(\n          {\n            code: undefined,\n            state: undefined,\n          },\n          true,\n        );\n      } catch (err) {\n        alert(err.message || 'Could not log you in');\n        this.props.setQuery(\n          {\n            code: undefined,\n            state: undefined,\n          },\n          true,\n        );\n      }\n    } else if (this.props.auth) {\n      try {\n        const auth: Auth = { ...this.props.auth };\n        auth.repoDetails = await getOrCreateRepo(auth);\n        this.props.setAuth(auth);\n      } catch (err) {\n        alert(err.message || 'Could not get GitHub repo details.');\n      }\n    }\n    this.setState({\n      reconnectCooloff: INITIAL_WS_COOLOFF,\n    });\n    this.forceUpdate();\n  }\n\n  private hasConflict(): boolean {\n    const { dirtySongs, edit } = this.props;\n    const { cleanSongs } = this.state;\n    const songName: string = edit || 'null';\n\n    const dirtySong: Song | undefined = dirtySongs[songName];\n    const cleanSong: Song | undefined = cleanSongs[songName];\n\n    return dirtySong && cleanSong && dirtySong.baseSHA !== cleanSong.baseSHA;\n  }\n\n  private isDirty(): boolean {\n    const { edit, dirtySongs, src } = this.props;\n\n    if (src) {\n      return false;\n    }\n\n    return dirtySongs[edit || 'null'] !== undefined;\n  }\n\n  private isOnline(): boolean {\n    return Boolean(this.rpc);\n  }\n\n  // tslint:disable-next-line:max-func-body-length\n  private renderModal(): React.ReactNode {\n    const {\n      locked,\n      login,\n      connectToGitHubReason,\n      menu,\n      publish,\n      interstitialChanges,\n      saving,\n      showMakelily,\n    } = this.state;\n\n    const {\n      about,\n      auth,\n      csrf,\n      isStandalone,\n      setCSRF,\n      '404': _404,\n      saveAs,\n    } = this.props;\n\n    const song: Song | undefined = this.song();\n    const conflict: boolean = this.hasConflict();\n\n    switch (true) {\n      case locked:\n        return <ModalLocked />;\n      case _404 !== undefined:\n        return (\n          <Modal404\n            onHide={this.handleClear404}\n          />\n        );\n      case saving && !isStandalone:\n        return <ModalSaving />;\n      case conflict:\n        return (\n          <ModalConflict\n            resolveGitHub={this.handleResolveGitHub}\n            resolveLocalStorage={this.handleResolveLocalStorage}\n          />\n        );\n      case login:\n        return (\n          <ModalLogin\n            key={location.href/* force new csrf on url change */}\n            connectToGitHubReason={connectToGitHubReason}\n            onHide={this.handleHideLogin}\n            csrf={csrf}\n            setCSRF={setCSRF}\n          />\n        );\n      case Boolean(about):\n        return (\n          <ModalAbout\n            onHide={this.handleHideHelp}\n          />\n        );\n      case publish || Boolean(saveAs):\n        if (song && auth && this.rpc && !isStandalone) {\n          return (\n            <ModalPublish\n              onHide={this.handleHidePublish}\n              onPublished={this.handlePublished}\n              auth={auth}\n              code={song.src}\n              rpc={this.rpc}\n            />\n          );\n        }\n\n        return null;\n      case menu && !isStandalone:\n        return (\n          <Menu\n            auth={auth}\n            colourScheme={this.props.colourScheme}\n            windowWidth={this.state.windowWidth}\n            onDeleteSong={this.handleDeleteSong}\n            onHide={this.handleHideMenu}\n            onShowAbout={this.handleShowHelp}\n            onSignIn={this.handleSignIn}\n            onSignOut={this.handleSignOut}\n            onLoadSong={this.handleLoadSong}\n            setColourScheme={this.props.setColourScheme}\n          />\n        );\n      case (interstitialChanges !== null && !isStandalone):\n        return (\n          <ModalUnsavedChangesInterstitial\n            discardChanges={this.discardChanges}\n            cancel={this.cancelInterstitial}\n            save={this.handleShowPublish}\n          />\n        );\n      case showMakelily !== null:\n        if (showMakelily === null) {\n          throw new Error('(this will never happen');\n        }\n\n        // tslint:disable-next-line variable-name\n        const MakelilyComponent: typeof Makelily = showMakelily;\n\n        return (\n          <MakelilyComponent\n            clef={this.state.makelilyClef}\n            defaultTool={this.state.makelilyTool}\n            keySig={this.state.makelilyKey}\n            onHide={this.handleHideMakelily}\n            singleTaskMode={this.state.makelilySingleTaskMode}\n            onInsertLy={this.handleInsertLy}\n            time={this.state.makelilyTime}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  private renderPreview(): React.ReactNode {\n    const { isStandalone } = this.props;\n    const { mode, reconnectTimeout, logs, wsError } = this.state;\n\n    const song: Song | undefined = this.song();\n\n    const online: boolean = this.isOnline();\n    if (!song) {\n      return (\n        <div\n            className={css(APP_STYLE.sheetMusicView)}\n            style={{ width: mode === MODE_BOTH ? '50%' : (mode === MODE_VIEW ? '100%' : '0') }}\n        >\n          <div className={css(APP_STYLE.sheetMusicError)}>\n            Fetching sheet music&hellip;\n          </div>\n        </div>\n      );\n    }\n\n    if (this.socket || isStandalone) {\n      if (online && this.rpc || isStandalone) {\n        let songURL: string | null = null;\n        if (this.props.edit) {\n          const songParts: string[] = this.props.edit.split('/');\n          songURL = `https://github.com/${songParts[0]}/${songParts[1]}/blob/master/${\n            songParts.slice(2).join('/')}`;\n        }\n\n        return (\n          <Preview\n            code={song.src}\n            isStandalone={isStandalone}\n            mode={mode}\n            onLogsObtained={this.handleLogsObtained}\n            onMidiObtained={this.handleMidiObtained}\n            onSelectionChanged={this.handleSelectionChanged}\n            rpc={isStandalone ? null : this.rpc}\n            standaloneRender={this.standaloneRender}\n            logs={logs}\n            songURL={songURL}\n          />\n        );\n      }\n\n      const previewMaskStyle: string = css(\n        APP_STYLE.pendingPreviewMask,\n        mode === MODE_VIEW && APP_STYLE.previewPendingMaskModeView,\n      );\n\n      return (\n        <span>\n          <div\n              className={css(APP_STYLE.sheetMusicView)}\n              style={{ width: mode === MODE_BOTH ? '50%' : (mode === MODE_VIEW ? '100%' : '0') }}\n          />\n          <div className={previewMaskStyle} />\n        </span>\n      );\n    }\n\n    if (!BACKEND_WS_URL) {\n      return (\n        <div\n            className={css(APP_STYLE.sheetMusicView)}\n            style={{ width: mode === MODE_BOTH ? '50%' : (mode === MODE_VIEW ? '100%' : '0') }}\n        >\n          <div className={css(APP_STYLE.sheetMusicError)}>\n            Could not connect to server because the <code>REACT_APP_BACKEND_WS_URL</code>{' '}\n            environment variable was not set during bundling.\n          </div>\n        </div>\n      );\n    }\n\n    if (wsError) {\n      return (\n        <div\n            className={css(APP_STYLE.sheetMusicView)}\n            style={{ width: mode === MODE_BOTH ? '50%' : (mode === MODE_VIEW ? '100%' : '0') }}\n        >\n          <div className={css(APP_STYLE.sheetMusicError)}>\n            <i className=\"fa fa-exclamation-triangle\" aria-hidden={true} />{' '}\n            Could not connect to server.<br />\n            Trying again in {reconnectTimeout}&hellip;\n          </div>\n        </div>\n      );\n    }\n\n    throw new Error('Invalid state.');\n  }\n\n  private setEditor = (editor: Editor | null): void => {\n    this.editor = editor;\n  }\n\n  private setQueryOrShowInterstitial = <K extends keyof QueryProps>(updates: Pick<QueryProps, K>,\n  ) : void => {\n    if (this.isDirty()) {\n      this.setState({\n        interstitialChanges: updates,\n      });\n    } else {\n      this.props.setQuery(updates);\n    }\n  }\n\n  private setStandaloneAppHost = (standaloneAppHost: StandaloneAppHost): void => {\n    this.standaloneAppHost = standaloneAppHost;\n    if (standaloneAppHost) {\n      this.setState({\n        localFiles: standaloneAppHost.localFiles,\n      });\n    }\n  }\n\n  private song(): Song | undefined {\n    const { dirtySongs, edit, src } = this.props;\n\n    if (src) {\n      return {\n        baseSHA: PUBLIC_READONLY,\n        src,\n      };\n    }\n\n    const { cleanSongs } = this.state;\n    const songName: string = edit || 'null';\n\n    const song: Song | undefined = dirtySongs[songName] || cleanSongs[songName];\n    if (!song) {\n      return undefined;\n    }\n\n    return song;\n  }\n\n  private standalonePublish = async (path: string, source: 'local' | 'remote'): Promise<void> => {\n    this.setState({\n      publish: false,\n    });\n    try {\n      this.setState({\n        saving: true,\n      });\n      const song: Song | undefined = this.song();\n      const { auth } = this.props;\n      if (!auth || !song || !this.rpc) {\n        throw new Error('Invariant violation: contract broken');\n      }\n\n      try {\n        const fullPath: string = source === 'local' ? `local/${path}` : `${auth.repo}/${path}`;\n        if (source === 'remote') {\n          await doPublish(song.src, auth, path, this.rpc, false);\n        } else {\n          if (!this.standaloneAppHost) {\n            throw new Error('Expected standaloneAppHost when saving locally...');\n          }\n          await this.standaloneAppHost.save(song.src, path);\n        }\n        this.handlePublished(fullPath);\n      } catch (err) {\n        this.setState(\n          {\n            saving: false,\n          },\n          () => {\n            // We need to disable the saving dialog first, or else we get\n            // a deadlock in Qt on macOS.\n            alert(err.toString());\n          },\n        );\n      }\n    } finally {\n      this.setState({\n        saving: false,\n      });\n      if (this.state.interstitialChanges) {\n        this.props.setQuery(this.state.interstitialChanges);\n        this.setState({\n          interstitialChanges: null,\n        });\n      }\n    }\n  }\n\n  // tslint:disable-next-line:promise-function-async\n  private standaloneRender = (src: string, filetype: string):\n      Promise<{content: string[], logs: string}> => {\n    if (!this.standaloneAppHost) {\n      throw new Error('Function only valid in standalone mode.');\n    }\n\n    return this.standaloneAppHost.renderLy(src, filetype);\n  }\n\n  private wsReconnectTick = (): void => {\n    const secondsRemaining: number = this.state.reconnectTimeout - 1;\n    if (secondsRemaining > 0) {\n      this.setState({\n        reconnectTimeout: secondsRemaining,\n      });\n      setTimeout(this.wsReconnectTick, 1000);\n    } else {\n      this.setState({\n        reconnectTimeout: NaN,\n      });\n      this.connectToWS();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/App.tsx","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createPrefixer;\n\nvar _prefixProperty = require('../utils/prefixProperty');\n\nvar _prefixProperty2 = _interopRequireDefault(_prefixProperty);\n\nvar _prefixValue = require('../utils/prefixValue');\n\nvar _prefixValue2 = _interopRequireDefault(_prefixValue);\n\nvar _addNewValuesOnly = require('../utils/addNewValuesOnly');\n\nvar _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);\n\nvar _isObject = require('../utils/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createPrefixer(_ref) {\n  var prefixMap = _ref.prefixMap,\n      plugins = _ref.plugins;\n\n  function prefixAll(style) {\n    for (var property in style) {\n      var value = style[property];\n\n      // handle nested objects\n      if ((0, _isObject2.default)(value)) {\n        style[property] = prefixAll(value);\n        // handle array values\n      } else if (Array.isArray(value)) {\n        var combinedValue = [];\n\n        for (var i = 0, len = value.length; i < len; ++i) {\n          var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, prefixMap);\n          (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);\n        }\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (combinedValue.length > 0) {\n          style[property] = combinedValue;\n        }\n      } else {\n        var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);\n\n        // only modify the value if it was touched\n        // by any plugin to prevent unnecessary mutations\n        if (_processedValue) {\n          style[property] = _processedValue;\n        }\n\n        (0, _prefixProperty2.default)(prefixMap, property, style);\n      }\n    }\n\n    return style;\n  }\n\n  return prefixAll;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/createPrefixer.js\n// module id = 43\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixProperty;\n\nvar _capitalizeString = require('./capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction prefixProperty(prefixProperties, property, style) {\n  if (prefixProperties.hasOwnProperty(property)) {\n    var requiredPrefixes = prefixProperties[property];\n    for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {\n      style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];\n    }\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/utils/prefixProperty.js\n// module id = 44\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prefixValue;\nfunction prefixValue(plugins, property, value, style, metaData) {\n  for (var i = 0, len = plugins.length; i < len; ++i) {\n    var processedValue = plugins[i](property, value, style, metaData);\n\n    // we can stop processing if a value is returned\n    // as all plugin criteria are unique\n    if (processedValue) {\n      return processedValue;\n    }\n  }\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/utils/prefixValue.js\n// module id = 45\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addNewValuesOnly;\nfunction addIfNew(list, value) {\n  if (list.indexOf(value) === -1) {\n    list.push(value);\n  }\n}\n\nfunction addNewValuesOnly(list, values) {\n  if (Array.isArray(values)) {\n    for (var i = 0, len = values.length; i < len; ++i) {\n      addIfNew(list, values[i]);\n    }\n  } else {\n    addIfNew(list, values);\n  }\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/utils/addNewValuesOnly.js\n// module id = 46\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isObject;\nfunction isObject(value) {\n  return value instanceof Object && !Array.isArray(value);\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/utils/isObject.js\n// module id = 47\n// module chunks = 2","var calc = require('inline-style-prefixer/static/plugins/calc')\nvar crossFade = require('inline-style-prefixer/static/plugins/crossFade')\nvar cursor = require('inline-style-prefixer/static/plugins/cursor')\nvar filter = require('inline-style-prefixer/static/plugins/filter')\nvar flex = require('inline-style-prefixer/static/plugins/flex')\nvar flexboxIE = require('inline-style-prefixer/static/plugins/flexboxIE')\nvar flexboxOld = require('inline-style-prefixer/static/plugins/flexboxOld')\nvar gradient = require('inline-style-prefixer/static/plugins/gradient')\nvar imageSet = require('inline-style-prefixer/static/plugins/imageSet')\nvar position = require('inline-style-prefixer/static/plugins/position')\nvar sizing = require('inline-style-prefixer/static/plugins/sizing')\nvar transition = require('inline-style-prefixer/static/plugins/transition')\n\nmodule.exports =  {\n  plugins: [calc,crossFade,cursor,filter,flex,flexboxIE,flexboxOld,gradient,imageSet,position,sizing,transition],\n  prefixMap: {\"transform\":[\"Webkit\",\"ms\"],\"transformOrigin\":[\"Webkit\",\"ms\"],\"transformOriginX\":[\"Webkit\",\"ms\"],\"transformOriginY\":[\"Webkit\",\"ms\"],\"backfaceVisibility\":[\"Webkit\"],\"perspective\":[\"Webkit\"],\"perspectiveOrigin\":[\"Webkit\"],\"transformStyle\":[\"Webkit\"],\"transformOriginZ\":[\"Webkit\"],\"animation\":[\"Webkit\"],\"animationDelay\":[\"Webkit\"],\"animationDirection\":[\"Webkit\"],\"animationFillMode\":[\"Webkit\"],\"animationDuration\":[\"Webkit\"],\"animationIterationCount\":[\"Webkit\"],\"animationName\":[\"Webkit\"],\"animationPlayState\":[\"Webkit\"],\"animationTimingFunction\":[\"Webkit\"],\"appearance\":[\"Webkit\",\"Moz\"],\"userSelect\":[\"Webkit\",\"Moz\",\"ms\"],\"fontKerning\":[\"Webkit\"],\"textEmphasisPosition\":[\"Webkit\"],\"textEmphasis\":[\"Webkit\"],\"textEmphasisStyle\":[\"Webkit\"],\"textEmphasisColor\":[\"Webkit\"],\"boxDecorationBreak\":[\"Webkit\"],\"clipPath\":[\"Webkit\"],\"maskImage\":[\"Webkit\"],\"maskMode\":[\"Webkit\"],\"maskRepeat\":[\"Webkit\"],\"maskPosition\":[\"Webkit\"],\"maskClip\":[\"Webkit\"],\"maskOrigin\":[\"Webkit\"],\"maskSize\":[\"Webkit\"],\"maskComposite\":[\"Webkit\"],\"mask\":[\"Webkit\"],\"maskBorderSource\":[\"Webkit\"],\"maskBorderMode\":[\"Webkit\"],\"maskBorderSlice\":[\"Webkit\"],\"maskBorderWidth\":[\"Webkit\"],\"maskBorderOutset\":[\"Webkit\"],\"maskBorderRepeat\":[\"Webkit\"],\"maskBorder\":[\"Webkit\"],\"maskType\":[\"Webkit\"],\"textDecorationStyle\":[\"Webkit\",\"Moz\"],\"textDecorationSkip\":[\"Webkit\",\"Moz\"],\"textDecorationLine\":[\"Webkit\",\"Moz\"],\"textDecorationColor\":[\"Webkit\",\"Moz\"],\"filter\":[\"Webkit\"],\"fontFeatureSettings\":[\"Webkit\",\"Moz\"],\"breakAfter\":[\"Webkit\",\"Moz\",\"ms\"],\"breakBefore\":[\"Webkit\",\"Moz\",\"ms\"],\"breakInside\":[\"Webkit\",\"Moz\",\"ms\"],\"columnCount\":[\"Webkit\",\"Moz\"],\"columnFill\":[\"Webkit\",\"Moz\"],\"columnGap\":[\"Webkit\",\"Moz\"],\"columnRule\":[\"Webkit\",\"Moz\"],\"columnRuleColor\":[\"Webkit\",\"Moz\"],\"columnRuleStyle\":[\"Webkit\",\"Moz\"],\"columnRuleWidth\":[\"Webkit\",\"Moz\"],\"columns\":[\"Webkit\",\"Moz\"],\"columnSpan\":[\"Webkit\",\"Moz\"],\"columnWidth\":[\"Webkit\",\"Moz\"],\"flex\":[\"Webkit\",\"ms\"],\"flexBasis\":[\"Webkit\"],\"flexDirection\":[\"Webkit\",\"ms\"],\"flexGrow\":[\"Webkit\"],\"flexFlow\":[\"Webkit\",\"ms\"],\"flexShrink\":[\"Webkit\"],\"flexWrap\":[\"Webkit\",\"ms\"],\"alignContent\":[\"Webkit\"],\"alignItems\":[\"Webkit\"],\"alignSelf\":[\"Webkit\"],\"justifyContent\":[\"Webkit\"],\"order\":[\"Webkit\"],\"transitionDelay\":[\"Webkit\"],\"transitionDuration\":[\"Webkit\"],\"transitionProperty\":[\"Webkit\"],\"transitionTimingFunction\":[\"Webkit\"],\"backdropFilter\":[\"Webkit\"],\"scrollSnapType\":[\"Webkit\",\"ms\"],\"scrollSnapPointsX\":[\"Webkit\",\"ms\"],\"scrollSnapPointsY\":[\"Webkit\",\"ms\"],\"scrollSnapDestination\":[\"Webkit\",\"ms\"],\"scrollSnapCoordinate\":[\"Webkit\",\"ms\"],\"shapeImageThreshold\":[\"Webkit\"],\"shapeImageMargin\":[\"Webkit\"],\"shapeImageOutside\":[\"Webkit\"],\"hyphens\":[\"Webkit\",\"Moz\",\"ms\"],\"flowInto\":[\"Webkit\",\"ms\"],\"flowFrom\":[\"Webkit\",\"ms\"],\"regionFragment\":[\"Webkit\",\"ms\"],\"boxSizing\":[\"Moz\"],\"textAlignLast\":[\"Moz\"],\"tabSize\":[\"Moz\"],\"wrapFlow\":[\"ms\"],\"wrapThrough\":[\"ms\"],\"wrapMargin\":[\"ms\"],\"touchAction\":[\"ms\"],\"gridTemplateColumns\":[\"ms\"],\"gridTemplateRows\":[\"ms\"],\"gridTemplateAreas\":[\"ms\"],\"gridTemplate\":[\"ms\"],\"gridAutoColumns\":[\"ms\"],\"gridAutoRows\":[\"ms\"],\"gridAutoFlow\":[\"ms\"],\"grid\":[\"ms\"],\"gridRowStart\":[\"ms\"],\"gridColumnStart\":[\"ms\"],\"gridRowEnd\":[\"ms\"],\"gridRow\":[\"ms\"],\"gridColumn\":[\"ms\"],\"gridColumnEnd\":[\"ms\"],\"gridColumnGap\":[\"ms\"],\"gridRowGap\":[\"ms\"],\"gridArea\":[\"ms\"],\"gridGap\":[\"ms\"],\"textSizeAdjust\":[\"Webkit\",\"ms\"],\"borderImage\":[\"Webkit\"],\"borderImageOutset\":[\"Webkit\"],\"borderImageRepeat\":[\"Webkit\"],\"borderImageSlice\":[\"Webkit\"],\"borderImageSource\":[\"Webkit\"],\"borderImageWidth\":[\"Webkit\"]}\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/staticPrefixData.js\n// module id = 48\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = calc;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', ''];\nfunction calc(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('calc(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/calc\\(/g, prefix + 'calc(');\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/calc.js\n// module id = 49\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossFade;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#search=cross-fade\nvar prefixes = ['-webkit-', ''];\nfunction crossFade(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('cross-fade(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/cross-fade\\(/g, prefix + 'cross-fade(');\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/crossFade.js\n// module id = 50\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cursor;\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = {\n  'zoom-in': true,\n  'zoom-out': true,\n  grab: true,\n  grabbing: true\n};\n\nfunction cursor(property, value) {\n  if (property === 'cursor' && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/cursor.js\n// module id = 51\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-filter-function\nvar prefixes = ['-webkit-', ''];\nfunction filter(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('filter(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/filter\\(/g, prefix + 'filter(');\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/filter.js\n// module id = 52\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flex;\nvar values = {\n  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],\n  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']\n};\n\nfunction flex(property, value) {\n  if (property === 'display' && values.hasOwnProperty(value)) {\n    return values[value];\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/flex.js\n// module id = 53\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxIE;\nvar alternativeValues = {\n  'space-around': 'distribute',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end'\n};\nvar alternativeProps = {\n  alignContent: 'msFlexLinePack',\n  alignSelf: 'msFlexItemAlign',\n  alignItems: 'msFlexAlign',\n  justifyContent: 'msFlexPack',\n  order: 'msFlexOrder',\n  flexGrow: 'msFlexPositive',\n  flexShrink: 'msFlexNegative',\n  flexBasis: 'msFlexPreferredSize'\n};\n\nfunction flexboxIE(property, value, style) {\n  if (alternativeProps.hasOwnProperty(property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/flexboxIE.js\n// module id = 54\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flexboxOld;\nvar alternativeValues = {\n  'space-around': 'justify',\n  'space-between': 'justify',\n  'flex-start': 'start',\n  'flex-end': 'end',\n  'wrap-reverse': 'multiple',\n  wrap: 'multiple'\n};\n\nvar alternativeProps = {\n  alignItems: 'WebkitBoxAlign',\n  justifyContent: 'WebkitBoxPack',\n  flexWrap: 'WebkitBoxLines'\n};\n\nfunction flexboxOld(property, value, style) {\n  if (property === 'flexDirection' && typeof value === 'string') {\n    if (value.indexOf('column') > -1) {\n      style.WebkitBoxOrient = 'vertical';\n    } else {\n      style.WebkitBoxOrient = 'horizontal';\n    }\n    if (value.indexOf('reverse') > -1) {\n      style.WebkitBoxDirection = 'reverse';\n    } else {\n      style.WebkitBoxDirection = 'normal';\n    }\n  }\n  if (alternativeProps.hasOwnProperty(property)) {\n    style[alternativeProps[property]] = alternativeValues[value] || value;\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/flexboxOld.js\n// module id = 55\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gradient;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;\n\nfunction gradient(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/gradient.js\n// module id = 56\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = imageSet;\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// http://caniuse.com/#feat=css-image-set\nvar prefixes = ['-webkit-', ''];\nfunction imageSet(property, value) {\n  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('image-set(') > -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(/image-set\\(/g, prefix + 'image-set(');\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/imageSet.js\n// module id = 57\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\nfunction position(property, value) {\n  if (property === 'position' && value === 'sticky') {\n    return ['-webkit-sticky', 'sticky'];\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/position.js\n// module id = 58\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sizing;\nvar prefixes = ['-webkit-', '-moz-', ''];\n\nvar properties = {\n  maxHeight: true,\n  maxWidth: true,\n  width: true,\n  height: true,\n  columnWidth: true,\n  minWidth: true,\n  minHeight: true\n};\nvar values = {\n  'min-content': true,\n  'max-content': true,\n  'fill-available': true,\n  'fit-content': true,\n  'contain-floats': true\n};\n\nfunction sizing(property, value) {\n  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {\n    return prefixes.map(function (prefix) {\n      return prefix + value;\n    });\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/sizing.js\n// module id = 59\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transition;\n\nvar _hyphenateProperty = require('css-in-js-utils/lib/hyphenateProperty');\n\nvar _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);\n\nvar _isPrefixedValue = require('css-in-js-utils/lib/isPrefixedValue');\n\nvar _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);\n\nvar _capitalizeString = require('../../utils/capitalizeString');\n\nvar _capitalizeString2 = _interopRequireDefault(_capitalizeString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\n\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if ((0, _isPrefixedValue2.default)(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(',');\n  }\n\n  return multipleValues.join(',');\n}\n\nfunction transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n\n    style['Webkit' + (0, _capitalizeString2.default)(property)] = webkitOutput;\n    style['Moz' + (0, _capitalizeString2.default)(property)] = mozOutput;\n    return outputValue;\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/inline-style-prefixer/static/plugins/transition.js\n// module id = 60\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hyphenateProperty;\n\nvar _hyphenateStyleName = require('hyphenate-style-name');\n\nvar _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction hyphenateProperty(property) {\n  return (0, _hyphenateStyleName2.default)(property);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-in-js-utils/lib/hyphenateProperty.js\n// module id = 61\n// module chunks = 2","'use strict';\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(string) {\n    return string in cache\n    ? cache[string]\n    : cache[string] = string\n      .replace(uppercasePattern, '-$&')\n      .toLowerCase()\n      .replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hyphenate-style-name/index.js\n// module id = 62\n// module chunks = 2","\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i    = str.length;\n\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n}\n\nmodule.exports = hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string-hash/index.js\n// module id = 63\n// module chunks = 2","'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _util = require('./util');\n\nvar _inject = require('./inject');\n\n/* ::\nimport type { SelectorHandler } from './generate.js';\nexport type SheetDefinition = { [id:string]: any };\nexport type SheetDefinitions = SheetDefinition | SheetDefinition[];\ntype RenderFunction = () => string;\ntype Extension = {\n    selectorHandler: SelectorHandler\n};\nexport type MaybeSheetDefinition = SheetDefinition | false | null | void\n*/\n\nvar StyleSheet = {\n    create: function create(sheetDefinition /* : SheetDefinition */) {\n        return (0, _util.mapObj)(sheetDefinition, function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2);\n\n            var key = _ref2[0];\n            var val = _ref2[1];\n\n            var stringVal = JSON.stringify(val);\n            return [key, {\n                _len: stringVal.length,\n                _name: process.env.NODE_ENV === 'production' ? (0, _util.hashString)(stringVal) : key + '_' + (0, _util.hashString)(stringVal),\n                _definition: val\n            }];\n        });\n    },\n\n    rehydrate: function rehydrate() {\n        var renderedClassNames /* : string[] */ = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];\n\n        (0, _inject.addRenderedClassNames)(renderedClassNames);\n    }\n};\n\n/**\n * Utilities for using Aphrodite server-side.\n */\nvar StyleSheetServer = {\n    renderStatic: function renderStatic(renderFunc /* : RenderFunction */) {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n        var html = renderFunc();\n        var cssContent = (0, _inject.flushToString)();\n\n        return {\n            html: html,\n            css: {\n                content: cssContent,\n                renderedClassNames: (0, _inject.getRenderedClassNames)()\n            }\n        };\n    }\n};\n\n/**\n * Utilities for using Aphrodite in tests.\n *\n * Not meant to be used in production.\n */\nvar StyleSheetTestUtils = {\n    /**\n     * Prevent styles from being injected into the DOM.\n     *\n     * This is useful in situations where you'd like to test rendering UI\n     * components which use Aphrodite without any of the side-effects of\n     * Aphrodite happening. Particularly useful for testing the output of\n     * components when you have no DOM, e.g. testing in Node without a fake DOM.\n     *\n     * Should be paired with a subsequent call to\n     * clearBufferAndResumeStyleInjection.\n     */\n    suppressStyleInjection: function suppressStyleInjection() {\n        (0, _inject.reset)();\n        (0, _inject.startBuffering)();\n    },\n\n    /**\n     * Opposite method of preventStyleInject.\n     */\n    clearBufferAndResumeStyleInjection: function clearBufferAndResumeStyleInjection() {\n        (0, _inject.reset)();\n    }\n};\n\n/**\n * Generate the Aphrodite API exports, with given `selectorHandlers` and\n * `useImportant` state.\n */\nvar makeExports = function makeExports(useImportant, /* : boolean */\nselectorHandlers /* : SelectorHandler[] */\n) {\n    return {\n        StyleSheet: _extends({}, StyleSheet, {\n\n            /**\n             * Returns a version of the exports of Aphrodite (i.e. an object\n             * with `css` and `StyleSheet` properties) which have some\n             * extensions included.\n             *\n             * @param {Array.<Object>} extensions: An array of extensions to\n             *     add to this instance of Aphrodite. Each object should have a\n             *     single property on it, defining which kind of extension to\n             *     add.\n             * @param {SelectorHandler} [extensions[].selectorHandler]: A\n             *     selector handler extension. See `defaultSelectorHandlers` in\n             *     generate.js.\n             *\n             * @returns {Object} An object containing the exports of the new\n             *     instance of Aphrodite.\n             */\n            extend: function extend(extensions /* : Extension[] */) {\n                var extensionSelectorHandlers = extensions\n                // Pull out extensions with a selectorHandler property\n                .map(function (extension) {\n                    return extension.selectorHandler;\n                })\n                // Remove nulls (i.e. extensions without a selectorHandler\n                // property).\n                .filter(function (handler) {\n                    return handler;\n                });\n\n                return makeExports(useImportant, selectorHandlers.concat(extensionSelectorHandlers));\n            }\n        }),\n\n        StyleSheetServer: StyleSheetServer,\n        StyleSheetTestUtils: StyleSheetTestUtils,\n\n        css: function css() /* : MaybeSheetDefinition[] */{\n            for (var _len = arguments.length, styleDefinitions = Array(_len), _key = 0; _key < _len; _key++) {\n                styleDefinitions[_key] = arguments[_key];\n            }\n\n            return (0, _inject.injectAndGetClassName)(useImportant, styleDefinitions, selectorHandlers);\n        }\n    };\n};\n\nmodule.exports = makeExports;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/exports.js\n// module id = 64\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _asap = require('asap');\n\nvar _asap2 = _interopRequireDefault(_asap);\n\nvar _orderedElements = require('./ordered-elements');\n\nvar _orderedElements2 = _interopRequireDefault(_orderedElements);\n\nvar _generate = require('./generate');\n\nvar _util = require('./util');\n\n/* ::\nimport type { SheetDefinition, SheetDefinitions } from './index.js';\nimport type { MaybeSheetDefinition } from './exports.js';\nimport type { SelectorHandler } from './generate.js';\ntype ProcessedStyleDefinitions = {\n  classNameBits: Array<string>,\n  definitionBits: Array<Object>,\n};\n*/\n\n// The current <style> tag we are inserting into, or null if we haven't\n// inserted anything yet. We could find this each time using\n// `document.querySelector(\"style[data-aphrodite\"])`, but holding onto it is\n// faster.\nvar styleTag = null;\n\n// Inject a string of styles into a <style> tag in the head of the document. This\n// will automatically create a style tag and then continue to use it for\n// multiple injections. It will also use a style tag with the `data-aphrodite`\n// tag on it if that exists in the DOM. This could be used for e.g. reusing the\n// same style tag that server-side rendering inserts.\nvar injectStyleTag = function injectStyleTag(cssContents /* : string */) {\n    if (styleTag == null) {\n        // Try to find a style tag with the `data-aphrodite` attribute first.\n        styleTag = document.querySelector(\"style[data-aphrodite]\");\n\n        // If that doesn't work, generate a new style tag.\n        if (styleTag == null) {\n            // Taken from\n            // http://stackoverflow.com/questions/524696/how-to-create-a-style-tag-with-javascript\n            var head = document.head || document.getElementsByTagName('head')[0];\n            styleTag = document.createElement('style');\n\n            styleTag.type = 'text/css';\n            styleTag.setAttribute(\"data-aphrodite\", \"\");\n            head.appendChild(styleTag);\n        }\n    }\n\n    if (styleTag.styleSheet) {\n        // $FlowFixMe: legacy Internet Explorer compatibility\n        styleTag.styleSheet.cssText += cssContents;\n    } else {\n        styleTag.appendChild(document.createTextNode(cssContents));\n    }\n};\n\n// Custom handlers for stringifying CSS values that have side effects\n// (such as fontFamily, which can cause @font-face rules to be injected)\nvar stringHandlers = {\n    // With fontFamily we look for objects that are passed in and interpret\n    // them as @font-face rules that we need to inject. The value of fontFamily\n    // can either be a string (as normal), an object (a single font face), or\n    // an array of objects and strings.\n    fontFamily: function fontFamily(val) {\n        if (Array.isArray(val)) {\n            return val.map(fontFamily).join(\",\");\n        } else if (typeof val === \"object\") {\n            injectStyleOnce(val.src, \"@font-face\", [val], false);\n            return '\"' + val.fontFamily + '\"';\n        } else {\n            return val;\n        }\n    },\n\n    // With animationName we look for an object that contains keyframes and\n    // inject them as an `@keyframes` block, returning a uniquely generated\n    // name. The keyframes object should look like\n    //  animationName: {\n    //    from: {\n    //      left: 0,\n    //      top: 0,\n    //    },\n    //    '50%': {\n    //      left: 15,\n    //      top: 5,\n    //    },\n    //    to: {\n    //      left: 20,\n    //      top: 20,\n    //    }\n    //  }\n    // TODO(emily): `stringHandlers` doesn't let us rename the key, so I have\n    // to use `animationName` here. Improve that so we can call this\n    // `animation` instead of `animationName`.\n    animationName: function animationName(val, selectorHandlers) {\n        if (Array.isArray(val)) {\n            return val.map(function (v) {\n                return animationName(v, selectorHandlers);\n            }).join(\",\");\n        } else if (typeof val === \"object\") {\n            // Generate a unique name based on the hash of the object. We can't\n            // just use the hash because the name can't start with a number.\n            // TODO(emily): this probably makes debugging hard, allow a custom\n            // name?\n            var _name = 'keyframe_' + (0, _util.hashObject)(val);\n\n            // Since keyframes need 3 layers of nesting, we use `generateCSS` to\n            // build the inner layers and wrap it in `@keyframes` ourselves.\n            var finalVal = '@keyframes ' + _name + '{';\n\n            // TODO see if we can find a way where checking for OrderedElements\n            // here is not necessary. Alternatively, perhaps we should have a\n            // utility method that can iterate over either a plain object, an\n            // instance of OrderedElements, or a Map, and then use that here and\n            // elsewhere.\n            if (val instanceof _orderedElements2['default']) {\n                val.forEach(function (valVal, valKey) {\n                    finalVal += (0, _generate.generateCSS)(valKey, [valVal], selectorHandlers, stringHandlers, false);\n                });\n            } else {\n                Object.keys(val).forEach(function (key) {\n                    finalVal += (0, _generate.generateCSS)(key, [val[key]], selectorHandlers, stringHandlers, false);\n                });\n            }\n            finalVal += '}';\n\n            injectGeneratedCSSOnce(_name, finalVal);\n\n            return _name;\n        } else {\n            return val;\n        }\n    }\n};\n\n// This is a map from Aphrodite's generated class names to `true` (acting as a\n// set of class names)\nvar alreadyInjected = {};\n\n// This is the buffer of styles which have not yet been flushed.\nvar injectionBuffer = \"\";\n\n// A flag to tell if we are already buffering styles. This could happen either\n// because we scheduled a flush call already, so newly added styles will\n// already be flushed, or because we are statically buffering on the server.\nvar isBuffering = false;\n\nvar injectGeneratedCSSOnce = function injectGeneratedCSSOnce(key, generatedCSS) {\n    if (alreadyInjected[key]) {\n        return;\n    }\n\n    if (!isBuffering) {\n        // We should never be automatically buffering on the server (or any\n        // place without a document), so guard against that.\n        if (typeof document === \"undefined\") {\n            throw new Error(\"Cannot automatically buffer without a document\");\n        }\n\n        // If we're not already buffering, schedule a call to flush the\n        // current styles.\n        isBuffering = true;\n        (0, _asap2['default'])(flushToStyleTag);\n    }\n\n    injectionBuffer += generatedCSS;\n    alreadyInjected[key] = true;\n};\n\nvar injectStyleOnce = function injectStyleOnce(key, /* : string */\nselector, /* : string */\ndefinitions, /* : SheetDefinition[] */\nuseImportant /* : boolean */\n) {\n    var selectorHandlers /* : SelectorHandler[] */ = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n\n    if (alreadyInjected[key]) {\n        return;\n    }\n\n    var generated = (0, _generate.generateCSS)(selector, definitions, selectorHandlers, stringHandlers, useImportant);\n\n    injectGeneratedCSSOnce(key, generated);\n};\n\nexports.injectStyleOnce = injectStyleOnce;\nvar reset = function reset() {\n    injectionBuffer = \"\";\n    alreadyInjected = {};\n    isBuffering = false;\n    styleTag = null;\n};\n\nexports.reset = reset;\nvar startBuffering = function startBuffering() {\n    if (isBuffering) {\n        throw new Error(\"Cannot buffer while already buffering\");\n    }\n    isBuffering = true;\n};\n\nexports.startBuffering = startBuffering;\nvar flushToString = function flushToString() {\n    isBuffering = false;\n    var ret = injectionBuffer;\n    injectionBuffer = \"\";\n    return ret;\n};\n\nexports.flushToString = flushToString;\nvar flushToStyleTag = function flushToStyleTag() {\n    var cssContent = flushToString();\n    if (cssContent.length > 0) {\n        injectStyleTag(cssContent);\n    }\n};\n\nexports.flushToStyleTag = flushToStyleTag;\nvar getRenderedClassNames = function getRenderedClassNames() {\n    return Object.keys(alreadyInjected);\n};\n\nexports.getRenderedClassNames = getRenderedClassNames;\nvar addRenderedClassNames = function addRenderedClassNames(classNames /* : string[] */) {\n    classNames.forEach(function (className) {\n        alreadyInjected[className] = true;\n    });\n};\n\nexports.addRenderedClassNames = addRenderedClassNames;\nvar processStyleDefinitions = function processStyleDefinitions(styleDefinitions, /* : any[] */\nresult /* : ProcessedStyleDefinitions */\n) /* : void */{\n    for (var i = 0; i < styleDefinitions.length; i += 1) {\n        // Filter out falsy values from the input, to allow for\n        // `css(a, test && c)`\n        if (styleDefinitions[i]) {\n            if (Array.isArray(styleDefinitions[i])) {\n                // We've encountered an array, so let's recurse\n                processStyleDefinitions(styleDefinitions[i], result);\n            } else {\n                result.classNameBits.push(styleDefinitions[i]._name);\n                result.definitionBits.push(styleDefinitions[i]._definition);\n            }\n        }\n    }\n};\n\n// Sum up the lengths of the stringified style definitions (which was saved as _len property)\n// and use modulus to return a single byte hash value.\n// We append this extra byte to the 32bit hash to decrease the chance of hash collisions.\nvar getStyleDefinitionsLengthHash = function getStyleDefinitionsLengthHash(styleDefinitions /* : any[] */) {\n    return (/* : string */(styleDefinitions.reduce(function (length, styleDefinition) {\n            return length + (styleDefinition ? styleDefinition._len : 0);\n        }, 0) % 36).toString(36)\n    );\n};\n\n/**\n * Inject styles associated with the passed style definition objects, and return\n * an associated CSS class name.\n *\n * @param {boolean} useImportant If true, will append !important to generated\n *     CSS output. e.g. {color: red} -> \"color: red !important\".\n * @param {(Object|Object[])[]} styleDefinitions style definition objects, or\n *     arbitrarily nested arrays of them, as returned as properties of the\n *     return value of StyleSheet.create().\n */\nvar injectAndGetClassName = function injectAndGetClassName(useImportant, /* : boolean */\nstyleDefinitions, /* : MaybeSheetDefinition[] */\nselectorHandlers /* : SelectorHandler[] */\n) /* : string */{\n    var processedStyleDefinitions /* : ProcessedStyleDefinitions */ = {\n        classNameBits: [],\n        definitionBits: []\n    };\n    // Mutates processedStyleDefinitions\n    processStyleDefinitions(styleDefinitions, processedStyleDefinitions);\n\n    // Break if there aren't any valid styles.\n    if (processedStyleDefinitions.classNameBits.length === 0) {\n        return \"\";\n    }\n\n    var className = undefined;\n    if (process.env.NODE_ENV === 'production') {\n        className = processedStyleDefinitions.classNameBits.length === 1 ? '_' + processedStyleDefinitions.classNameBits[0] : '_' + (0, _util.hashString)(processedStyleDefinitions.classNameBits.join()) + getStyleDefinitionsLengthHash(styleDefinitions);\n    } else {\n        className = processedStyleDefinitions.classNameBits.join(\"-o_O-\");\n    }\n\n    injectStyleOnce(className, '.' + className, processedStyleDefinitions.definitionBits, useImportant, selectorHandlers);\n\n    return className;\n};\nexports.injectAndGetClassName = injectAndGetClassName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aphrodite/lib/inject.js\n// module id = 65\n// module chunks = 2","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-asap.js\n// module id = 66\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport ReactMonacoEditor from 'react-monaco-editor';\n\nimport { MODE_EDIT, MODE_VIEW, ViewMode } from './Header';\nimport CodelensProvider from './monacoConfig/CodelensProvider';\nimport Commands from './monacoConfig/Commands';\nimport LILYPOND_COMPLETION_ITEM_PROVIDER from './monacoConfig/LILYPOND_COMPLETION_ITEM_PROVIDER';\nimport LILYPOND_MONARCH_PROVIDER from './monacoConfig/LILYPOND_MONARCH_PROVIDER';\nimport { APP_STYLE } from './styles';\n\nlet registeredMonacoComponents: boolean = false;\n\nexport interface MakelilyProps {\n  makelilyClef: string;\n  makelilyKey: string;\n  makelilyTime: string;\n}\n\ninterface Props {\n  code: string | undefined;\n\n  colourScheme: 'vs-dark' | 'vs';\n\n  /**\n   * When this changes, the selection changes. Used so that when you click on a\n   * note in the preview, it highlights where the note is defined in the editor.\n   */\n  defaultSelection: monaco.ISelection | null;\n\n  isImmutableSrc: boolean;\n\n  /**\n   * Lilypond logs -- used to render errors\n   */\n  logs: string | null;\n\n  /**\n   * Whether we're visible, half-screen, or hidden.\n   */\n  mode: ViewMode;\n\n  readOnly: boolean;\n\n  /**\n   * Called when an edit occurs. <Editor /> is a controlled component.\n   */\n  onSetCode(newCode: string): void;\n  showMakelily(tool?: string, cb?: (ly: string) => void): void;\n}\n\n/**\n * Renders the left-hand side of the App UI. This is a small wrapper around monaco.\n *\n * It is a controlled component, and parses the passed logs to render errors.\n */\nexport default class Editor extends React.PureComponent<Props> {\n  private commands: Commands = new Commands((tool: string, cb?: (ly: string) => void):\n    void => {\n\n    this.props.showMakelily(tool, cb);\n  });\n  private editor: monaco.editor.ICodeEditor | undefined;\n  private oldDecorations: string[] = [];\n\n  componentDidUpdate(prevProps: Props): void {\n    if (this.editor === undefined) {\n      return;\n    }\n\n    const { mode, logs, defaultSelection } = this.props;\n    if (prevProps.mode !== mode) {\n      this.editor.layout();\n    }\n    if (prevProps.logs !== logs) {\n      const errors: monaco.editor.IModelDeltaDecoration[] = [];\n      const matchErrors: RegExp =\n        /hacklily.ly:([0-9]*):(([0-9]*):([0-9]*))?\\s*([ew].*)/g;\n      const oldDecorations: string[] = this.oldDecorations || [];\n      if (logs) {\n        for (let error: RegExpExecArray | null = matchErrors.exec(logs); error;\n            error = matchErrors.exec(logs)) {\n          errors.push({\n            options: {\n              hoverMessage: error[5],\n              inlineClassName: 'lilymonaco-inline-error',\n              linesDecorationsClassName: css(APP_STYLE.errorDecoration),\n            },\n            range: {\n              // we insert a line on the server:\n              endColumn: parseInt(error[4] || String((parseInt(error[2], 10) + 1)), 10),\n              endLineNumber: parseInt(error[1], 10) - 1,\n              startColumn: parseInt(error[3], 10),\n              startLineNumber: parseInt(error[1], 10) - 1,\n            },\n          });\n        }\n        this.oldDecorations = this.editor.deltaDecorations(oldDecorations, errors);\n      }\n    }\n    if (prevProps.defaultSelection !== defaultSelection && defaultSelection !== null) {\n      this.editor.setSelection(defaultSelection);\n      this.editor.revealLineInCenter(defaultSelection.selectionStartLineNumber);\n      this.editor.focus();\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  find(): void {\n    if (this.editor) {\n      this.editor.trigger('host', 'actions.find', undefined);\n    }\n  }\n\n  findNext(): void {\n    if (this.editor) {\n      this.editor.trigger('host', 'editor.action.nextMatchFindAction', undefined);\n    }\n  }\n\n  getMakelilyProperties(): MakelilyProps {\n    const timeRegex: RegExp = /\\\\time.*/g;\n    const clefRegex: RegExp = /\\\\clef.*/g;\n    const keyRegex: RegExp = /\\\\key.*/g;\n    const code: string = this.props.code || '';\n    function extractFirst(match: RegExpMatchArray | null): string | null {\n      if (match) {\n        return match[0];\n      }\n\n      return null;\n    }\n    function extractLast(match: RegExpMatchArray | null): string | null {\n      if (match) {\n        return match[match.length - 1];\n      }\n\n      return null;\n    }\n    const meta: MakelilyProps = {\n      makelilyClef: (extractFirst(code.match(clefRegex)) || '\\\\clef treble')\n        .replace('\\\\clef ', ''),\n      makelilyKey: (extractFirst(code.match(keyRegex)) || '\\\\key c \\\\major')\n        .replace('\\\\key ', ''),\n      makelilyTime: (extractFirst(code.match(timeRegex)) || '\\\\time 4/4')\n        .replace('\\\\time ', ''),\n    };\n\n    if (!this.editor) {\n      return meta;\n    }\n\n    let codeBeforeCursor: string = '';\n    const lines: string[] = code.split('\\n');\n    const line: monaco.Position = this.editor.getPosition();\n\n    for (let i: number = 0; i < line.lineNumber - 1; i += 1) {\n      codeBeforeCursor += `${lines[i]}\\n`;\n    }\n    codeBeforeCursor += lines[line.lineNumber - 1].slice(0, line.column);\n\n    meta.makelilyClef = (extractLast(codeBeforeCursor.match(clefRegex)) ||\n      meta.makelilyClef).replace('\\\\clef ', '');\n    meta.makelilyKey = (extractLast(codeBeforeCursor.match(keyRegex)) ||\n      meta.makelilyKey).replace('\\\\key ', '');\n    meta.makelilyTime = (extractLast(codeBeforeCursor.match(timeRegex)) ||\n      meta.makelilyTime).replace('\\\\time ', '');\n\n    return meta;\n  }\n\n  insertText(text: string): void {\n    if (!this.editor) {\n      return;\n    }\n\n    const line: monaco.Position = this.editor.getPosition();\n    const range: monaco.Range = new monaco.Range(\n      line.lineNumber, 1, line.lineNumber, 1);\n    const id: {major: 1, minor: 1} = { major: 1, minor: 1 };\n    const op: monaco.editor.IIdentifiedSingleEditOperation = {\n      forceMoveMarkers: true,\n      identifier: id,\n      range,\n      text,\n    };\n    this.editor.executeEdits('hacklily', [op]);\n  }\n\n  render(): JSX.Element | null {\n    const { code, mode, onSetCode, readOnly } = this.props;\n    const monacoOptions: monaco.editor.IEditorOptions = {\n      autoClosingBrackets: true,\n      minimap: {\n        enabled: false,\n      },\n      readOnly,\n      selectionHighlight: false,\n      wordBasedSuggestions: false,\n    };\n\n    let readOnlyNotice: JSX.Element | null = null;\n    if (readOnly) {\n      if (this.props.isImmutableSrc) {\n        readOnlyNotice = (\n          <div className={css(APP_STYLE.readOnlyNotification)}>\n            <i className=\"fa-info-circle fa\" />{' '}\n            to edit, import this song\n          </div>\n        );\n      } else {\n        readOnlyNotice = (\n          <div className={css(APP_STYLE.readOnlyNotification)}>\n            <i className=\"fa-lock fa\" />{' '}\n            read-only &mdash; to edit, log in as the owner or save a copy\n          </div>\n        );\n      }\n    }\n\n    if (code === null || code === undefined) {\n      return null;\n    }\n\n    // NOTE: we have to key ReactMonacoEditor, because we need to force a reload\n    // when that changes.\n    return (\n      <div className={`monaco ${css(mode === MODE_VIEW && APP_STYLE.monacoHidden)}`}>\n        {readOnlyNotice}\n        <ReactMonacoEditor\n          key={readOnly ? 'read-only' : 'read-write'}\n          editorDidMount={this.handleEditorDidMount}\n          editorWillMount={this.handleEditorWillMount}\n          height=\"100%\"\n          language=\"lilypond\"\n          onChange={onSetCode}\n          options={monacoOptions}\n          theme={this.props.colourScheme}\n          value={code}\n          width={mode === MODE_EDIT ? '100%' : '50%'}\n        />\n      </div>\n    );\n  }\n\n  selectAll(): void {\n    if (this.editor) {\n      this.editor.trigger('host', 'editor.action.selectAll', undefined);\n    }\n  }\n\n  private handleEditorDidMount = (editor: monaco.editor.IStandaloneCodeEditor,\n                                  monacoModule: typeof monaco): void => {\n    editor.focus();\n    this.editor = editor;\n    window.addEventListener('resize', this.handleResize, false);\n    this.commands.init(editor);\n  }\n\n  private handleEditorWillMount = (monacoModule: typeof monaco): void => {\n    if (registeredMonacoComponents) {\n      return;\n    }\n    registeredMonacoComponents = true;\n\n    monacoModule.languages.register({ id: 'lilypond' });\n    monacoModule.languages.setMonarchTokensProvider('lilypond', LILYPOND_MONARCH_PROVIDER);\n    monacoModule.languages.registerCompletionItemProvider(\n            'lilypond', LILYPOND_COMPLETION_ITEM_PROVIDER);\n\n    monacoModule.languages.registerCodeLensProvider(\n      'lilypond',\n      new CodelensProvider(this.commands),\n    );\n  }\n\n  private handleResize = (): void => {\n    if (this.editor) {\n      this.editor.layout();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Editor.tsx","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction noop() {}\n\nvar MonacoEditor = function (_React$Component) {\n  _inherits(MonacoEditor, _React$Component);\n\n  function MonacoEditor(props) {\n    _classCallCheck(this, MonacoEditor);\n\n    var _this = _possibleConstructorReturn(this, (MonacoEditor.__proto__ || Object.getPrototypeOf(MonacoEditor)).call(this, props));\n\n    _this.afterViewInit = function () {\n      var context = _this.props.context || window;\n      if (context.monaco !== undefined) {\n        _this.initMonaco();\n        return;\n      }\n      var requireConfig = _this.props.requireConfig;\n\n      // Checking that the process is a renderer may be overly specific\n\n      var inElectron = context.process && context.process.type === 'renderer';\n\n      var loaderUrl = requireConfig.url || 'vs/loader.js';\n\n      if (inElectron) {\n        // Running in electron, need to deal with the difference between node require and AMDRequire\n        // Save a reference to node's require to set back up later\n        context.electronNodeRequire = context.require;\n        loaderUrl = '../node_modules/monaco-editor/min/vs/loader.js';\n      }\n\n      var onGotAmdLoader = function onGotAmdLoader() {\n        if (context.__REACT_MONACO_EDITOR_LOADER_ISPENDING__) {\n          // Do not use webpack\n          if (inElectron) {\n            // Have just loaded loader.js and now context.require is not node's require\n            var path = context.electronNodeRequire('path');\n            var monacoPath = path.join(context.__dirname, '../node_modules/monaco-editor/min');\n\n            var amdRequireBaseUrl = path.resolve(monacoPath).replace(/\\\\/g, '/');\n            if (amdRequireBaseUrl.length > 0 && amdRequireBaseUrl.charAt(0) !== '/') {\n              amdRequireBaseUrl = '/' + amdRequireBaseUrl;\n            }\n            amdRequireBaseUrl = encodeURI('file://' + amdRequireBaseUrl);\n\n            context.require.config({\n              baseUrl: amdRequireBaseUrl\n            });\n\n            context.window.module = undefined;\n            // workaround monaco-typescript not understanding the environment\n            context.window.process.browser = true;\n          }\n\n          if (requireConfig.paths && requireConfig.paths.vs && !inElectron) {\n            // will need to switch to nodeRequire here\n            context.require.config(requireConfig);\n          }\n        }\n\n        // Load monaco\n        context.require(['vs/editor/editor.main'], function () {\n          _this.initMonaco();\n        });\n\n        // Call the delayed callbacks when AMD loader has been loaded\n        if (context.__REACT_MONACO_EDITOR_LOADER_ISPENDING__) {\n          context.__REACT_MONACO_EDITOR_LOADER_ISPENDING__ = false;\n          var loaderCallbacks = context.__REACT_MONACO_EDITOR_LOADER_CALLBACKS__;\n\n          if (loaderCallbacks && loaderCallbacks.length) {\n            var currentCallback = loaderCallbacks.shift();\n\n            while (currentCallback) {\n              currentCallback.fn.call(currentCallback.context);\n              currentCallback = loaderCallbacks.shift();\n            }\n          }\n        }\n      };\n\n      // Load AMD loader if necessary\n      if (context.__REACT_MONACO_EDITOR_LOADER_ISPENDING__) {\n        // We need to avoid loading multiple loader.js when there are multiple editors loading\n        // concurrently, delay to call callbacks except the first one\n        // eslint-disable-next-line max-len\n        context.__REACT_MONACO_EDITOR_LOADER_CALLBACKS__ = context.__REACT_MONACO_EDITOR_LOADER_CALLBACKS__ || [];\n        context.__REACT_MONACO_EDITOR_LOADER_CALLBACKS__.push({\n          context: _this,\n          fn: onGotAmdLoader\n        });\n      } else if (typeof context.require === 'undefined' || inElectron) {\n        var loaderScript = context.document.createElement('script');\n        loaderScript.type = 'text/javascript';\n        loaderScript.src = loaderUrl;\n        loaderScript.addEventListener('load', onGotAmdLoader);\n        context.document.body.appendChild(loaderScript);\n        context.__REACT_MONACO_EDITOR_LOADER_ISPENDING__ = true;\n      } else {\n        onGotAmdLoader();\n      }\n    };\n\n    _this.assignRef = function (component) {\n      _this.containerElement = component;\n    };\n\n    _this.containerElement = undefined;\n    _this.__current_value = props.value;\n    return _this;\n  }\n\n  _createClass(MonacoEditor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.afterViewInit();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var context = this.props.context || window;\n      if (this.props.value !== this.__current_value) {\n        // Always refer to the latest value\n        this.__current_value = this.props.value;\n        // Consider the situation of rendering 1+ times before the editor mounted\n        if (this.editor) {\n          this.__prevent_trigger_change_event = true;\n          this.editor.setValue(this.__current_value);\n          this.__prevent_trigger_change_event = false;\n        }\n      }\n      if (prevProps.language !== this.props.language) {\n        context.monaco.editor.setModelLanguage(this.editor.getModel(), this.props.language);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroyMonaco();\n    }\n  }, {\n    key: 'editorWillMount',\n    value: function editorWillMount(monaco) {\n      var editorWillMount = this.props.editorWillMount;\n\n      editorWillMount(monaco);\n    }\n  }, {\n    key: 'editorDidMount',\n    value: function editorDidMount(editor, monaco) {\n      var _this2 = this;\n\n      this.props.editorDidMount(editor, monaco);\n      editor.onDidChangeModelContent(function (event) {\n        var value = editor.getValue();\n\n        // Always refer to the latest value\n        _this2.__current_value = value;\n\n        // Only invoking when user input changed\n        if (!_this2.__prevent_trigger_change_event) {\n          _this2.props.onChange(value, event);\n        }\n      });\n    }\n  }, {\n    key: 'initMonaco',\n    value: function initMonaco() {\n      var value = this.props.value !== null ? this.props.value : this.props.defaultValue;\n      var _props = this.props,\n          language = _props.language,\n          theme = _props.theme,\n          options = _props.options;\n\n      var context = this.props.context || window;\n      if (this.containerElement && typeof context.monaco !== 'undefined') {\n        // Before initializing monaco editor\n        this.editorWillMount(context.monaco);\n        this.editor = context.monaco.editor.create(this.containerElement, _extends({\n          value: value,\n          language: language\n        }, options));\n        if (theme) {\n          context.monaco.editor.setTheme(theme);\n        }\n        // After initializing monaco editor\n        this.editorDidMount(this.editor, context.monaco);\n      }\n    }\n  }, {\n    key: 'destroyMonaco',\n    value: function destroyMonaco() {\n      if (typeof this.editor !== 'undefined') {\n        this.editor.dispose();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height;\n\n      var fixedWidth = width.toString().indexOf('%') !== -1 ? width : width + 'px';\n      var fixedHeight = height.toString().indexOf('%') !== -1 ? height : height + 'px';\n      var style = {\n        width: fixedWidth,\n        height: fixedHeight\n      };\n\n      return _react2.default.createElement('div', { ref: this.assignRef, style: style, className: 'react-monaco-editor-container' });\n    }\n  }]);\n\n  return MonacoEditor;\n}(_react2.default.Component);\n\nMonacoEditor.propTypes = {\n  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  value: _propTypes2.default.string,\n  defaultValue: _propTypes2.default.string,\n  language: _propTypes2.default.string,\n  theme: _propTypes2.default.string,\n  options: _propTypes2.default.object,\n  editorDidMount: _propTypes2.default.func,\n  editorWillMount: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  requireConfig: _propTypes2.default.object,\n  context: _propTypes2.default.object // eslint-disable-line react/require-default-props\n};\n\nMonacoEditor.defaultProps = {\n  width: '100%',\n  height: '100%',\n  value: null,\n  defaultValue: '',\n  language: 'javascript',\n  theme: null,\n  options: {},\n  editorDidMount: noop,\n  editorWillMount: noop,\n  onChange: noop,\n  requireConfig: {}\n};\n\nexports.default = MonacoEditor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-monaco-editor/lib/index.js\n// module id = 68\n// module chunks = 2","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = 69\n// module chunks = 2","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 70\n// module chunks = 2","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = 71\n// module chunks = 2","module.exports = __webpack_public_path__ + \"static/media/logo.729a4eef.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/logo.svg\n// module id = 72\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n *\n * Copyright notice for the original version of this file\n * (https://github.com/Khan/react-components/blob/master/js/button-group.jsx):\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Khan Academy\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport { BUTTON_STYLE } from './styles';\n\nexport interface ButtonSpec {\n  content?: React.ReactNode;\n  title?: string;\n  value: string | number | null;\n}\n\ninterface Props {\n  allowEmpty?: boolean;\n  buttons: ButtonSpec[];\n  value: string | number | null;\n  onChange(value: string | number | null): void;\n}\n\n/**\n * ButtonGroup is an aesthetically pleasing group of buttons.\n *\n * The class requires these properties:\n *   buttons - an array of objects with keys:\n *     \"value\": this is the value returned when the button is selected\n *     \"content\": this is the JSX shown within the button, typically a string\n *         that gets rendered as the button's display text\n *     \"title\": this is the title-text shown on hover\n *   onChange - a function that is provided with the updated value\n *     (which it then is responsible for updating)\n *\n * The class has these optional properties:\n *   value - the initial value of the button selected, defaults to null.\n *   allowEmpty - if false, exactly one button _must_ be selected; otherwise\n *     it defaults to true and _at most_ one button (0 or 1) may be selected.\n *\n * Requires stylesheets/perseus-admin-package/editor.less to look nice.\n */\nexport default class ButtonGroup extends React.PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    allowEmpty: true,\n    value: null,\n  };\n\n  render(): JSX.Element {\n    const value: string | number | null = this.props.value;\n    const buttons: JSX.Element[] = this.props.buttons.map((button: ButtonSpec, i: number) => {\n      const buttonGroupClassName: string = css(\n        BUTTON_STYLE.buttonStyle,\n        button.value === value && BUTTON_STYLE.selectedStyle,\n      );\n\n      return (\n        <button\n          className={buttonGroupClassName}\n          onClick={this.handleClick}\n          id={String(i)}\n          key={String(i)}\n          data-value={JSON.stringify(button.value)}\n          title={button.title}\n          type=\"button\"\n        >\n          {button.content || String(button.value)}\n        </button>\n      );\n    });\n\n    const outerStyle: object = {\n      display: 'inline-block',\n    };\n\n    return (\n      <div style={outerStyle}>\n        {buttons}\n      </div>\n    );\n  }\n\n  private handleClick = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    this.toggleSelect(JSON.parse(ev.currentTarget.dataset.value || 'null'));\n  }\n\n  private toggleSelect(newValue: string | number | null): void {\n    const value: string | number | null = this.props.value;\n\n    if (this.props.allowEmpty) {\n            // Select the new button or unselect if it's already selected\n      this.props.onChange(value !== newValue ? newValue : null);\n    } else {\n      this.props.onChange(newValue);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ButtonGroup.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport Commands from './Commands';\n\n /**\n  * Provides codelens shortcuts for lilypond.\n  */\nexport default class CodelensProvider implements monaco.languages.CodeLensProvider {\n  commands: Commands;\n\n  constructor(commands: Commands) {\n    this.commands = commands;\n  }\n\n  provideCodeLenses = (model: monaco.editor.IReadOnlyModel, token: monaco.CancellationToken):\n      monaco.languages.ICodeLensSymbol[] => {\n\n    const lines: string[] = model.getLinesContent();\n\n    type sym = monaco.languages.ICodeLensSymbol;\n\n    return lines.reduce(\n      (memos: sym[], line: string, i: number): sym[] => {\n        let memo: sym[] = memos;\n\n        if (line.indexOf('\\\\clef') !== -1) {\n          memo = [\n            ...memo,\n            {\n              command: {\n                arguments: [i],\n                id: this.commands.setClef,\n                title: 'Tool: Change Clef',\n              },\n              range: {\n                endColumn: 1,\n                endLineNumber: i + 2,\n                startColumn: 1,\n                startLineNumber: i + 1,\n              },\n            },\n          ];\n        }\n        if (line.indexOf('\\\\key') !== -1) {\n          memo = [\n            ...memo,\n            {\n              command: {\n                arguments: [i],\n                id: this.commands.setKey,\n                title: 'Tool: Change Key Signature',\n              },\n              range: {\n                endColumn: 1,\n                endLineNumber: i + 2,\n                startColumn: 1,\n                startLineNumber: i + 1,\n              },\n            },\n          ];\n        }\n        if (line.indexOf('\\\\time') !== -1) {\n          memo = [\n            ...memo,\n            {\n              command: {\n                arguments: [i],\n                id: this.commands.setTime,\n                title: 'Tool: Change Time Signature',\n              },\n              range: {\n                endColumn: 1,\n                endLineNumber: i + 2,\n                startColumn: 1,\n                startLineNumber: i + 1,\n              },\n            },\n          ];\n        }\n        if (line.indexOf('\\\\relative') !== -1) {\n          memo = [\n            ...memo,\n            {\n              command: {\n                arguments: [i],\n                id: this.commands.insertNotes,\n                title: 'Tool: Insert Notes',\n              },\n              range: {\n                endColumn: 1,\n                endLineNumber: i + 2,\n                startColumn: 1,\n                startLineNumber: i + 1,\n              },\n            },\n          ];\n        }\n\n        return memo;\n      },\n      [],\n    );\n  }\n\n  resolveCodeLens = (\n        model: monaco.editor.IReadOnlyModel, codeLens: monaco.languages.ICodeLensSymbol,\n        token: monaco.CancellationToken): monaco.languages.ICodeLensSymbol => {\n\n    return codeLens;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/monacoConfig/CodelensProvider.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/**\n * These are monaco commands. So far we use them in codelens actions (see codelensProvider)\n */\nexport default class Commands {\n  insertNotes: string = '';\n  setClef: string = '';\n  setKey: string = '';\n  setTime: string = '';\n  showMakelily: (tool: string, cb?: (ly: string) => void) => void;\n\n  constructor(showMakelily: (tool: string) => void) {\n    this.showMakelily = showMakelily;\n  }\n\n  clear(): void {\n    this.insertNotes = '';\n    this.setClef = '';\n    this.setKey = '';\n    this.setTime = '';\n  }\n\n  init(editor: monaco.editor.IStandaloneCodeEditor): void {\n    function moveToStartOfNextLine(lineIdx: number): void {\n      editor.setPosition({\n        column: 1,\n        lineNumber: lineIdx + 2,\n      });\n    }\n\n    function replaceLine(lineIdx: number, ly: string): void {\n      const whitespace: RegExpMatchArray | null =\n        editor.getModel().getLinesContent()[lineIdx].match(/^\\s*/);\n      const whitespacePrefix: string = whitespace ? whitespace[0] : '';\n\n      const range: monaco.Range = new monaco.Range(\n        lineIdx + 1, 1, lineIdx + 2, 1);\n      const id: {major: 1, minor: 1} = { major: 1, minor: 1 };\n      const op: monaco.editor.IIdentifiedSingleEditOperation = {\n        forceMoveMarkers: false,\n        identifier: id,\n        range,\n        text: `${whitespacePrefix}${ly}`,\n      };\n      editor.executeEdits('hacklily', [op]);\n    }\n\n    this.setClef = editor.addCommand(\n      0,\n      (internal: void, lineIdx: number): void => {\n        moveToStartOfNextLine(lineIdx);\n        this.showMakelily('clef', (ly: string) => {\n          replaceLine(lineIdx, ly);\n        });\n      },\n      '',\n    );\n    this.setKey = editor.addCommand(\n      0,\n      (internal: void, lineIdx: number): void => {\n        moveToStartOfNextLine(lineIdx);\n        this.showMakelily('key', (ly: string) => {\n          replaceLine(lineIdx, ly);\n        });\n      },\n      '',\n    );\n    this.setTime = editor.addCommand(\n      0,\n      (internal: void, lineIdx: number): void => {\n        moveToStartOfNextLine(lineIdx);\n        this.showMakelily('time', (ly: string) => {\n          replaceLine(lineIdx, ly);\n        });\n      },\n      '',\n    );\n    this.insertNotes = editor.addCommand(\n      0,\n      (internal: void, lineIdx: number): void => {\n        moveToStartOfNextLine(lineIdx);\n        this.showMakelily('notes');\n      },\n      '',\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/monacoConfig/Commands.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport NOTATION_SYMBOLS from './NOTATION_SYMBOLS';\n\nconst LILYPOND_COMPLETION_ITEM_PROVIDER: monaco.languages.CompletionItemProvider = {\n  provideCompletionItems(model: monaco.editor.IReadOnlyModel,\n                         position: monaco.Position,\n                         token: monaco.CancellationToken): monaco.languages.CompletionItem[] {\n    const textUntilPosition: string = model.getValueInRange({\n      endColumn: position.column,\n      endLineNumber: position.lineNumber,\n      startColumn: 1,\n      startLineNumber: 1,\n    });\n    if (textUntilPosition[textUntilPosition.length - 2] === '\\\\') {\n      return NOTATION_SYMBOLS;\n    }\n\n    // Otherwise, Monaco really wants to give us word-based suggestions,\n    // which are not helpful on note input.\n    return [\n      {\n        kind: 0, // text\n        label: '',\n      },\n    ];\n  },\n};\n\nexport default LILYPOND_COMPLETION_ITEM_PROVIDER;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/monacoConfig/LILYPOND_COMPLETION_ITEM_PROVIDER.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n *\n * Permission is granted to copy, distribute and/or modify this document\n * under the terms of the GNU Free Documentation License, Version 1.3\n * or any later version published by the Free Software Foundation;\n * with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n * A copy of the license is included in the section entitled \"GNU\n * Free Documentation License\".\n */\n\n// tslint:disable\n\nconst REGEX_COMMAND_SLASH: RegExp = /^\\\\/;\n\ninterface ItemSubset {\n  label: string;\n  detail: string;\n  documentation: string;\n}\n\nfunction cleanUp(items: ItemSubset[]): monaco.languages.CompletionItem[] {\n  return items.map(({label, detail, documentation}: ItemSubset) => {\n    return {\n      label,\n      detail,\n      documentation,\n      kind: 0 /* text */,\n      insertText: label.replace(REGEX_COMMAND_SLASH, ''),\n    }\n  });\n}\n\nconst NOTATION_SYMBOLS: monaco.languages.CompletionItem[] = cleanUp([\n  {\n    \"label\": \"!\",\n    \"detail\": \"Accidentals\",\n    \"documentation\": \"Normally accidentals are printed automatically, but you may also print them manually. A reminder accidental can be forced by adding an exclamation mark ! after the pitch. A cautionary accidental (i.e., an accidental within parentheses) can be obtained by adding the question mark ? after the pitch. These extra accidentals can also be used to produce natural signs.\\n\\n    cis cis cis! cis? c c c! c?\"\n  },\n  {\n    \"label\": \"\\\"|\\\"\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"It is also possible to redefine the action taken when a bar check or pipe symbol, |, is encountered in the input, so that it does something other than a bar check. This is done by assigning a music expression to \\\"|\\\". In the following example | is set to insert a double bar line wherever it appears in the input, rather than checking for end of bar.\\n\\n    \\\"|\\\" = \\\\bar \\\"||\\\"\\n    {\\n      c'2 c' |\\n      c'2 c'\\n      c'2 | c'\\n      c'2 c'\\n    }\"\n  },\n  {\n    \"label\": \"'\",\n    \"detail\": \"Absolute octave entry\",\n    \"documentation\": \"Other octaves may be specified with a single quote (') or comma (,) character. Each ' raises the pitch by one octave; each , lowers the pitch by an octave.\\n\\n    {\\n      \\\\clef treble\\n      c'4 c'' e' g\\n      d''4 d' d c\\n      \\\\clef bass\\n      c,4 c,, e, g\\n      d,,4 d, d c\\n    }\"\n  },\n  {\n    \"label\": \",\",\n    \"detail\": \"Absolute octave entry\",\n    \"documentation\": \"Other octaves may be specified with a single quote (') or comma (,) character. Each ' raises the pitch by one octave; each , lowers the pitch by an octave.\\n\\n    {\\n      \\\\clef treble\\n      c'4 c'' e' g\\n      d''4 d' d c\\n      \\\\clef bass\\n      c,4 c,, e, g\\n      d,,4 d, d c\\n    }\"\n  },\n  {\n    \"label\": \"-\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \".\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"To obtain dotted note lengths, place a dot (.) after the duration. Double-dotted notes are specified by appending two dots, and so on.\\n\\n    a4 b c4. b8 a4. b4.. c8.\\n\\nSome durations cannot be represented with just binary durations and dots; they can be represented only by tying two or more notes together. For details, see Ties.\\n\\nFor ways of specifying durations for the syllables of lyrics and ways of aligning lyrics to notes, see Vocal music.\\n\\nOptionally, notes can be spaced strictly proportionately to their duration. For details of this and other settings which control proportional notation, see Proportional notation.\"\n  },\n  {\n    \"label\": \"/\",\n    \"detail\": \"Extended and altered chords\",\n    \"documentation\": \"Inversions (putting a pitch other than the root on the bottom of the chord) and added bass notes can be specified by appending /pitch to the chord.\\n\\n    \\\\chordmode {\\n      c1 c/g c/f\\n    }\"\n  },\n  {\n    \"label\": \"/+\",\n    \"detail\": \"Extended and altered chords\",\n    \"documentation\": \"A bass note that is part of the chord can be added, instead of moved as part of an inversion, by using /+pitch.\\n\\n    \\\\chordmode {\\n      c1 c/g c/+g\\n    }\\n\\nChord modifiers that can be used to produce a variety of standard chords are shown in Common chord modifiers.\"\n  },\n  {\n    \"label\": \":\",\n    \"detail\": \"Tremolo repeats\",\n    \"documentation\": \"The same output can be obtained by adding :N after the note, where N indicates the duration of the subdivision (it must be at least 8). If N is 8, one beam is added to the note’s stem. If N is omitted, the last value (stored in tremoloFlags) is used:\\n\\n    c2:8 c:32\\n    c: c:\"\n  },\n  {\n    \"label\": \"<\",\n    \"detail\": \"Chorded notes\",\n    \"documentation\": \"A chord is formed by enclosing a set of pitches between < and >. A chord may be followed by a duration just like simple notes.\\n\\n    <a c e>1 <a c e>2 <f a c e>4 <a c>8. <g c e>16\\n\\nChords may also be followed by articulations, again just like simple notes.\\n\\n    <a c e>1\\\\fermata <a c e>2-> <f a c e>4\\\\prall <a c>8.^! <g c e>16-.\\n\\nThe notes within the chord themselves can also be followed by articulation and ornamentation.\\n\\n    <a c\\\\prall e>1 <a-> c-^ e>2 <f-. a c-. e-.>4\\n    <a-+ c-->8. <g\\\\fermata c e\\\\turn>16\\n\\nHowever some notation, such as dynamics, hairpins and slurs must be attached to the chord, rather than notes within the chord, otherwise they will not print.\\n\\n    <a\\\\f c( e>1 <a c) e>\\\\f <a\\\\< c e>( <a\\\\! c e>)\\n    <a c e>\\\\< <a c e> <a c e>\\\\!\"\n  },\n  {\n    \"label\": \"<...>\",\n    \"detail\": \"Chorded notes\",\n    \"documentation\": \"A chord is formed by enclosing a set of pitches between < and >. A chord may be followed by a duration just like simple notes.\\n\\n    <a c e>1 <a c e>2 <f a c e>4 <a c>8. <g c e>16\\n\\nChords may also be followed by articulations, again just like simple notes.\\n\\n    <a c e>1\\\\fermata <a c e>2-> <f a c e>4\\\\prall <a c>8.^! <g c e>16-.\\n\\nThe notes within the chord themselves can also be followed by articulation and ornamentation.\\n\\n    <a c\\\\prall e>1 <a-> c-^ e>2 <f-. a c-. e-.>4\\n    <a-+ c-->8. <g\\\\fermata c e\\\\turn>16\\n\\nHowever some notation, such as dynamics, hairpins and slurs must be attached to the chord, rather than notes within the chord, otherwise they will not print.\\n\\n    <a\\\\f c( e>1 <a c) e>\\\\f <a\\\\< c e>( <a\\\\! c e>)\\n    <a c e>\\\\< <a c e> <a c e>\\\\!\"\n  },\n  {\n    \"label\": \"=\",\n    \"detail\": \"Octave checks\",\n    \"documentation\": \"In relative mode, it is easy to forget an octave changing mark. Octave checks make such errors easier to find by displaying a warning and correcting the octave if a note is found in an unexpected octave.\\n\\nTo check the octave of a note, specify the absolute octave after the = symbol. This example will generate a warning (and change the pitch) because the second note is the absolute octave d'' instead of d' as indicated by the octave correction.\\n\\n    \\\\relative c'' {\\n      c2 d='4 d\\n      e2 f\\n    }\\n\\nThe octave of notes may also be checked with the \\\\octaveCheck controlpitch command. controlpitch is specified in absolute mode. This checks that the interval between the previous note and the controlpitch is within a fourth (i.e., the normal calculation of relative mode). If this check fails, a warning is printed, but the previous note is not changed. Future notes are relative to the controlpitch.\\n\\n    \\\\relative c'' {\\n      c2 d\\n      \\\\octaveCheck c'\\n      e2 f\\n    }\\n\\nCompare the two bars below. The first and third \\\\octaveCheck checks fail, but the second one does not fail.\\n\\n    \\\\relative c'' {\\n      c4 f g f\\n      c4\\n      \\\\octaveCheck c'\\n      f\\n      \\\\octaveCheck c'\\n      g\\n      \\\\octaveCheck c'\\n      f\\n    }\"\n  },\n  {\n    \"label\": \">\",\n    \"detail\": \"Chorded notes\",\n    \"documentation\": \"A chord is formed by enclosing a set of pitches between < and >. A chord may be followed by a duration just like simple notes.\\n\\n    <a c e>1 <a c e>2 <f a c e>4 <a c>8. <g c e>16\\n\\nChords may also be followed by articulations, again just like simple notes.\\n\\n    <a c e>1\\\\fermata <a c e>2-> <f a c e>4\\\\prall <a c>8.^! <g c e>16-.\\n\\nThe notes within the chord themselves can also be followed by articulation and ornamentation.\\n\\n    <a c\\\\prall e>1 <a-> c-^ e>2 <f-. a c-. e-.>4\\n    <a-+ c-->8. <g\\\\fermata c e\\\\turn>16\\n\\nHowever some notation, such as dynamics, hairpins and slurs must be attached to the chord, rather than notes within the chord, otherwise they will not print.\\n\\n    <a\\\\f c( e>1 <a c) e>\\\\f <a\\\\< c e>( <a\\\\! c e>)\\n    <a c e>\\\\< <a c e> <a c e>\\\\!\"\n  },\n  {\n    \"label\": \"?\",\n    \"detail\": \"Accidentals\",\n    \"documentation\": \"Normally accidentals are printed automatically, but you may also print them manually. A reminder accidental can be forced by adding an exclamation mark ! after the pitch. A cautionary accidental (i.e., an accidental within parentheses) can be obtained by adding the question mark ? after the pitch. These extra accidentals can also be used to produce natural signs.\\n\\n    cis cis cis! cis? c c c! c?\"\n  },\n  {\n    \"label\": \"[\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"In some cases it may be necessary to override the automatic beaming algorithm. For example, the autobeamer will not put beams over rests or bar lines, and in choral scores the beaming is often set to follow the meter of the lyrics rather than the notes. Such beams can be specified manually by marking the begin and end point with [ and ].\\n\\n    r4 r8[ g' a r] r g[ | a] r\"\n  },\n  {\n    \"label\": \"\\\\!\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\(\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs (or phrasing marks) that indicate a musical sentence are written using the commands \\\\( and \\\\) respectively:\\n\\n    c4\\\\( d( e) f(\\n    e2) d\\\\)\"\n  },\n  {\n    \"label\": \"\\\\)\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs (or phrasing marks) that indicate a musical sentence are written using the commands \\\\( and \\\\) respectively:\\n\\n    c4\\\\( d( e) f(\\n    e2) d\\\\)\"\n  },\n  {\n    \"label\": \"\\\\<\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\>\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\abs-fontsize\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\abs-fontsize\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Use size as the absolute font size to display arg. Adjusts baseline-skip and word-space accordingly.\\n\\n    \\\\markup {\\n      default text font size\\n      \\\\hspace #2\\n      \\\\abs-fontsize #16 { text font size 16 }\\n      \\\\hspace #2\\n      \\\\abs-fontsize #12 { text font size 12 }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\absolute\",\n    \"detail\": \"Absolute octave entry\",\n    \"documentation\": \"Music can be marked explicitly as being in absolute octave notation by preceding it with \\\\absolute:\\n\\n    \\\\absolute musicexpr\\n\\nwill be interpreted in absolute octave entry mode regardless of the context it appears in.\"\n  },\n  {\n    \"label\": \"\\\\accent\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\accepts\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\accepts\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Contexts form hierarchies. We want to place the ImproVoice context within the Staff context, just like normal Voice contexts. Therefore, we modify the Staff definition with the \\\\accepts command,\\n\\n    \\\\context {\\n      \\\\Staff\\n      \\\\accepts ImproVoice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\accepts\",\n    \"detail\": \"5.1.7 Context layout order\",\n    \"documentation\": \"Contexts are normally positioned in a system from top to bottom in the order in which they are encountered in the input file. When contexts are nested, the outer context will include inner nested contexts as specified in the input file, provided the inner contexts are included in the outer context’s “accepts” list. Nested contexts which are not included in the outer context’s “accepts” list will be repositioned below the outer context rather than nested within it.\\n\\nThe “accepts” list of a context can be changed with the \\\\accepts or \\\\denies commands. \\\\accepts adds a context to the “accepts” list and \\\\denies removes a context from the list.\\n\\nFor example, a square-braced staff group is not usually found within a curved-braced staff with connecting staff bars, and a GrandStaff does not accept a StaffGroup inside it by default.\\n\\n    \\\\score {\\n      \\\\new GrandStaff <<\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { c'1 }\\n          \\\\new Staff { d'1 }\\n        >>\\n        \\\\new Staff { \\\\set Staff.instrumentName = bottom f'1 }\\n      >>\\n    }\\n\\nHowever, by using the \\\\accepts command, StaffGroup can be added to the GrandStaff context:\\n\\n    \\\\score {\\n      \\\\new GrandStaff <<\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { c'1 }\\n          \\\\new Staff { d'1 }\\n        >>\\n        \\\\new Staff { \\\\set Staff.instrumentName = bottom f'1 }\\n      >>\\n      \\\\layout {\\n        \\\\context {\\n          \\\\GrandStaff\\n          \\\\accepts \\\"StaffGroup\\\"\\n        }\\n      }\\n    }\\n\\n\\\\denies is mainly used when a new context is being based on another, but the required nesting differs. For example, the VaticanaStaff context is based on the Staff context, but with the VaticanaVoice context substituted for the Voice context in the “accepts” list.\"\n  },\n  {\n    \"label\": \"\\\\acciaccatura\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"Grace notes are musical ornaments, printed in a smaller font, that take up no additional logical time in a measure.\\n\\n    c4 \\\\grace b16 a4(\\n    \\\\grace { b16 c16 } a2)\\n\\nThere are three other types of grace notes possible; the acciaccatura – an unmeasured grace note indicated by a slurred note with a slashed stem – and the appoggiatura, which takes a fixed fraction of the main note it is attached to and prints without the slash. It is also possible to write a grace note with a slashed stem, like the acciaccatura but without the slur, so as to place it between notes that are slurred themselves, using the \\\\slashedGrace function.\\n\\n    \\\\acciaccatura d8 c4\\n    \\\\appoggiatura e8 d4\\n    \\\\acciaccatura { g16 f } e2\\n    \\\\slashedGrace a,8 g4\\n    \\\\slashedGrace b16 a4(\\n    \\\\slashedGrace b8 a2)\\n\\nThe placement of grace notes is synchronized between different staves. In the following example, there are two sixteenth grace notes for every eighth grace note\\n\\n    <<\\n      \\\\new Staff { e2 \\\\grace { c16 d e f } e2 }\\n      \\\\new Staff { c2 \\\\grace { g8 b } c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\accidentalStyle\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"There are many different conventions on how to typeset accidentals. LilyPond provides a function to specify which accidental style to use. This function is called as follows:\\n\\n    \\\\new Staff <<\\n      \\\\accidentalStyle voice\\n      { … }\\n    >>\\n\\nThe accidental style applies to the current Staff by default (with the exception of the styles piano and piano-cautionary, which are explained below). Optionally, the function can take a second argument that determines in which scope the style should be changed. For example, to use the same style in all staves of the current StaffGroup, use:\\n\\n    \\\\accidentalStyle StaffGroup.voice\\n\\nThe following accidental styles are supported. To demonstrate each style, we use the following example:\\n\\n    musicA = {\\n      <<\\n        \\\\relative c' {\\n          cis'8 fis, bes4 <a cis>8 f bis4 |\\n          cis2. <c, g'>4 |\\n        }\\n        \\\\\\\\\\n        \\\\relative c' {\\n          ais'2 cis, |\\n          fis8 b a4 cis2 |\\n        }\\n      >>\\n    }\\n    musicB = {\\n      \\\\clef bass\\n      \\\\new Voice {\\n        \\\\voiceTwo \\\\relative c' {\\n          <fis, a cis>8[ <fis a cis>\\n          \\\\change Staff = up\\n          cis' cis\\n          \\\\change Staff = down\\n          <fis, a> <fis a>]\\n          \\\\showStaffSwitch\\n          \\\\change Staff = up\\n          dis'4 |\\n          \\\\change Staff = down\\n          <fis, a cis>4 gis <f a d>2 |\\n        }\\n      }\\n    }\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\nNote that the last lines of this example can be replaced by the following, as long as the same accidental style should be used in both staves.\\n\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          %%% change the next line as desired:\\n          \\\\accidentalStyle Score.default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\ndefault\\nThis is the default typesetting behavior. It corresponds to eighteenth-century common practice: accidentals are remembered to the end of the measure in which they occur and only in their own octave. Thus, in the example below, no natural signs are printed before the b in the second measure or the last c:\\n\\n \\n\\nvoice\\nThe normal behavior is to remember the accidentals at Staff-level. In this style, however, accidentals are typeset individually for each voice. Apart from that, the rule is similar to default.\\n\\nAs a result, accidentals from one voice do not get canceled in other voices, which is often an unwanted result: in the following example, it is hard to determine whether the second a should be played natural or sharp. The voice option should therefore be used only if the voices are to be read solely by individual musicians. If the staff is to be used by one musician (e.g., a conductor or in a piano score) then modern or modern-cautionary should be used instead.\\n\\n \\n\\nmodern\\nThis rule corresponds to the common practice in the twentieth century. It omits some extra natural signs, which were traditionally prefixed to a sharp following a double sharp, or a flat following a double flat. The modern rule prints the same accidentals as default, with two additions that serve to avoid ambiguity: after temporary accidentals, cancellation marks are printed also in the following measure (for notes in the same octave) and, in the same measure, for notes in other octaves. Hence the naturals before the b and the c in the second measure of the upper staff:\\n\\n \\n\\nmodern-cautionary\\nThis rule is similar to modern, but the ‘extra’ accidentals (the ones not typeset by default) are typeset as cautionary accidentals. They are by default printed with parentheses, but they can also be printed in reduced size by defining the cautionary-style property of AccidentalSuggestion.\\n\\n \\n\\nmodern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice, but they are canceled across voices in the same Staff. Hence, the a in the last measure is canceled because the previous cancellation was in a different voice, and the d in the lower staff is canceled because of the accidental in a different voice in the previous measure:\\n\\n \\n\\nmodern-voice-cautionary\\nThis rule is the same as modern-voice, but with the extra accidentals (the ones not typeset by voice) typeset as cautionaries. Even though all accidentals typeset by default are typeset with this rule, some of them are typeset as cautionaries.\\n\\n \\n\\npiano\\nThis rule reflects twentieth-century practice for piano notation. Its behavior is very similar to modern style, but here accidentals also get canceled across the staves in the same GrandStaff or PianoStaff, hence all the cancellations of the final notes.\\n\\nThis accidental style applies to the current GrandStaff or PianoStaff by default.\\n\\n \\n\\npiano-cautionary\\nThis is the same as piano but with the extra accidentals typeset as cautionaries.\\n\\n \\n\\nneo-modern\\nThis rule reproduces a common practice in contemporary music: accidentals are printed like with modern, but they are printed again if the same note appears later in the same measure – except if the note is immediately repeated.\\n\\n \\n\\nneo-modern-cautionary\\nThis rule is similar to neo-modern, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\nneo-modern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice as with neo-modern, but they are canceled across voices in the same Staff.\\n\\n \\n\\nneo-modern-voice-cautionary\\nThis rule is similar to neo-modern-voice, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\ndodecaphonic\\nThis rule reflects a practice introduced by composers at the beginning of the 20th century, in an attempt to abolish the hierarchy between natural and non-natural notes. With this style, every note gets an accidental sign, including natural signs.\\n\\n \\n\\nteaching\\nThis rule is intended for students, and makes it easy to create scale sheets with automatically created cautionary accidentals. Accidentals are printed like with modern, but cautionary accidentals are added for all sharp or flat tones specified by the key signature, except if the note is immediately repeated.\\n\\n \\n\\nno-reset\\nThis is the same as default but with accidentals lasting ‘forever’ and not only within the same measure:\\n\\n \\n\\nforget\\nThis is the opposite of no-reset: Accidentals are not remembered at all – and hence all accidentals are typeset relative to the key signature, regardless of what came before in the music.\\n\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\addChordShape\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"In addition to fret diagrams, LilyPond stores an internal list of chord shapes. The chord shapes are fret diagrams that can be shifted along the neck to different positions to provide different chords. Chord shapes can be added to the internal list and then used to define predefined fret diagrams. Because they can be moved to various positions on the neck, chord shapes will normally not contain any open strings. Like fret diagrams, chord shapes can be entered as either fret-diagram-terse strings or fret-diagram-verbose marking lists.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    % Add a new chord shape\\n    \\\\addChordShape #'powerf #guitar-tuning #\\\"1-1;3-3;3-4;x;x;x;\\\"\\n    % add some new chords based on the power chord shape\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { f'' }\\n                            #guitar-tuning\\n                            #(chord-shape 'powerf guitar-tuning)\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { g'' }\\n                            #guitar-tuning\\n                            #(offset-fret 2 (chord-shape 'powerf guitar-tuning))\\n    mychords = \\\\chordmode{\\n      f1 f'' g g''\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\\n\\nThe graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a predefined fret diagram, the interface properties belong to FretBoards.FretBoard.\"\n  },\n  {\n    \"label\": \"\\\\addInstrumentDefinition\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"If an instrument switch is needed, \\\\addInstrumentDefinition may be used in combination with \\\\instrumentSwitch to create a detailed list of the necessary changes for the switch. The \\\\addInstrumentDefinition command has two arguments: an identifying string, and an association list of context properties and values to be used for the instrument. It must be placed in the toplevel scope. \\\\instrumentSwitch is used in the music expression to declare the instrument switch:\\n\\n    \\\\addInstrumentDefinition #\\\"contrabassoon\\\"\\n      #`((instrumentTransposition . ,(ly:make-pitch -1 0 0))\\n         (shortInstrumentName . \\\"Cbsn.\\\")\\n         (clefGlyph . \\\"clefs.F\\\")\\n         (middleCPosition . 6)\\n         (clefPosition . 2)\\n         (instrumentCueName . ,(make-bold-markup \\\"cbsn.\\\"))\\n         (midiInstrument . \\\"bassoon\\\"))\\n    \\\\new Staff \\\\with {\\n      instrumentName = #\\\"Bassoon\\\"\\n    }\\n    \\\\relative c' {\\n      \\\\clef tenor\\n      \\\\compressFullBarRests\\n      c2 g'\\n      R1*16\\n      \\\\instrumentSwitch \\\"contrabassoon\\\"\\n      c,,2 g \\\\break\\n      c,1 ~ | c1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\addInstrumentDefinition\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The \\\\killCues command removes cue notes from a music expression, so the same music expression can be used to produce the instrument part with cues and the score. The \\\\killCues command removes only the notes and events that were quoted by \\\\cueDuring. Other markup associated with cues, such as clef changes and a label identifying the source instrument, can be tagged for selective inclusion in the score; see Using tags.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\tag #'part {\\n        \\\\clef treble\\n        \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\tag #'part \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\fluteNotes\\n      }\\n      \\\\new Staff {\\n        \\\\removeWithTag #'part { \\\\killCues { \\\\bassoonNotes } }\\n      }\\n    >>\\n\\nAlternatively, Clef changes and instrument labels can be collected into an instrument definition for repeated use, using \\\\addInstrumentDefinition described in Instrument names.\"\n  },\n  {\n    \"label\": \"\\\\addlyrics\",\n    \"detail\": \"Aligning lyrics to a melody\",\n    \"documentation\": \"Lyrics are printed by interpreting them in the context called Lyrics, see Contexts explained.\\n\\n    \\\\new Lyrics \\\\lyricmode { … }\\n\\nLyrics can be aligned with melodies in two main ways:\\n\\n - Lyrics can be aligned automatically, with the durations of the syllables being taken from another voice of music or (in special circumstances) an associated melody, using \\\\addlyrics, \\\\lyricsto, or by setting the associatedVoice property. For more details, see Automatic syllable durations.\\n<<\\n  \\\\new Staff <<\\n    \\\\time 2/4\\n    \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n      \\\\voiceOne\\n      c4 b8. a16 g4. r8 a4 ( b ) c2\\n    }\\n    \\\\new Voice = \\\"two\\\" \\\\relative c' {\\n      \\\\voiceTwo\\n       s2 s4. f8 e4 d c2\\n    }\\n  >>\\n\\n% takes durations and alignment from notes in \\\"one\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    Life is __ _ love, live __ life.\\n  }\\n\\n% takes durations and alignment from notes in \\\"one\\\" initially\\n% then switches to \\\"two\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    No more let\\n    \\\\set associatedVoice = \\\"two\\\"  % must be set one syllable early\\n    sins and sor -- rows grow.\\n  }\\n>>\\n \\n\\nThe first stanza shows the normal way of entering lyrics.\\n\\nThe second stanza shows how the voice from which the lyric durations are taken can be changed. This is useful if the words to different stanzas fit the notes in different ways and all the durations are available in Voice contexts. For more details, see Stanzas.\\n\\n\\n - Lyrics can be aligned independently of the duration of any notes if the durations of the syllables are specified explicitly, and entered with \\\\lyricmode.\\n<<\\n  \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n    \\\\time 2/4\\n    c4 b8. a16 g4. f8 e4 d c2\\n  }\\n\\n% uses previous explicit duration of 2;\\n  \\\\new Lyrics \\\\lyricmode {\\n    Joy to the earth!\\n  }\\n\\n% explicit durations, set to a different rhythm\\n  \\\\new Lyrics \\\\lyricmode {\\n    Life4 is love,2. live4 life.2\\n  }\\n>>\\n \\n\\nThe first stanza is not aligned with the notes because the durations were not specified, and the previous value of 2 is used for each word.\\n\\nThe second stanza shows how the words can be aligned quite independently from the notes. This is useful if the words to different stanzas fit the notes in different ways and the required durations are not available in a music context. For more details see Manual syllable durations. This technique is also useful when setting dialogue over music; for examples showing this, see Dialogue over music.\\n\\nWhen entered in this way the words are left-aligned to the notes by default, but may be center-aligned to the notes of a melody by specifying an associated voice, if one exists. For details, see Manual syllable durations.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\addlyrics\",\n    \"detail\": \"Automatic syllable durations\",\n    \"documentation\": \"Lyrics can be automatically aligned to the notes of a melody in three ways:\\n\\n - by specifying the named Voice context containing the melody with \\\\lyricsto,\\n - by introducing the lyrics with \\\\addlyrics and placing them immediately after the Voice context containing the melody,\\n - by setting the associatedVoice property, the alignment of the lyrics may be switched to a different named Voice context at any musical moment.\\n\\nIn all three methods hyphens can be drawn between the syllables of a word and extender lines can be drawn beyond the end of a word. For details, see Extenders and hyphens.\\n\\nThe Voice context containing the melody to which the lyrics are being aligned must not have “died”, or the lyrics after that point will be lost. This can happen if there are periods when that voice has nothing to do. For methods of keeping contexts alive, see Keeping contexts alive.\"\n  },\n  {\n    \"label\": \"\\\\addlyrics\",\n    \"detail\": \"Using \\\\addlyrics\",\n    \"documentation\": \"The \\\\addlyrics command is just a convenient shortcut that can sometimes be used instead of having to set up the lyrics through a more complicated LilyPond structure.\\n\\n    { MUSIC }\\n    \\\\addlyrics { LYRICS }\\n\\nis the same as\\n\\n    \\\\new Voice = \\\"blah\\\" { MUSIC }\\n    \\\\new Lyrics \\\\lyricsto \\\"blah\\\" { LYRICS }\\n\\nHere is an example,\\n\\n    {\\n      \\\\time 3/4\\n      \\\\relative c' { c2 e4 g2. }\\n      \\\\addlyrics { play the game }\\n    }\\n\\nMore stanzas can be added by adding more \\\\addlyrics sections:\\n\\n    {\\n      \\\\time 3/4\\n      \\\\relative c' { c2 e4 g2. }\\n      \\\\addlyrics { play the game }\\n      \\\\addlyrics { speel het spel }\\n      \\\\addlyrics { joue le jeu }\\n    }\\n\\nThe command \\\\addlyrics cannot handle polyphonic settings. Also, it cannot be used to associate lyrics to a TabVoice. For these cases one should use \\\\lyricsto.\"\n  },\n  {\n    \"label\": \"\\\\addQuote\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\aeolian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\afterGrace\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"If you want to end a note with a grace, use the \\\\afterGrace command. It takes two arguments: the main note, and the grace notes following the main note.\\n\\n    c1 \\\\afterGrace d1 { c16[ d] } c1\\n\\nThis will put the grace notes after a space lasting 3/4 of the length of the main note. The default fraction 3/4 can be changed by setting afterGraceFraction. The following example shows the results from setting the space at the default, at 15/16, and finally at 1/2 of the main note.\\n\\n    <<\\n      \\\\new Staff {\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n      \\\\new Staff {\\n        #(define afterGraceFraction (cons 15 16))\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n      \\\\new Staff {\\n        #(define afterGraceFraction (cons 1 2))\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n    >>\\n\\nThe space between the main note and the grace note may also be specified using spacers. The following example places the grace note after a space lasting 7/8 of the main note.\\n\\n    \\\\new Voice {\\n      <<\\n        { d1^\\\\trill_( }\\n        { s2 s4. \\\\grace { c16 d } }\\n      >>\\n      c1)\\n    }\"\n  },\n  {\n    \"label\": \"\\\\aikenHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\aikenHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\alias\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\allowPageTurn\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\alterBroken\",\n    \"detail\": \"Using \\\\alterBroken\",\n    \"documentation\": \"When a spanner crosses a line break or breaks, each piece inherits the attributes of the original spanner. Thus, ordinary tweaking of a broken spanner applies the same modifications to each of its segments. In the example below, overriding thickness affects the slur on either side of the line break.\\n\\n    r2\\n    \\\\once\\\\override Slur.thickness = 10\\n    c8( d e f\\n    \\\\break\\n    g8 f e d) r2\\n\\nIndependently modifying the appearance of individual pieces of a broken spanner is possible with the \\\\alterBroken command. This command can produce either an \\\\override or a \\\\tweak of a spanner property.\\n\\nThe syntax for \\\\alterBroken is\\n\\n    [-]\\\\alterBroken property values item\\n\\nThe argument values is a list of values, one for each broken piece. If item is a grob name like Slur or Staff.PianoPedalBracket, the result is an \\\\override of the specified grob type. If item is a music expression such as “(” or “[” the result is the same music expression with an appropriate tweak applied.\\n\\nThe leading hyphen must be used with the \\\\tweak form. Do not add it when \\\\alterBroken is used as an \\\\override.\\n\\nIn its \\\\override usage, \\\\alterBroken may be prefaced by \\\\once or \\\\temporary and reverted by using \\\\revert with property.\\n\\nThe following code applies an independent \\\\override to each of the slur segments in the previous example:\\n\\n    r2\\n    \\\\alterBroken thickness #'(10 1) Slur\\n    c8( d e f\\n    \\\\break\\n    g8 f e d) r2\\n\\nThe \\\\alterBroken command may be used with any spanner object, including Tie, PhrasingSlur, Beam and TextSpanner. For example, an editor preparing a scholarly edition may wish to indicate the absence of part of a phrasing slur in a source by dashing only the segment which has been added. The following example illustrates how this can be done, in this case using the \\\\tweak form of the command:\\n\\n    % The empty list is conveniently used below, because it is the\\n    % default setting of dash-definition, resulting in a solid curve.\\n    c2-\\\\alterBroken dash-definition #'(() ((0 1.0 0.4 0.75))) \\\\(e\\n    \\\\break\\n    g2 e\\\\)\\n\\nIt is important to understand that \\\\alterBroken will set each piece of a broken spanner to the corresponding value in values. When there are fewer values than pieces, any additional piece will be assigned the empty list. This may lead to undesired results if the layout property is not set to the empty list by default. In such cases, each segment should be assigned an appropriate value.\"\n  },\n  {\n    \"label\": \"\\\\alternative\",\n    \"detail\": \"1.4.1 Long repeats\",\n    \"documentation\": \"The syntax for a normal repeat is\\n\\n    \\\\repeat volta repeatcount musicexpr\\n\\nwhere musicexpr is a music expression.\\n\\nA single repeat without an alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f }\\n    c2 d\\n    \\\\repeat volta 2 { d4 e f g }\\n\\nAlternative endings can be produced using \\\\alternative. Each group of alternatives must be themselves, enclosed in a set of braces.\\n\\n    \\\\repeat volta repeatcount musicexpr\\n    \\\\alternative {\\n      { musicexpr }\\n    }\\n\\nwhere musicexpr is a music expression.\\n\\nIf there are more repeats than there are alternate endings, the earliest repeats are given the first alternative.\\n\\nA single repeat with one alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with one alternate ending:\\n\\n    \\\\repeat volta 4 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with more than one alternate ending:\\n\\n    \\\\repeat volta 3 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n      { a2 g | }\\n    }\\n    c1\\n\\nNote: If there are two or more alternatives, nothing should appear between the closing brace of one and the opening brace of the next in an \\\\alternative block, otherwise you will not get the expected number of endings.\\n\\n\\n\\nNote: If you include \\\\relative inside a \\\\repeat without explicitly instantiating the Voice context, extra (unwanted) staves will appear. See An extra staff appears.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\appendToTag\",\n    \"detail\": \"Using tags\",\n    \"documentation\": \"The \\\\tag #'partA command marks a music expression with the name partA. Expressions tagged in this way can be selected or filtered out by name later, using either \\\\keepWithTag #'name or \\\\removeWithTag #'name. The result of applying these filters to tagged music is as follows:\\n\\nFilter\\tResult\\nTagged music preceded by \\\\keepWithTag #'name or \\\\keepWithTag #'(name1 name2…)\\tUntagged music and music tagged with any of the given tag names is included; music tagged with any other tag name is excluded.\\nTagged music preceded by \\\\removeWithTag #'name or \\\\removeWithTag #'(name1 name2…)\\tUntagged music and music not tagged with any of the given tag names is included; music tagged with any of the given tag names is excluded.\\nTagged music not preceded by either \\\\keepWithTag or \\\\removeWithTag\\tAll tagged and untagged music is included.\\n\\n\\nThe arguments of the \\\\tag, \\\\keepWithTag and \\\\removeWithTag commands should be a symbol (such as #'score or #'part), followed by a music expression.\\n\\nIn the following example, we see two versions of a piece of music, one showing trills with the usual notation, and one with trills explicitly expanded:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand { \\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\keepWithTag #'trills \\\\music\\n    }\\n    \\\\score {\\n      \\\\keepWithTag #'expand \\\\music\\n    }\\n\\nAlternatively, it is sometimes easier to exclude sections of music:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand {\\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\removeWithTag #'expand\\n      \\\\music\\n    }\\n    \\\\score {\\n      \\\\removeWithTag #'trills\\n      \\\\music\\n    }\\n\\nTagged filtering can be applied to articulations, texts, etc. by prepending\\n\\n    -\\\\tag #'your-tag\\n\\nto an articulation. For example, this would define a note with a conditional fingering indication and a note with a conditional annotation:\\n\\n    c1-\\\\tag #'finger ^4\\n    c1-\\\\tag #'warn ^\\\"Watch!\\\"\\n\\nMultiple tags may be placed on expressions with multiple \\\\tag entries, or by combining multiple tags into one symbol list:\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'a \\\\tag #'both { a4 a a a }\\n      \\\\tag #'(b both) { b4 b b b }\\n    }\\n    <<\\n    \\\\keepWithTag #'a \\\\music\\n    \\\\keepWithTag #'b \\\\music\\n    \\\\keepWithTag #'both \\\\music\\n    >>\\n\\nMultiple \\\\removeWithTag filters may be applied to a single music expression to remove several differently named tagged sections. Alternatively, you can use a single \\\\removeWithTag with a list of tags.\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'A { a4 a a a }\\n      \\\\tag #'B { b4 b b b }\\n      \\\\tag #'C { c4 c c c }\\n      \\\\tag #'D { d4 d d d }\\n    }\\n    \\\\new Voice {\\n      \\\\removeWithTag #'B\\n      \\\\removeWithTag #'C\\n      \\\\music\\n      \\\\removeWithTag #'(B C)\\n      \\\\music\\n    }\\n\\nTwo or more \\\\keepWithTag filters applied to a single music expression will cause all tagged sections to be removed, as the first filter will remove all tagged sections except the one named, and the second filter will remove even that tagged section. Usually you would rather want to use a single \\\\keepWithTag command with a list of multiple tags: this will only remove tagged sections not given in any of the tags.\\n\\nSometimes you want to splice some music at a particular place in an existing music expression. You can use \\\\pushToTag and \\\\appendToTag for adding material at the front or end of the elements of an existing music construct. Not every music construct has elements, but sequential and simultaneous music are safe bets:\\n\\n    test = { \\\\tag #'here { \\\\tag #'here <<c''>> } }\\n    {\\n      \\\\pushToTag #'here c'\\n      \\\\pushToTag #'here e'\\n      \\\\pushToTag #'here g' \\\\test\\n      \\\\appendToTag #'here c'\\n      \\\\appendToTag #'here e'\\n      \\\\appendToTag #'here g' \\\\test\\n    }\\n\\nBoth commands get a tag, the material to splice in at every occurence of the tag, and the tagged expression. The commands make sure to copy everything that they change so that the original \\\\test retains its meaning.\"\n  },\n  {\n    \"label\": \"\\\\appoggiatura\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"Grace notes are musical ornaments, printed in a smaller font, that take up no additional logical time in a measure.\\n\\n    c4 \\\\grace b16 a4(\\n    \\\\grace { b16 c16 } a2)\\n\\nThere are three other types of grace notes possible; the acciaccatura – an unmeasured grace note indicated by a slurred note with a slashed stem – and the appoggiatura, which takes a fixed fraction of the main note it is attached to and prints without the slash. It is also possible to write a grace note with a slashed stem, like the acciaccatura but without the slur, so as to place it between notes that are slurred themselves, using the \\\\slashedGrace function.\\n\\n    \\\\acciaccatura d8 c4\\n    \\\\appoggiatura e8 d4\\n    \\\\acciaccatura { g16 f } e2\\n    \\\\slashedGrace a,8 g4\\n    \\\\slashedGrace b16 a4(\\n    \\\\slashedGrace b8 a2)\\n\\nThe placement of grace notes is synchronized between different staves. In the following example, there are two sixteenth grace notes for every eighth grace note\\n\\n    <<\\n      \\\\new Staff { e2 \\\\grace { c16 d e f } e2 }\\n      \\\\new Staff { c2 \\\\grace { g8 b } c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\arpeggio\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioArrowDown\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioArrowUp\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioBracket\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arpeggioNormal\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioParenthesis\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arpeggioParenthesisDashed\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arrow-head\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\arrow-head\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Produce an arrow head in specified direction and axis. Use the filled head if filled is specified.\\n\\n    \\\\markup {\\n      \\\\fontsize #5 {\\n        \\\\general-align #Y #DOWN {\\n          \\\\arrow-head #Y #UP ##t\\n          \\\\arrow-head #Y #DOWN ##f\\n          \\\\hspace #2\\n          \\\\arrow-head #X #RIGHT ##f\\n          \\\\arrow-head #X #LEFT ##f\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\ascendens\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\ascendens\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\auctum\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\auctum\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\augmentum\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"Use the unary music function \\\\augmentum to add augmentum dots.\"\n  },\n  {\n    \"label\": \"\\\\auto-footnote\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Have footnote note act as an annotation to the markup mkup.\\n\\n    \\\\markup {\\n      \\\\auto-footnote a b\\n      \\\\override #'(padding . 0.2)\\n      \\\\auto-footnote c d\\n    }\\n\\nThe footnote will be annotated automatically.\\n\\nUsed properties:\\n\\n - padding (0.0)\\n - raise (0.5)\"\n  },\n  {\n    \"label\": \"\\\\autoBeamOff\",\n    \"detail\": \"Automatic beams\",\n    \"documentation\": \"If these automatic decisions are not satisfactory, beaming can be entered explicitly; see Manual beams. Beams must be entered manually if beams are to be extended over rests.\\n\\nIf automatic beaming is not required, it may be turned off with \\\\autoBeamOff and on with \\\\autoBeamOn:\\n\\n    c4 c8 c8. c16 c8. c16 c8\\n    \\\\autoBeamOff\\n    c4 c8 c8. c16 c8.\\n    \\\\autoBeamOn\\n    c16 c8\"\n  },\n  {\n    \"label\": \"\\\\autoBeamOff\",\n    \"detail\": \"Cross-staff stems\",\n    \"documentation\": \"Chords that cross staves may be produced using the Span_stem_engraver. Care must be taken to ensure that automatic beams do not beam the notes on one staff when it’s not required on the other.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\PianoStaff\\n        \\\\consists #Span_stem_engraver\\n      }\\n    }\\n    {\\n      \\\\new PianoStaff <<\\n        \\\\new Staff {\\n          <b d'>4 r d'16\\\\> e'8. g8 r\\\\!\\n          e'8 f' g'4 e'2\\n        }\\n        \\\\new Staff {\\n          \\\\clef bass\\n          \\\\voiceOne\\n          \\\\autoBeamOff\\n          \\\\crossStaff { <e g>4 e, g16 a8. c8} d\\n          \\\\autoBeamOn\\n          g8 f g4 c2\\n        }\\n      >>\\n    }\\n\\nFor the time being, this engraver can not be specified by its name in double quotes, but rather prefixing its name with a hash symbol #, due to the way it is implemented.\"\n  },\n  {\n    \"label\": \"\\\\autoBeamOn\",\n    \"detail\": \"Automatic beams\",\n    \"documentation\": \"If these automatic decisions are not satisfactory, beaming can be entered explicitly; see Manual beams. Beams must be entered manually if beams are to be extended over rests.\\n\\nIf automatic beaming is not required, it may be turned off with \\\\autoBeamOff and on with \\\\autoBeamOn:\\n\\n    c4 c8 c8. c16 c8. c16 c8\\n    \\\\autoBeamOff\\n    c4 c8 c8. c16 c8.\\n    \\\\autoBeamOn\\n    c16 c8\"\n  },\n  {\n    \"label\": \"\\\\autochange\",\n    \"detail\": \"Changing staff automatically\",\n    \"documentation\": \"Voices can be made to switch automatically between the top and the bottom staff. The syntax for this is\\n\\n    \\\\autochange …music…\\n\\nThis will create two staves inside the current staff group (usually a PianoStaff), called \\\"up\\\" and \\\"down\\\". The lower staff will be in the bass clef by default. The autochanger switches on the basis of the pitch (middle C is the turning point), and it looks ahead skipping over rests to switch in advance.\\n\\n    \\\\new PianoStaff {\\n      \\\\autochange {\\n        g4 a b c'\\n        d'4 r a g\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\backslashed-digit\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"A feta number, with backslash. This is for use in the context of figured bass notation.\\n\\n    \\\\markup {\\n      \\\\backslashed-digit #5\\n      \\\\hspace #2\\n      \\\\override #'(thickness . 3)\\n      \\\\backslashed-digit #7\\n    }\\n\\nUsed properties:\\n\\n - thickness (1.6)\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\balloonGrobText\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonLengthOff\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonLengthOn\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonText\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bar\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"Bar lines delimit measures, and are also used to indicate repeats. Normally, simple bar lines are automatically inserted into the printed output at places based on the current time signature.\\n\\nThe simple bar lines inserted automatically can be changed to other types with the \\\\bar command. For example, a closing double bar line is usually placed at the end of a piece:\\n\\n    e4 d c2 \\\\bar \\\"|.\\\"\\n\\nIt is not invalid if the final note in a measure does not end on the automatically entered bar line: the note is assumed to carry over into the next measure. But if a long sequence of such carry-over measures appears the music can appear compressed or even flowing off the page. This is because automatic line breaks happen only at the end of complete measures, i.e., where all notes end before the end of a measure.\\n\\nNote: An incorrect duration can cause line breaks to be inhibited, leading to a line of highly compressed music or music which flows off the page.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\bar\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"The command ‘\\\\bar bartype’ is a shortcut for ‘\\\\set Timing.whichBar = bartype’. A bar line is created whenever the whichBar property is set.\\n\\nThe default bar type used for automatically inserted bar lines is \\\"|\\\". This may be changed at any time with ‘\\\\set Timing.defaultBarType = bartype’.\"\n  },\n  {\n    \"label\": \"\\\\barNumberCheck\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"When copying large pieces of music, it can be helpful to check that the LilyPond bar number corresponds to the original that you are entering from. This can be checked with \\\\barNumberCheck, for example,\\n\\n\\\\barNumberCheck #123\\n\\n\\nwill print a warning if the currentBarNumber is not 123 when it is processed.\"\n  },\n  {\n    \"label\": \"\\\\beam\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Create a beam with the specified parameters.\\n\\n    \\\\markup {\\n      \\\\beam #5 #1 #2\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bendAfter\",\n    \"detail\": \"Falls and doits\",\n    \"documentation\": \"Falls and doits can be added to notes using the \\\\bendAfter command. The direction of the fall or doit is indicated with a plus or minus (up or down). The number indicates the pitch interval that the fall or doit will extend beyond the main note.\\n\\n    c2\\\\bendAfter #+4\\n    c2\\\\bendAfter #-4\\n    c2\\\\bendAfter #+6.5\\n    c2\\\\bendAfter #-6.5\\n    c2\\\\bendAfter #+8\\n    c2\\\\bendAfter #-8\"\n  },\n  {\n    \"label\": \"\\\\bold\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\bold\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Switch to bold font-series.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\bold\\n      bold\\n    }\"\n  },\n  {\n    \"label\": \"\\\\book\",\n    \"detail\": \"3.1.2 Multiple scores in a book\",\n    \"documentation\": \"A document may contain multiple pieces of music and text. Examples of these are an etude book, or an orchestral part with multiple movements. Each movement is entered with a \\\\score block,\\n\\n    \\\\score {\\n      …music…\\n    }\\n\\nand texts are entered with a \\\\markup block,\\n\\n    \\\\markup {\\n      …text…\\n    }\"\n  },\n  {\n    \"label\": \"\\\\book\",\n    \"detail\": \"3.1.2 Multiple scores in a book\",\n    \"documentation\": \"All the movements and texts which appear in the same ‘.ly’ file will normally be typeset in the form of a single output file.\\n\\n    \\\\score {\\n      …\\n    }\\n    \\\\markup {\\n      …\\n    }\\n    \\\\score {\\n      …\\n    }\\n\\nOne important exception is within lilypond-book documents, where you explicitly have to add a \\\\book block, otherwise only the first \\\\score or \\\\markup will appear in the output.\\n\\nThe header for each piece of music can be put inside the \\\\score block. The piece name from the header will be printed before each movement. The title for the entire book can be put inside the \\\\book, but if it is not present, the \\\\header which is at the top of the file is inserted.\\n\\n    \\\\header {\\n      title = \\\"Eight miniatures\\\"\\n      composer = \\\"Igor Stravinsky\\\"\\n    }\\n    \\\\score {\\n      …\\n      \\\\header { piece = \\\"Romanze\\\" }\\n    }\\n    \\\\markup {\\n       …text of second verse…\\n    }\\n    \\\\markup {\\n       …text of third verse…\\n    }\\n    \\\\score {\\n      …\\n      \\\\header { piece = \\\"Menuetto\\\" }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\book\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\bookOutputName\",\n    \"detail\": \"3.1.4 Output file names\",\n    \"documentation\": \"Lilypond provides facilities to allow you to control what file names are used by the various back-ends when producing output files.\\n\\nIn the previous section, we saw how Lilypond prevents name-clashes when producing several ouputs from a single source file. You also have the ability to specify your own suffixes for each \\\\book block, so for example you can produce files called ‘eightminiatures-Romanze.pdf’, ‘eightminiatures-Menuetto.pdf’ and ‘eightminiatures-Nocturne.pdf’ by adding a \\\\bookOutputSuffix declaration inside each \\\\book block.\\n\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Romanze\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Menuetto\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Nocturne\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n\\nYou can also specify a different output filename for book block, by using \\\\bookOutputName declarations\\n\\n    \\\\book {\\n      \\\\bookOutputName \\\"Romanze\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputName \\\"Menuetto\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputName \\\"Nocturne\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n\\nThe file above will produce these output files:\\n\\n - ‘Romanze.pdf’,\\n - ‘Menuetto.pdf’ and\\n - ‘Nocturne.pdf’.\"\n  },\n  {\n    \"label\": \"\\\\bookOutputSuffix\",\n    \"detail\": \"3.1.4 Output file names\",\n    \"documentation\": \"Lilypond provides facilities to allow you to control what file names are used by the various back-ends when producing output files.\\n\\nIn the previous section, we saw how Lilypond prevents name-clashes when producing several ouputs from a single source file. You also have the ability to specify your own suffixes for each \\\\book block, so for example you can produce files called ‘eightminiatures-Romanze.pdf’, ‘eightminiatures-Menuetto.pdf’ and ‘eightminiatures-Nocturne.pdf’ by adding a \\\\bookOutputSuffix declaration inside each \\\\book block.\\n\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Romanze\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Menuetto\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputSuffix \\\"Nocturne\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n\\nYou can also specify a different output filename for book block, by using \\\\bookOutputName declarations\\n\\n    \\\\book {\\n      \\\\bookOutputName \\\"Romanze\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputName \\\"Menuetto\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n    \\\\book {\\n      \\\\bookOutputName \\\"Nocturne\\\"\\n      \\\\score { … }\\n      \\\\paper { … }\\n    }\\n\\nThe file above will produce these output files:\\n\\n - ‘Romanze.pdf’,\\n - ‘Menuetto.pdf’ and\\n - ‘Nocturne.pdf’.\"\n  },\n  {\n    \"label\": \"\\\\bookpart\",\n    \"detail\": \"3.1.2 Multiple scores in a book\",\n    \"documentation\": \"Pieces of music may be grouped into book parts using \\\\bookpart blocks. Book parts are separated by a page break, and can start with a title, like the book itself, by specifying a \\\\header block.\\n\\n    \\\\bookpart {\\n      \\\\header {\\n        title = \\\"Book title\\\"\\n        subtitle = \\\"First part\\\"\\n      }\\n      \\\\score { … }\\n      …\\n    }\\n    \\\\bookpart {\\n      \\\\header {\\n        subtitle = \\\"Second part\\\"\\n      }\\n      \\\\score { … }\\n      …\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bookpart\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\bookpart\",\n    \"detail\": \"4.3.2 Page breaking\",\n    \"documentation\": \"When a book has many scores and pages, the page breaking problem may be difficult to solve, requiring large processing time and memory. To ease the page breaking process, \\\\bookpart blocks are used to divide the book into several parts: the page breaking occurs separately on each part. Different page breaking functions may also be used in different book parts.\\n\\n    \\\\bookpart {\\n      \\\\header {\\n        subtitle = \\\"Preface\\\"\\n      }\\n      \\\\paper {\\n         %% In a part consisting mostly of text,\\n         %% ly:minimal-breaking may be preferred\\n         page-breaking = #ly:minimal-breaking\\n      }\\n      \\\\markup { … }\\n      …\\n    }\\n    \\\\bookpart {\\n      %% In this part, consisting of music, the default optimal\\n      %% page breaking function is used.\\n      \\\\header {\\n        subtitle = \\\"First movement\\\"\\n      }\\n      \\\\score { … }\\n      …\\n    }\"\n  },\n  {\n    \"label\": \"\\\\box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\box\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Draw a box round arg. Looks at thickness, box-padding and font-size properties to determine line thickness and padding around the markup.\\n\\n    \\\\markup {\\n      \\\\override #'(box-padding . 0.5)\\n      \\\\box\\n      \\\\line { V. S. }\\n    }\\n\\nUsed properties:\\n\\n - box-padding (0.2)\\n - font-size (0)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"New dynamic marks\",\n    \"documentation\": \"In markup mode, editorial dynamics (within parentheses or square brackets) can be created. The syntax for markup mode is described in Formatting text.\\n\\n    roundF = \\\\markup {\\n        \\\\center-align \\\\concat { \\\\bold { \\\\italic ( }\\n               \\\\dynamic f \\\\bold { \\\\italic ) } } }\\n    boxF = \\\\markup { \\\\bracket { \\\\dynamic f } }\\n    \\\\relative c' {\\n      c1_\\\\roundF\\n      c1_\\\\boxF\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw vertical brackets around arg.\\n\\n    \\\\markup {\\n      \\\\bracket {\\n        \\\\note #\\\"2.\\\" #UP\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\break\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\break, \\\\noBreak.\"\n  },\n  {\n    \"label\": \"\\\\breathe\",\n    \"detail\": \"Breath marks\",\n    \"documentation\": \"Breath marks are entered using \\\\breathe:\\n\\n    c2. \\\\breathe d4\\n\\nA breath mark will end an automatic beam; to override this behavior, see Manual beams.\\n\\n    c8 \\\\breathe d e f g2\\n\\nMusical indicators for breath marks in ancient notation, divisiones, are supported. For details, see Divisiones.\"\n  },\n  {\n    \"label\": \"\\\\breve\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\breve\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cadenzaOff\",\n    \"detail\": \"Unmetered music\",\n    \"documentation\": \"In metered music bar lines are inserted and bar numbers are calculated automatically. In unmetered music (i.e. cadenzas), this is not desirable and can be ‘switched off’ using the command \\\\cadenzaOn, then ‘switched back on’ at the appropriate place using \\\\cadenzaOff.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nBar numbering is resumed at the end of the cadenza.\\n\\n    % Show all bar numbers\\n    \\\\override Score.BarNumber.break-visibility = #all-visible\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nInserting a \\\\bar command within a cadenza does not start a new measure, even if a bar line is printed. So any accidentals – which are usually assumed to remain in force until the end of the measure – will still be valid after the bar line printed by \\\\bar. If subsequent accidentals should be printed, forced accidentals or reminder accidentals need to be inserted manually, see Accidentals.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    cis4 d cis d\\n    \\\\bar \\\"|\\\"\\n    % First cis is printed without alteration even if it's after a \\\\bar\\n    cis4 d cis! d\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n\\nAutomatic beaming is disabled by \\\\cadenzaOn. Therefore, all beaming in cadenzas must be entered manually. See Manual beams.\\n\\n    \\\\repeat unfold 8 { c8 }\\n    \\\\cadenzaOn\\n    cis8 c c c c\\n    \\\\bar\\\"|\\\"\\n    c8 c c\\n    \\\\cadenzaOff\\n    \\\\repeat unfold 8 { c8 }\\n\\nThese predefined commands affect all staves in the score, even when placed in just one Voice context. To change this, move the Timing_translator from the Score context to the Staff context. See Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\cadenzaOn\",\n    \"detail\": \"Unmetered music\",\n    \"documentation\": \"In metered music bar lines are inserted and bar numbers are calculated automatically. In unmetered music (i.e. cadenzas), this is not desirable and can be ‘switched off’ using the command \\\\cadenzaOn, then ‘switched back on’ at the appropriate place using \\\\cadenzaOff.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nBar numbering is resumed at the end of the cadenza.\\n\\n    % Show all bar numbers\\n    \\\\override Score.BarNumber.break-visibility = #all-visible\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nInserting a \\\\bar command within a cadenza does not start a new measure, even if a bar line is printed. So any accidentals – which are usually assumed to remain in force until the end of the measure – will still be valid after the bar line printed by \\\\bar. If subsequent accidentals should be printed, forced accidentals or reminder accidentals need to be inserted manually, see Accidentals.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    cis4 d cis d\\n    \\\\bar \\\"|\\\"\\n    % First cis is printed without alteration even if it's after a \\\\bar\\n    cis4 d cis! d\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n\\nAutomatic beaming is disabled by \\\\cadenzaOn. Therefore, all beaming in cadenzas must be entered manually. See Manual beams.\\n\\n    \\\\repeat unfold 8 { c8 }\\n    \\\\cadenzaOn\\n    cis8 c c c c\\n    \\\\bar\\\"|\\\"\\n    c8 c c\\n    \\\\cadenzaOff\\n    \\\\repeat unfold 8 { c8 }\\n\\nThese predefined commands affect all staves in the score, even when placed in just one Voice context. To change this, move the Timing_translator from the Score context to the Staff context. See Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\caesura\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\caps\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Copy of the \\\\smallCaps command.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\caps {\\n        Text in small caps\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cavum\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\cavum\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\center-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\center-align\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Align arg to its X center.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        \\\\center-align\\n        two\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\center-column\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"A markup object may include several lines of text. In the following example, each element or expression is placed on its own line, either left-aligned or centered:\\n\\n    \\\\markup {\\n      \\\\column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n      \\\\hspace #10\\n      \\\\center-column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\center-column\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put args in a centered column.\\n\\n    \\\\markup {\\n      \\\\center-column {\\n        one\\n        two\\n        three\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\change\",\n    \"detail\": \"Changing staff manually\",\n    \"documentation\": \"Voices can be switched between staves manually, using the command\\n\\n    \\\\change Staff = staffname\\n\\nThe string staffname is the name of the staff. It switches the current voice from its current staff to the staff called staffname. Typical values for staffname are \\\"up\\\" and \\\"down\\\", or \\\"RH\\\" and \\\"LH\\\".\\n\\nThe staff to which the voice is being switched must exist at the time of the switch. If necessary, staves should be “kept alive”, see Keeping contexts alive.\\n\\nCross-staff notes are beamed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"up\\\" {\\n        <e' c'>8\\n        \\\\change Staff = \\\"down\\\"\\n        g8 fis g\\n        \\\\change Staff = \\\"up\\\"\\n        <g'' c''>8\\n        \\\\change Staff = \\\"down\\\"\\n        e8 dis e\\n        \\\\change Staff = \\\"up\\\"\\n      }\\n      \\\\new Staff = \\\"down\\\" {\\n        \\\\clef bass\\n        % keep staff alive\\n        s1\\n      }\\n    >>\\n\\nIf the beaming needs to be tweaked, make any changes to the stem directions first. The beam positions are then measured from the center of the staff that is closest to the beam. For a simple example of beam tweaking, see notation Fixing overlapping notation.\"\n  },\n  {\n    \"label\": \"\\\\char\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Produce a single character. Characters encoded in hexadecimal format require the prefix #x.\\n\\n    \\\\markup {\\n      \\\\char #65 \\\\char ##x00a9\\n    }\"\n  },\n  {\n    \"label\": \"\\\\chordmode\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"It is common that both chord names and fret diagrams are displayed together. This is achieved by putting a ChordNames context in parallel with a FretBoards context and giving both contexts the same music.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    mychords = \\\\chordmode{\\n      c1 f g\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\chordRepeats\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Chord constructs can be repeated by the chord repetition symbol q. In combination with tabulatures, its behavior of removing string and finger numbers alongside with other events is cumbersome, so you’ll want to run\\n\\n    \\\\chordRepeats #'(string-number-event fingering-event)\\n\\nexplicitly on music expressions in tabulature using Chord repetition. This particular command is so common that it is available as \\\\tabChordRepeats.\\n\\n    guitar = \\\\relative c' {\\n      r8 <gis-2 cis-3 b-0>~ q4 q8~ q q4\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        \\\\guitar\\n      }\\n      \\\\new TabStaff {\\n        \\\\tabChordRepeats \\\\guitar\\n      }\\n    >>\\n\\nTies over a line break are parenthesized by default. The same holds for the second alternative of a repeat.\\n\\n    ties = \\\\relative c' {\\n      \\\\repeat volta 2 {\\n        e2. f4~\\n        f2 g2~\\n      }\\n      \\\\alternative {\\n         { g4 f2. }\\n         { g4\\\\repeatTie c,2. }\\n      }\\n      b1~\\n      \\\\break\\n      b1\\n      \\\\bar \\\"|.\\\"\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new StaffGroup  <<\\n          \\\\new Staff {\\n            \\\\clef \\\"treble_8\\\"\\n            \\\\ties\\n          }\\n          \\\\new TabStaff {\\n            \\\\ties\\n          }\\n        >>\\n      >>\\n      \\\\layout {\\n      indent = #0\\n      ragged-right = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\circle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\circle\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw a circle around arg. Use thickness, circle-padding and font-size properties to determine line thickness and padding around the markup.\\n\\n    \\\\markup {\\n      \\\\circle {\\n        Hi\\n      }\\n    }\\n\\nUsed properties:\\n\\n - circle-padding (0.2)\\n - font-size (0)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\clef\",\n    \"detail\": \"Clef\",\n    \"documentation\": \"The clef may be altered. Middle C is shown in every example. The following clef names can (but do not need to) be enclosed in quotes.\\n\\n    \\\\clef treble\\n    c2 c\\n    \\\\clef alto\\n    c2 c\\n    \\\\clef tenor\\n    c2 c\\n    \\\\clef bass\\n    c2 c\\n\\nOther clefs include:\\n\\n    \\\\clef french\\n    c2 c\\n    \\\\clef soprano\\n    c2 c\\n    \\\\clef mezzosoprano\\n    c2 c\\n    \\\\clef baritone\\n    c2 c\\n    \\\\break\\n    \\\\clef varbaritone\\n    c2 c\\n    \\\\clef subbass\\n    c2 c\\n    \\\\clef percussion\\n    c2 c\\n    \\\\break\\n    \\\\clef G   % synonym for treble\\n    c2 c\\n    \\\\clef F   % synonym for bass\\n    c2 c\\n    \\\\clef C   % synonym for alto\\n    c2 c\"\n  },\n  {\n    \"label\": \"\\\\cm\",\n    \"detail\": \"5.4.3 Distances and measurements\",\n    \"documentation\": \"Distances in LilyPond are of two types: absolute and scaled.\\n\\nAbsolute distances are used for specifying margins, indents, and other page layout details, and are by default specified in millimeters. Distances may be specified in other units by following the quantity by \\\\mm, \\\\cm, \\\\in (inches), or \\\\pt (points, 1/72.27 of an inch). Page layout distances can also be specified in scalable units (see the following paragraph) by appending \\\\staff-space to the quantity. Page layout is described in detail in Page layout.\\n\\nScaled distances are always specified in units of the staff-space or, rarely, the half staff-space. The staff-space is the distance between two adjacent staff lines. The default value can be changed globally by setting the global staff size, or it can be overridden locally by changing the staff-space property of StaffSymbol. Scaled distances automatically scale with any change to the either the global staff size or the staff-space property of StaffSymbol, but fonts scale automatically only with changes to the global staff size. The global staff size thus enables the overall size of a rendered score to be easily varied. For the methods of setting the global staff size see Setting the staff size.\"\n  },\n  {\n    \"label\": \"\\\\coda\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\column\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"A markup object may include several lines of text. In the following example, each element or expression is placed on its own line, either left-aligned or centered:\\n\\n    \\\\markup {\\n      \\\\column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n      \\\\hspace #10\\n      \\\\center-column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\column\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Stack the markups in args vertically. The property baseline-skip determines the space between markups in args.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        two\\n        three\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\column-lines\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Like \\\\column, but return a list of lines instead of a single markup. baseline-skip determines the space between each markup in args.\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\combine\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\combine\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Print two markups on top of each other.\\n\\nNote: \\\\combine cannot take a list of markups enclosed in curly braces as an argument; the follow example will not compile:\\n\\n    \\\\combine { a list }\\n\\n    \\\\markup {\\n      \\\\fontsize #5\\n      \\\\override #'(thickness . 2)\\n      \\\\combine\\n        \\\\draw-line #'(0 . 4)\\n        \\\\arrow-head #Y #DOWN ##f\\n    }\"\n  },\n  {\n    \"label\": \"\\\\compoundMeter\",\n    \"detail\": \"Different time signatures with unequal-length measures\",\n    \"documentation\": \"These are created using the \\\\compoundMeter function. The syntax for this is:\\n\\n    \\\\compoundMeter #'(list of lists)\\n\\nThe simplest construction is a single list, where the last number indicates the bottom number of the time signature and those that come before it, the top numbers.\\n\\n    \\\\relative c' {\\n      \\\\compoundMeter #'((2 2 2 8))\\n      \\\\repeat unfold 6 c8 \\\\repeat unfold 12 c16\\n    }\\n\\nMore complex meters can be constructed using additional lists. Also, automatic beaming settings will be adjusted depending on the values.\\n\\n    \\\\relative c' {\\n      \\\\compoundMeter #'((1 4) (3 8))\\n      \\\\repeat unfold 5 c8 \\\\repeat unfold 10 c16\\n    }\\n    \\\\relative c' {\\n      \\\\compoundMeter #'((1 2 3 8) (3 4))\\n      \\\\repeat unfold 12 c8\\n    }\"\n  },\n  {\n    \"label\": \"\\\\compressFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"By default a multi-measure rest is expanded in the printed score to show all the rest measures explicitly. Alternatively, a multi-measure rest can be shown as a single measure containing a multi-measure rest symbol, with the number of measures of rest printed above the measure:\\n\\n    % Default behavior\\n    \\\\time 3/4 r2. | R2.*2 |\\n    \\\\time 2/4 R2 |\\n    \\\\time 4/4\\n    % Rest measures contracted to single measure\\n    \\\\compressFullBarRests\\n    r1 | R1*17 | R1*4 |\\n    % Rest measures expanded\\n    \\\\expandFullBarRests\\n    \\\\time 3/4\\n    R2.*2 |\"\n  },\n  {\n    \"label\": \"\\\\compressFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\concat\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Concatenate args in a horizontal line, without spaces in between. Strings and simple markups are concatenated on the input level, allowing ligatures. For example, \\\\concat { \\\"f\\\" \\\\simple #\\\"i\\\" } is equivalent to \\\"fi\\\".\\n\\n    \\\\markup {\\n      \\\\concat {\\n        one\\n        two\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\consists\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\context\",\n    \"detail\": \"5.1.2 Creating and referencing contexts\",\n    \"documentation\": \"LilyPond will create lower-level contexts automatically if a music expression is encountered before a suitable context exists, but this is usually successful only for simple scores or music fragments like the ones in the documentation. For more complex scores it is advisable to specify all contexts explicitly with either the \\\\new or \\\\context command. The syntax of these two commands is very similar:\\n\\n    [\\\\new | \\\\context] Context [ = name] [music-expression]\\n\\nwhere either \\\\new or \\\\context may be specified. Context is the type of context which is to be created, name is an optional name to be given to the particular context being created and music-expression is a single music expression that is to be interpreted by the engravers and performers in this context.\\n\\nThe \\\\new prefix without a name is commonly used to create scores with many staves:\\n\\n    <<\\n      \\\\new Staff {\\n        % leave the Voice context to be created implicitly\\n        c4 c\\n      }\\n      \\\\new Staff {\\n        d4 d\\n      }\\n    >>\\n\\nand to place several voices into one staff:\\n\\n    <<\\n      \\\\new Staff <<\\n        \\\\new Voice {\\n          \\\\voiceOne\\n          c8 c c4 c c\\n        }\\n        \\\\new Voice {\\n          \\\\voiceTwo\\n          g4 g g g\\n        }\\n      >>\\n    >>\\n\\n\\\\new should always be used to specify unnamed contexts.\\n\\nThe difference between \\\\new and \\\\context is in the action taken:\\n\\n - \\\\new with or without a name will always create a fresh, distinct, context, even if one with the same name already exists:\\n<<\\n  \\\\new Staff <<\\n    \\\\new Voice = \\\"A\\\" {\\n      \\\\voiceOne\\n      c8 c c4 c c\\n    }\\n    \\\\new Voice = \\\"A\\\" {\\n      \\\\voiceTwo\\n      g4 g g g\\n    }\\n  >>\\n>>\\n \\n\\n\\n - \\\\context with a name specified will create a distinct context only if a context of the same type with the same name in the same context hierarchy does not already exist. Otherwise it will be taken as a reference to that previously created context, and its music expression will be passed to that context for interpretation.\\nOne application of named contexts is in separating the score layout from the musical content. Either of these two forms is valid:\\n\\n\\\\score {\\n  <<\\n    % score layout\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"one\\\" {\\n        \\\\voiceOne\\n      }\\n      \\\\new Voice = \\\"two\\\" {\\n        \\\\voiceTwo\\n      }\\n    >>\\n\\n    % musical content\\n    \\\\context Voice = \\\"one\\\" {\\n      \\\\relative c'' {\\n        c4 c c c\\n      }\\n    }\\n    \\\\context Voice = \\\"two\\\" {\\n      \\\\relative c'' {\\n        g8 g g4 g g\\n      }\\n    }\\n  >>\\n}\\n \\n\\n\\\\score {\\n  <<\\n    % score layout\\n    \\\\new Staff <<\\n      \\\\context Voice = \\\"one\\\" {\\n        \\\\voiceOne\\n      }\\n      \\\\context Voice = \\\"two\\\" {\\n        \\\\voiceTwo\\n      }\\n    >>\\n\\n    % musical content\\n    \\\\context Voice = \\\"one\\\" {\\n      \\\\relative c'' {\\n        c4 c c c\\n      }\\n    }\\n    \\\\context Voice = \\\"two\\\" {\\n      \\\\relative c'' {\\n        g8 g g4 g g\\n      }\\n    }\\n  >>\\n}\\n \\n\\nAlternatively, variables may be employed to similar effect. See Organizing pieces with variables.\\n\\n\\n - \\\\context with no name will match the first of any previously created contexts of the same type in the same context heirarchy, even one that has been given a name, and its music expression will be passed to that context for interpretation. This form is rarely useful. However, \\\\context with no name and no music expression is used to set the context in which a Scheme procedure specified with \\\\applyContext is executed:\\n\\\\new Staff \\\\relative c' {\\n  c1\\n  \\\\context Timing\\n  \\\\applyContext #(lambda (ctx)\\n                   (newline)\\n                   (display (ly:context-current-moment ctx)))\\n  c1\\n}\\n\\n\\nA context must be named if it is to be referenced later, for example when lyrics are associated with music:\\n\\n    \\\\new Voice = \\\"tenor\\\" music\\n    …\\n    \\\\new Lyrics \\\\lyricsto \\\"tenor\\\" lyrics\\n\\nFor details of associating lyrics with music see Automatic syllable durations.\\n\\nThe properties of all contexts of a particular type can be modified in a \\\\layout block (with a different syntax), see Changing all contexts of the same type. This construct also provides a means of keeping layout instructions separate from the musical content. If a single context is to be modified, a \\\\with block must be used, see Changing just one specific context.\"\n  },\n  {\n    \"label\": \"\\\\context\",\n    \"detail\": \"Changing all contexts of the same type\",\n    \"documentation\": \"The default context settings which are to be used for typesetting in Score, Staff, Voice and other contexts may be specified in a \\\\context block within any \\\\layout block.\\n\\nSettings for Midi output as opposed to typesetting will have to be separately specified in \\\\midi blocks (see Output definitions - blueprints for contexts).\\n\\nThe \\\\layout block should be placed within the \\\\score block to which it is to apply, after the music.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        [context settings for all Voice contexts]\\n      }\\n      \\\\context {\\n        \\\\Staff\\n        [context settings for all Staff contexts]\\n      }\\n    }\\n\\nThe following types of settings may be specified:\\n\\n - An \\\\override command, but with the context name omitted\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Thicker stems\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      \\\\override Stem.thickness = #4.0\\n    }\\n  }\\n}\\n \\n\\n\\n - Directly setting a context property\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Smaller font\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      fontSize = #-4\\n    }\\n  }\\n}\\n \\n\\n\\n - A predefined command such as \\\\dynamicUp or a music expression like \\\\accidentalStyle dodecaphonic\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Dynamics above\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Voice\\n      \\\\dynamicUp\\n    }\\n    \\\\context {\\n      \\\\Staff\\n      \\\\accidentalStyle dodecaphonic\\n    }\\n  }\\n}\\n \\n\\n\\n - A user-defined variable containing a \\\\with block; for details of the \\\\with block see Changing just one specific context.\\nStaffDefaults = \\\\with {\\n  fontSize = #-4\\n}\\n\\n\\\\score {\\n  \\\\new Staff {\\n    \\\\relative c'' {\\n      a4^\\\"Smaller font\\\" a a a\\n      a4 a a a\\n    }\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      \\\\StaffDefaults\\n    }\\n  }\\n}\\n \\n\\n\\n\\nProperty-setting commands can be placed in a \\\\layout block without being enclosed in a \\\\context block. Such settings are equivalent to including the same property-setting commands at the start of every context of the type specified. If no context is specified every bottom-level context is affected, see Bottom-level contexts - voices. The syntax of a property-setting command in a \\\\layout block is the same as the same command written in the music stream.\\n\\n    \\\\score {\\n      \\\\new Staff {\\n        \\\\relative c'' {\\n          a4^\\\"Smaller font\\\" a a a\\n          a4 a a a\\n        }\\n      }\\n      \\\\layout {\\n        \\\\accidentalStyle dodecaphonic\\n        \\\\set fontSize = #-4\\n        \\\\override Voice.Stem.thickness = #4.0\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\cresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\crescHairpin\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\crescTextCresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\crossStaff\",\n    \"detail\": \"Cross-staff stems\",\n    \"documentation\": \"Chords that cross staves may be produced using the Span_stem_engraver. Care must be taken to ensure that automatic beams do not beam the notes on one staff when it’s not required on the other.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\PianoStaff\\n        \\\\consists #Span_stem_engraver\\n      }\\n    }\\n    {\\n      \\\\new PianoStaff <<\\n        \\\\new Staff {\\n          <b d'>4 r d'16\\\\> e'8. g8 r\\\\!\\n          e'8 f' g'4 e'2\\n        }\\n        \\\\new Staff {\\n          \\\\clef bass\\n          \\\\voiceOne\\n          \\\\autoBeamOff\\n          \\\\crossStaff { <e g>4 e, g16 a8. c8} d\\n          \\\\autoBeamOn\\n          g8 f g4 c2\\n        }\\n      >>\\n    }\\n\\nFor the time being, this engraver can not be specified by its name in double quotes, but rather prefixing its name with a hash symbol #, due to the way it is implemented.\"\n  },\n  {\n    \"label\": \"\\\\cueClef\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cueDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cueDuringWithClef\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\customTabClef\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a tab clef sans-serif style.\"\n  },\n  {\n    \"label\": \"\\\\decr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\decresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\defaultchild\",\n    \"detail\": \"5.1.7 Context layout order\",\n    \"documentation\": \"Note that a context will be silently created implicitly if a command is encountered when there is no suitable context available to contain it.\\n\\nWithin a context definition, the type of subcontext to be implicitly created is specified using \\\\defaultchild. A number of music events require a ‘Bottom’ context: when such an event is encountered, subcontexts are created recursively until reaching a context with no ‘defaultchild’ setting.\\n\\nImplicit context creation can at times give rise to unexpected new staves or scores. Using \\\\new to create contexts explicitly avoids those problems.\"\n  },\n  {\n    \"label\": \"\\\\defaultTimeSignature\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature symbol that is used in 2/2 and 4/4 time can be changed to a numeric style:\\n\\n    % Default style\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Change to numeric style\\n    \\\\numericTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Revert to default style\\n    \\\\defaultTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n\\nMensural time signatures are covered in Mensural time signatures.\"\n  },\n  {\n    \"label\": \"\\\\defineBarLine\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"New bar line types can be defined with \\\\defineBarLine:\\n\\n    \\\\defineBarLine bartype #'(end begin span)\\n\\nThe \\\\defineBarline variables can include the ‘empty’ string \\\"\\\", which is equivalent to an invisible bar line being printed. Or they can be set to #f which prints no bar line at all.\\n\\nAfter the definiton, the new bar line can be used by \\\\bar bartype.\\n\\nThere are currently ten bar line elements available:\\n\\n    \\\\defineBarLine \\\":\\\" #'(\\\"\\\" \\\":\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"=\\\" #'(\\\"=\\\" \\\"\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"[\\\" #'(\\\"\\\" \\\"[\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"]\\\" #'(\\\"]\\\" \\\"\\\" \\\"\\\")\\n    \\\\new Staff {\\n      s1 \\\\bar \\\"|\\\"\\n      s1 \\\\bar \\\".\\\"\\n      s1 \\\\bar \\\"!\\\"\\n      s1 \\\\bar \\\";\\\"\\n      s1 \\\\bar \\\":\\\"\\n      s1 \\\\bar \\\"k\\\"\\n      s1 \\\\bar \\\"S\\\"\\n      s1 \\\\bar \\\"=\\\"\\n      s1 \\\\bar \\\"[\\\"\\n      s1 \\\\bar \\\"]\\\"\\n      s1 \\\\bar \\\"\\\"\\n    }\\n\\nThe \\\"=\\\" bar line provides the double span bar line, used in combination with the segno sign. Do not use it as a standalone double thin bar line; here, \\\\bar \\\"||\\\" is preferred.\\n\\nThe \\\"-\\\" sign starts annotations to bar lines which are useful to distinguish those with identical appearance but different behavior at line breaks and/or different span bars. The part following the \\\"-\\\" sign is not used for building up the bar line.\\n\\n    \\\\defineBarLine \\\"||-dashedSpan\\\" #'(\\\"||\\\" \\\"\\\" \\\"!!\\\")\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        c1 \\\\bar \\\"||\\\"\\n        c1 \\\\bar \\\"||-dashedSpan\\\"\\n        c1\\n      }\\n      \\\\new Staff {\\n        c1\\n        c1\\n        c1\\n      }\\n    >>\\n\\nFurthermore, the space character \\\" \\\" serves as a placeholder for defining span bars correctly aligned to the main bar lines:\\n\\n    \\\\defineBarLine \\\":|.-wrong\\\" #'(\\\":|.\\\" \\\"\\\" \\\"|.\\\")\\n    \\\\defineBarLine \\\":|.-right\\\" #'(\\\":|.\\\" \\\"\\\" \\\" |.\\\")\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        c1 \\\\bar \\\":|.-wrong\\\"\\n        c1 \\\\bar \\\":|.-right\\\"\\n        c1\\n      }\\n      \\\\new Staff {\\n        c1\\n        c1\\n        c1\\n      }\\n    >>\\n\\nIf additional elements are needed, LilyPond provides a simple way to define them. For more informations on modifying or adding bar lines, see file ‘scm/bar-line.scm’.\\n\\nIn scores with many staves, a \\\\bar command in one staff is automatically applied to all staves. The resulting bar lines are connected between different staves of a StaffGroup, PianoStaff, or GrandStaff.\\n\\n    <<\\n      \\\\new StaffGroup <<\\n        \\\\new Staff {\\n          e4 d\\n          \\\\bar \\\"||\\\"\\n          f4 e\\n        }\\n        \\\\new Staff { \\\\clef bass c4 g e g }\\n      >>\\n      \\\\new Staff { \\\\clef bass c2 c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\deminutum\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\deminutum\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\denies\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\denies\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"The opposite of \\\\accepts is \\\\denies, which is sometimes needed when reusing existing context definitions.\\n\\nPutting both into a \\\\layout block, like\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\name ImproVoice\\n        …\\n      }\\n      \\\\context {\\n        \\\\Staff\\n        \\\\accepts \\\"ImproVoice\\\"\\n      }\\n    }\\n\\nThen the output at the start of this subsection can be entered as\\n\\n    \\\\relative c'' {\\n      a4 d8 bes8\\n      \\\\new ImproVoice {\\n        c4^\\\"ad lib\\\" c\\n        c4 c^\\\"undress\\\"\\n        c c_\\\"while playing :)\\\"\\n      }\\n      a1\\n    }\\n\\nTo complete this example, changes affecting the context hierarchy should be repeated in a \\\\midi block so that Midi output depends on the same context relations.\"\n  },\n  {\n    \"label\": \"\\\\denies\",\n    \"detail\": \"5.1.7 Context layout order\",\n    \"documentation\": \"Contexts are normally positioned in a system from top to bottom in the order in which they are encountered in the input file. When contexts are nested, the outer context will include inner nested contexts as specified in the input file, provided the inner contexts are included in the outer context’s “accepts” list. Nested contexts which are not included in the outer context’s “accepts” list will be repositioned below the outer context rather than nested within it.\\n\\nThe “accepts” list of a context can be changed with the \\\\accepts or \\\\denies commands. \\\\accepts adds a context to the “accepts” list and \\\\denies removes a context from the list.\\n\\nFor example, a square-braced staff group is not usually found within a curved-braced staff with connecting staff bars, and a GrandStaff does not accept a StaffGroup inside it by default.\\n\\n    \\\\score {\\n      \\\\new GrandStaff <<\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { c'1 }\\n          \\\\new Staff { d'1 }\\n        >>\\n        \\\\new Staff { \\\\set Staff.instrumentName = bottom f'1 }\\n      >>\\n    }\\n\\nHowever, by using the \\\\accepts command, StaffGroup can be added to the GrandStaff context:\\n\\n    \\\\score {\\n      \\\\new GrandStaff <<\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { c'1 }\\n          \\\\new Staff { d'1 }\\n        >>\\n        \\\\new Staff { \\\\set Staff.instrumentName = bottom f'1 }\\n      >>\\n      \\\\layout {\\n        \\\\context {\\n          \\\\GrandStaff\\n          \\\\accepts \\\"StaffGroup\\\"\\n        }\\n      }\\n    }\\n\\n\\\\denies is mainly used when a new context is being based on another, but the required nesting differs. For example, the VaticanaStaff context is based on the Staff context, but with the VaticanaVoice context substituted for the Voice context in the “accepts” list.\"\n  },\n  {\n    \"label\": \"\\\\descendens\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\descendens\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\dim\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\dimHairpin\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDecr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDecresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDim\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dir-column\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Make a column of args, going up or down, depending on the setting of the direction layout property.\\n\\n    \\\\markup {\\n      \\\\override #`(direction . ,UP) {\\n        \\\\dir-column {\\n          going up\\n        }\\n      }\\n      \\\\hspace #1\\n      \\\\dir-column {\\n        going down\\n      }\\n      \\\\hspace #1\\n      \\\\override #'(direction . 1) {\\n        \\\\dir-column {\\n          going up\\n        }\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\\n - direction\"\n  },\n  {\n    \"label\": \"\\\\discant\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\discant name generates a discant accordion register symbol.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nThe register names in the default \\\\discant register set have modeled after numeric Swiss notation like depicted in http://de.wikipedia.org/wiki/Register_%28Akkordeon%29, omitting the slashes and dropping leading zeros.\\n\\nThe string name is basically a three-digit number with the lowest digit specifying the number of 16’ reeds, the tens the number of 8’ reeds, and the hundreds specifying the number of 4’ reeds. Without modification, the specified number of reeds in 8’ is centered in the symbol. Newer instruments may have registrations where 8’ can be used either within or without a tone chamber, ‘cassotto’. Notationally, the central dot then indicates use of cassotto. One can suffix the tens’ digits ‘1’ and ‘2’ with ‘+’ or ‘-’ to indicate clustering the dots at the right or left respectively rather than centered.\\n\\nSome examples are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\displayLilyMusic\",\n    \"detail\": \"3.6.1 Displaying LilyPond notation\",\n    \"documentation\": \"Displaying a music expression in LilyPond notation can be done with the music function \\\\displayLilyMusic. To see the output, you will typically want to call LilyPond using the command line. For example,\\n\\n    {\\n      \\\\displayLilyMusic \\\\transpose c a, { c4 e g a bes }\\n    }\\n\\nwill display\\n\\n    { a,4 cis e fis g }\\n\\nBy default, LilyPond will print these messages to the console along with all the other LilyPond compilation messages. To split up these messages and save the results of \\\\displayLilyMusic, redirect the output to a file.\\n\\n    lilypond file.ly >display.txt\"\n  },\n  {\n    \"label\": \"\\\\divisioMaior\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\divisioMaxima\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\divisioMinima\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\dorian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\dotsDown\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\dotsNeutral\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\dotsUp\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\doubleflat\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a double flat symbol.\\n\\n    \\\\markup {\\n      \\\\doubleflat\\n    }\"\n  },\n  {\n    \"label\": \"\\\\doublesharp\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a double sharp symbol.\\n\\n    \\\\markup {\\n      \\\\doublesharp\\n    }\"\n  },\n  {\n    \"label\": \"\\\\downbow\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\downbow\",\n    \"detail\": \"Bowing indications\",\n    \"documentation\": \"Bowing indications are created as articulations, which are described in Articulations and ornamentations.\\n\\nThe bowing commands, \\\\upbow and \\\\downbow, are used with slurs as follows:\\n\\n    c4(\\\\downbow d) e(\\\\upbow f)\\n\\nand the following example shows three ways in which an open A string on a violin might be indicated:\\n\\n    a4 \\\\open\\n    a^\\\\markup { \\\\teeny \\\"II\\\" }\\n    a2^\\\\markup { \\\\small \\\"sul A\\\" }\"\n  },\n  {\n    \"label\": \"\\\\downmordent\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\downprall\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\draw-circle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\draw-circle\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"A circle of radius radius and thickness thickness, optionally filled.\\n\\n    \\\\markup {\\n      \\\\draw-circle #2 #0.5 ##f\\n      \\\\hspace #2\\n      \\\\draw-circle #2 #0 ##t\\n    }\"\n  },\n  {\n    \"label\": \"\\\\draw-dashed-line\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"A dashed line.\\n\\nIf full-length is set to #t (default) the dashed-line extends to the whole length given by dest, without white space at beginning or end. off will then be altered to fit. To insist on the given (or default) values of on, off use \\\\override #'(full-length . #f) Manual settings for on,off and phase are possible.\\n\\n    \\\\markup {\\n      \\\\draw-dashed-line #'(5.1 . 2.3)\\n      \\\\override #'(on . 0.3)\\n      \\\\override #'(off . 0.5)\\n      \\\\draw-dashed-line #'(5.1 . 2.3)\\n    }\\n\\nUsed properties:\\n\\n - full-length (#t)\\n - phase (0)\\n - off (1)\\n - on (1)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\draw-dotted-line\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"A dotted line.\\n\\nThe dotted-line always extends to the whole length given by dest, without white space at beginning or end. Manual settings for off are possible to get larger or smaller space between the dots. The given (or default) value of off will be altered to fit the line-length.\\n\\n    \\\\markup {\\n      \\\\draw-dotted-line #'(5.1 . 2.3)\\n      \\\\override #'(thickness . 2)\\n      \\\\override #'(off . 0.2)\\n      \\\\draw-dotted-line #'(5.1 . 2.3)\\n    }\\n\\nUsed properties:\\n\\n - phase (0)\\n - off (1)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\draw-hline\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draws a line across a page, where the property span-factor controls what fraction of the page is taken up.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\draw-hline\\n        \\\\override #'(span-factor . 1/3)\\n        \\\\draw-hline\\n      }\\n    }\\n\\nUsed properties:\\n\\n - span-factor (1)\\n - line-width\\n - draw-line-markup\"\n  },\n  {\n    \"label\": \"\\\\draw-line\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\draw-line\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"A simple line.\\n\\n    \\\\markup {\\n      \\\\draw-line #'(4 . 4)\\n      \\\\override #'(thickness . 5)\\n      \\\\draw-line #'(-3 . 0)\\n    }\\n\\nUsed properties:\\n\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\drummode\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"\\\\dynamic\",\n    \"detail\": \"New dynamic marks\",\n    \"documentation\": \"In markup mode, editorial dynamics (within parentheses or square brackets) can be created. The syntax for markup mode is described in Formatting text.\\n\\n    roundF = \\\\markup {\\n        \\\\center-align \\\\concat { \\\\bold { \\\\italic ( }\\n               \\\\dynamic f \\\\bold { \\\\italic ) } } }\\n    boxF = \\\\markup { \\\\bracket { \\\\dynamic f } }\\n    \\\\relative c' {\\n      c1_\\\\roundF\\n      c1_\\\\boxF\\n    }\"\n  },\n  {\n    \"label\": \"\\\\dynamic\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Use the dynamic font. This font only contains s, f, m, z, p, and r. When producing phrases, like ‘più f’, the normal words (like ‘più’) should be done in a different font. The recommended font for this is bold and italic.\\n\\n    \\\\markup {\\n      \\\\dynamic {\\n        sfzp\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\dynamicDown\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\dynamicNeutral\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\dynamicUp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\easyHeadsOff\",\n    \"detail\": \"Easy notation note heads\",\n    \"documentation\": \"The ‘easy play’ note head includes a note name inside the head. It is used in music for beginners. To make the letters readable, it should be printed in a large font size. To print with a larger font, see Setting the staff size.\\n\\n    #(set-global-staff-size 26)\\n    \\\\relative c' {\\n      \\\\easyHeadsOn\\n      c2 e4 f\\n      g1\\n      \\\\easyHeadsOff\\n      c,1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\easyHeadsOn\",\n    \"detail\": \"Easy notation note heads\",\n    \"documentation\": \"The ‘easy play’ note head includes a note name inside the head. It is used in music for beginners. To make the letters readable, it should be printed in a large font size. To print with a larger font, see Setting the staff size.\\n\\n    #(set-global-staff-size 26)\\n    \\\\relative c' {\\n      \\\\easyHeadsOn\\n      c2 e4 f\\n      g1\\n      \\\\easyHeadsOff\\n      c,1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\ellipse\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw an ellipse around arg. Use thickness, x-padding, y-padding and font-size properties to determine line thickness and padding around the markup.\\n\\n    \\\\markup {\\n      \\\\ellipse {\\n        Hi\\n      }\\n    }\\n\\nUsed properties:\\n\\n - y-padding (0.2)\\n - x-padding (0.2)\\n - font-size (0)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\epsfile\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Advanced graphic features include the ability to include external image files converted to the Encapsulated PostScript format (eps), or to directly embed graphics into the input file, using native PostScript code. In such a case, it may be useful to explicitly specify the size of the drawing, as demonstrated below:\\n\\n    c1^\\\\markup {\\n      \\\\combine\\n        \\\\epsfile #X #10 #\\\"./context-example.eps\\\"\\n        \\\\with-dimensions #'(0 . 6) #'(0 . 10)\\n        \\\\postscript #\\\"\\n          -2 3 translate\\n          2.7 2 scale\\n          newpath\\n          2 -1 moveto\\n          4 -2 4 1 1 arct\\n          4 2 3 3 1 arct\\n          0 4 0 3 1 arct\\n          0 0 1 -1 1 arct\\n          closepath\\n          stroke\\\"\\n      }\\n    c\\n\\nAn exhaustive list of graphics-specific commands can be found in Graphic.\"\n  },\n  {\n    \"label\": \"\\\\epsfile\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Inline an EPS image. The image is scaled along axis to size.\\n\\n    \\\\markup {\\n      \\\\general-align #Y #DOWN {\\n        \\\\epsfile #X #20 #\\\"context-example.eps\\\"\\n        \\\\epsfile #Y #20 #\\\"context-example.eps\\\"\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\espressivo\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\espressivo\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"The \\\\espressivo command can be used to indicate a crescendo and decrescendo on the same note. However, be warned that this is implemented as an articulation, not a dynamic.\\n\\n    c2 b4 a\\n    g1\\\\espressivo\"\n  },\n  {\n    \"label\": \"\\\\expandFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"By default a multi-measure rest is expanded in the printed score to show all the rest measures explicitly. Alternatively, a multi-measure rest can be shown as a single measure containing a multi-measure rest symbol, with the number of measures of rest printed above the measure:\\n\\n    % Default behavior\\n    \\\\time 3/4 r2. | R2.*2 |\\n    \\\\time 2/4 R2 |\\n    \\\\time 4/4\\n    % Rest measures contracted to single measure\\n    \\\\compressFullBarRests\\n    r1 | R1*17 | R1*4 |\\n    % Rest measures expanded\\n    \\\\expandFullBarRests\\n    \\\\time 3/4\\n    R2.*2 |\"\n  },\n  {\n    \"label\": \"\\\\expandFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\eyeglasses\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Prints out eyeglasses, indicating strongly to look at the conductor.\\n\\n    \\\\markup { \\\\eyeglasses }\"\n  },\n  {\n    \"label\": \"\\\\f\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\featherDurations\",\n    \"detail\": \"Feathered beams\",\n    \"documentation\": \"Feathered beams are used to indicate that a small group of notes should be played at an increasing (or decreasing) tempo, without changing the overall tempo of the piece. The extent of the feathered beam must be indicated manually using [ and ], and the beam feathering is turned on by specifying a direction to the Beam property grow-direction.\\n\\nIf the placement of the notes and the sound in the MIDI output is to reflect the ritardando or accelerando indicated by the feathered beam the notes must be grouped as a music expression delimited by braces and preceded by a featherDurations command which specifies the ratio between the durations of the first and last notes in the group.\\n\\nThe square brackets show the extent of the beam and the braces show which notes are to have their durations modified. Normally these would delimit the same group of notes, but this is not required: the two commands are independent.\\n\\nIn the following example the eight 16th notes occupy exactly the same time as a half note, but the first note is one half as long as the last one, with the intermediate notes gradually lengthening. The first four 32nd notes gradually speed up, while the last four 32nd notes are at a constant tempo.\\n\\n    \\\\override Beam.grow-direction = #LEFT\\n    \\\\featherDurations #(ly:make-moment 2/1)\\n    { c16[ c c c c c c c] }\\n    \\\\override Beam.grow-direction = #RIGHT\\n    \\\\featherDurations #(ly:make-moment 2/3)\\n    { c32[ d e f] }\\n    % revert to non-feathered beams\\n    \\\\override Beam.grow-direction = #'()\\n    { g32[ a b c] }\\n\\nThe spacing in the printed output represents the note durations only approximately, but the MIDI output is exact.\"\n  },\n  {\n    \"label\": \"\\\\fermata\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\fermata\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Create a fermata glyph. When direction is DOWN, use an inverted glyph. Note that within music, one would usually use the \\\\fermata articulation instead of a markup.\\n\\n     { c1^\\\\markup \\\\fermata d1_\\\\markup \\\\fermata }\\n    \\\\markup { \\\\fermata \\\\override #`(direction . ,DOWN) \\\\fermata }\\n\\nUsed properties:\\n\\n - direction (1)\"\n  },\n  {\n    \"label\": \"\\\\fermataMarkup\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"Markups can be added to multi-measure rests. The predefined command \\\\fermataMarkup is provided for adding fermatas.\\n\\n    \\\\compressFullBarRests\\n    \\\\time 3/4\\n    R2.*10^\\\\markup { \\\\italic \\\"ad lib.\\\" }\\n    R2.^\\\\fermataMarkup\\n\\nNote: Markups attached to a multi-measure rest are objects of type MultiMeasureRestText, not TextScript. Overrides must be directed to the correct object, or they will be ignored. See the following example:\\n\\n\\n\\n    % This fails, as the wrong object name is specified\\n    \\\\override TextScript.padding = #5\\n    R1^\\\"wrong\\\"\\n    % This is the correct object name to be specified\\n    \\\\override MultiMeasureRestText.padding = #5\\n    R1^\\\"right\\\"\\n\\nWhen a multi-measure rest immediately follows a \\\\partial setting, resulting bar-check warnings may not be displayed.\"\n  },\n  {\n    \"label\": \"\\\\fermataMarkup\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\fermataMarkup\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\ff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ffff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fffff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fill-line\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Similarly, a list of elements or expressions may be spread to fill the entire horizontal line width (if there is only one element, it will be centered on the page). These expressions can, in turn, include multi-line text or any other markup expression:\\n\\n    \\\\markup {\\n      \\\\fill-line {\\n        \\\\line { William S. Gilbert }\\n        \\\\center-column {\\n          \\\\huge \\\\smallCaps \\\"The Mikado\\\"\\n          or\\n          \\\\smallCaps \\\"The Town of Titipu\\\"\\n        }\\n        \\\\line { Sir Arthur Sullivan }\\n      }\\n    }\\n    \\\\markup {\\n      \\\\fill-line { 1885 }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\fill-line\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put markups in a horizontal line of width line-width. The markups are spaced or flushed to fill the entire line. If there are no arguments, return an empty stencil.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\fill-line {\\n          Words evenly spaced across the page\\n        }\\n        \\\\null\\n        \\\\fill-line {\\n          \\\\line { Text markups }\\n          \\\\line {\\n            \\\\italic { evenly spaced }\\n          }\\n          \\\\line { across the page }\\n        }\\n      }\\n    }\\n\\nUsed properties:\\n\\n - line-width (#f)\\n - word-space (0.6)\\n - text-direction (1)\"\n  },\n  {\n    \"label\": \"\\\\fill-with-pattern\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put left and right in a horizontal line of width line-width with a line of markups pattern in between. Patterns are spaced apart by space. Patterns are aligned to the dir markup.\\n\\n    \\\\markup \\\\column {\\n      \\\"right-aligned :\\\"\\n      \\\\fill-with-pattern #1 #RIGHT . first right\\n      \\\\fill-with-pattern #1 #RIGHT . second right\\n      \\\\null\\n      \\\"center-aligned :\\\"\\n      \\\\fill-with-pattern #1.5 #CENTER - left right\\n      \\\\null\\n      \\\"left-aligned :\\\"\\n      \\\\override #'(line-width . 50)\\n      \\\\fill-with-pattern #2 #LEFT : left first\\n      \\\\override #'(line-width . 50)\\n      \\\\fill-with-pattern #2 #LEFT : left second\\n    }\\n\\nUsed properties:\\n\\n - line-width\\n - word-space\"\n  },\n  {\n    \"label\": \"\\\\filled-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\filled-box\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw a box with rounded corners of dimensions xext and yext. For example,\\n\\n\\\\filled-box #'(-.3 . 1.8) #'(-.3 . 1.8) #0\\n\\n\\ncreates a box extending horizontally from -0.3 to 1.8 and vertically from -0.3 up to 1.8, with corners formed from a circle of diameter 0 (i.e., sharp corners).\\n\\n    \\\\markup {\\n      \\\\filled-box #'(0 . 4) #'(0 . 4) #0\\n      \\\\filled-box #'(0 . 2) #'(-4 . 2) #0.4\\n      \\\\filled-box #'(1 . 8) #'(0 . 7) #0.2\\n      \\\\with-color #white\\n      \\\\filled-box #'(-4.5 . -2.5) #'(3.5 . 5.5) #0.7\\n    }\"\n  },\n  {\n    \"label\": \"\\\\finalis\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\finger\",\n    \"detail\": \"Fingering instructions\",\n    \"documentation\": \"Fingering instructions can be entered using ‘note-digit’:\\n\\n    c4-1 d-2 f-4 e-3\\n\\nMarkup texts or strings may be used for finger changes.\\n\\n    c4-1 d-2 f\\\\finger \\\\markup \\\\tied-lyric #\\\"4~3\\\" c\\\\finger \\\"2 - 3\\\"\"\n  },\n  {\n    \"label\": \"\\\\finger\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set arg as small numbers.\\n\\n    \\\\markup {\\n      \\\\finger {\\n        1 2 3 4 5\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\flageolet\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\flat\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a flat symbol.\\n\\n    \\\\markup {\\n      \\\\flat\\n    }\"\n  },\n  {\n    \"label\": \"\\\\flexa\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"Two adjacent heads can be tied together with the \\\\pes and \\\\flexa infix commands for a rising and falling line of melody, respectively.\"\n  },\n  {\n    \"label\": \"\\\\fontCaps\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font-shape to caps\\n\\nNote: \\\\fontCaps requires the installation and selection of fonts which support the caps font shape.\"\n  },\n  {\n    \"label\": \"\\\\fontsize\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\fontsize\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Add increment to the font-size. Adjusts baseline-skip accordingly.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\fontsize #-1.5\\n      smaller\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip (2)\\n - word-space (1)\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\footnote\",\n    \"detail\": \"Footnotes in music expressions\",\n    \"documentation\": \"Footnotes in music expressions fall into two categories:\\n\\nEvent-based footnotes\\nare attached to a particular event. Examples for such events are single notes, articulations (like fingering indications, accents, dynamics), and post-events (like slurs and manual beams). The general form for event-based footnotes is as follows:\\n\\n[direction] \\\\footnote [mark] offset footnote music\\nTime-based footnotes\\nare bound to a particular point of time in a musical context. Some commands like \\\\time and \\\\clef don’t actually use events for creating objects like time signatures and clefs. Neither does a chord create an event of its own: its stem or flag is created at the end of a time step (nominally through one of the note events inside). Exactly which of a chord’s multiple note events will be deemed the root cause of a stem or flag is undefined. So for annotating those, time-based footnotes are preferable as well.\\n\\nA time-based footnote allows such layout objects to be annotated without referring to an event. The general form for Time-based footnotes is:\\n\\n\\\\footnote [mark] offset footnote [Context].GrobName\\n\\n\\nThe elements for both forms are:\\n\\ndirection\\nIf (and only if) the \\\\footnote is being applied to a post-event or articulation, it must be preceded with a direction indicator (-, _, ^) in order to attach music (with a footnote mark) to the preceding note or rest.\\n\\nmark\\nis a markup or string specifying the footnote mark which is used for marking both the reference point and the footnote itself at the bottom of the page. It may be omitted (or equivalently replaced with \\\\default) in which case a number in sequence will be generated automatically. Such numerical sequences restart on each page containing a footnote.\\n\\noffset\\nis a number pair such as ‘#(2 . 1)’ specifying the X and Y offsets in units of staff-spaces from the boundary of the object where the mark should be placed. Positive values of the offsets are taken from the right/top edge, negative values from the left/bottom edge and zero implies the mark is centered on the edge.\\n\\nContext\\nis the context in which the grob being footnoted is created. It may be omitted if the grob is in a bottom context, e.g. a Voice context.\\n\\nGrobName\\nspecifies a type of grob to mark (like ‘Flag’). If it is specified, the footnote is not attached to a music expression in particular, but rather to all grobs of the type specified which occur at that moment of musical time.\\n\\nfootnote\\nis the markup or string specifying the footnote text to use at the bottom of the page.\\n\\nmusic\\nis the music event or post-event or articulation that is being annotated.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\footnote\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Have footnote note act as an annotation to the markup mkup.\\n\\n    \\\\markup {\\n      \\\\auto-footnote a b\\n      \\\\override #'(padding . 0.2)\\n      \\\\auto-footnote c d\\n    }\\n\\nThe footnote will not be annotated automatically.\"\n  },\n  {\n    \"label\": \"\\\\fp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fraction\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Make a fraction of two markups.\\n\\n    \\\\markup {\\n      π ≈\\n      \\\\fraction 355 113\\n    }\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\freeBass\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\freeBass name generates a free bass/converter accordion register symbol for the usual two-reed layout.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nAvailable registrations are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\frenchChords\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The size of the fret diagram, and the number of frets in the diagram can be changed in the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n         \\\\chordmode {\\n           f1 g\\n         }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"s:1.5;c:6-1-1;6-1;5-3;4-3;3-2;2-1;1-1;\\\"\\n        }\\n        <g, b, d g b g'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"h:6;6-3;5-2;4-o;3-o;2-o;1-3;\\\"\\n        }\\n      }\\n    >>\\n\\nThe number of strings in a fret diagram can be changed to accommodate different instruments such as banjos and ukuleles with the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          a1\\n        }\\n      }\\n      \\\\new Staff {\\n        % An 'A' chord for ukulele\\n        a'1^\\\\markup {\\n          \\\\fret-diagram #\\\"w:4;4-2-2;3-1-1;2-o;1-o;\\\"\\n        }\\n      }\\n    >>\\n\\nFingering indications can be added, and the location of fingering labels can be controlled by the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"f:1;6-x;5-3-3;4-2-2;3-o;2-1-1;1-o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"f:2;6-x;5-x;4-o;3-2-2;2-3-3;1-1-1;\\\"\\n        }\\n      }\\n    >>\\n\\nDot radius and dot position can be controlled with the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"d:0.35;6-x;5-3;4-2;3-o;2-1;1-o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"p:0.2;6-x;5-x;4-o;3-2;2-3;1-1;\\\"\\n        }\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram\",\n    \"detail\": \"A.10.5 Instrument Specific Markup\",\n    \"documentation\": \"Make a (guitar) fret diagram. For example, say\\n\\n    \\\\markup \\\\fret-diagram #\\\"s:0.75;6-x;5-x;4-o;3-2;2-3;1-2;\\\"\\n\\nfor fret spacing 3/4 of staff space, D chord diagram\\n\\nSyntax rules for definition-string:\\n\\n - - Diagram items are separated by semicolons.\\n - - Possible items:\\ns:number – Set the fret spacing of the diagram (in staff spaces). Default: 1.\\nt:number – Set the line thickness (relative to normal line thickness). Default: 0.5.\\nh:number – Set the height of the diagram in frets. Default: 4.\\nw:number – Set the width of the diagram in strings. Default: 6.\\nf:number – Set fingering label type (0 = none, 1 = in circle on string, 2 = below string). Default: 0.\\nd:number – Set radius of dot, in terms of fret spacing. Default: 0.25.\\np:number – Set the position of the dot in the fret space. 0.5 is centered; 1 is on lower fret bar, 0 is on upper fret bar. Default: 0.6.\\nc:string1-string2-fret – Include a barre mark from string1 to string2 on fret.\\nstring-fret – Place a dot on string at fret. If fret is ‘o’, string is identified as open. If fret is ‘x’, string is identified as muted.\\nstring-fret-fingering – Place a dot on string at fret, and label with fingering as defined by the f: code.\\n\\n - - Note: There is no limit to the number of fret indications per string.\\n\\nUsed properties:\\n\\n - thickness (0.5)\\n - fret-diagram-details\\n - size (1.0)\\n - align-dir (-0.4)\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-terse\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The fret-diagram-terse markup string omits string numbers; the string number is implied by the presence of semicolons. There is one semicolon for each string in the diagram. The first semicolon corresponds to the highest string number and the last semicolon corresponds to the first string. Mute strings, open strings, and fret numbers can be indicated.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;3;2;o;1;o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;x;o;2;3;1;\\\"\\n        }\\n      }\\n    >>\\n\\nBarre indicators can be included in the fret-diagram-terse markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          f1 g\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"1-(;3;3;2;1;1-);\\\"\\n        }\\n        <g, d g b d' g'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"3-(;5;5;4;3;3-);\\\"\\n        }\\n      }\\n    >>\\n\\nFingering indications can be included in the fret-diagram-terse markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\override Voice.TextScript.fret-diagram-details.finger-code = #'below-string\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;3-3;2-2;o;1-1;o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;x;o;2-2;3-3;1-1;\\\"\\n        }\\n      }\\n    >>\\n\\nOther fret diagram properties must be adjusted using \\\\override when using the fret-diagram-terse markup.\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-terse\",\n    \"detail\": \"A.10.5 Instrument Specific Markup\",\n    \"documentation\": \"Make a fret diagram markup using terse string-based syntax.\\n\\nHere is an example\\n\\n    \\\\markup \\\\fret-diagram-terse #\\\"x;x;o;2;3;2;\\\"\\n\\nfor a D chord diagram.\\n\\nSyntax rules for definition-string:\\n\\n - Strings are terminated by semicolons; the number of semicolons is the number of strings in the diagram.\\n - Mute strings are indicated by ‘x’.\\n - Open strings are indicated by ‘o’.\\n - A number indicates a fret indication at that fret.\\n - If there are multiple fret indicators desired on a string, they should be separated by spaces.\\n - Fingerings are given by following the fret number with a -, followed by the finger indicator, e.g. ‘3-2’ for playing the third fret with the second finger.\\n - Where a barre indicator is desired, follow the fret (or fingering) symbol with -( to start a barre and -) to end the barre.\\n\\nUsed properties:\\n\\n - thickness (0.5)\\n - fret-diagram-details\\n - size (1.0)\\n - align-dir (-0.4)\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-verbose\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The fret-diagram-verbose markup string is in the format of a Scheme list. Each element of the list indicates an item to be placed on the fret diagram.\\n\\n    <<\\n        \\\\new ChordNames {\\n          \\\\chordmode {\\n            c1 d:m\\n          }\\n        }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (mute 6)\\n            (place-fret 5 3)\\n            (place-fret 4 2)\\n            (open 3)\\n            (place-fret 2 1)\\n            (open 1)\\n          )\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (mute 6)\\n            (mute 5)\\n            (open 4)\\n            (place-fret 3 2)\\n            (place-fret 2 3)\\n            (place-fret 1 1)\\n          )\\n        }\\n      }\\n    >>\\n\\nFingering indications and barres can be included in a fret-diagram-verbose markup string. Unique to the fret-diagram-verbose interface is a capo indication that can be placed on the fret diagram. The capo indication is a thick bar that covers all strings. The fret with the capo will be the lowest fret in the fret diagram.\\n\\n    <<\\n        \\\\new ChordNames {\\n          \\\\chordmode {\\n            f1 g c\\n          }\\n        }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        \\\\override Voice.TextScript.fret-diagram-details.finger-code = #'below-string\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (place-fret 6 1)\\n            (place-fret 5 3)\\n            (place-fret 4 3)\\n            (place-fret 3 2)\\n            (place-fret 2 1)\\n            (place-fret 1 1)\\n            (barre 6 1 1)\\n          )\\n        }\\n        <g, b, d g b g'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (place-fret 6 3 2)\\n            (place-fret 5 2 1)\\n            (open 4)\\n            (open 3)\\n            (open 2)\\n            (place-fret 1 3 3)\\n          )\\n        }\\n        <c g c' e' g'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (capo 3)\\n            (mute 6)\\n            (place-fret 4 5 1)\\n            (place-fret 3 5 2)\\n            (place-fret 2 5 3)\\n          )\\n        }\\n      }\\n    >>\\n\\nAll other fret diagram properties must be adjusted using \\\\override when using the fret-diagram-verbose markup.\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-verbose\",\n    \"detail\": \"A.10.5 Instrument Specific Markup\",\n    \"documentation\": \"Make a fret diagram containing the symbols indicated in marking-list.\\n\\nFor example,\\n\\n    \\\\markup \\\\fret-diagram-verbose\\n      #'((mute 6) (mute 5) (open 4)\\n         (place-fret 3 2) (place-fret 2 3) (place-fret 1 2))\\n\\nproduces a standard D chord diagram without fingering indications.\\n\\nPossible elements in marking-list:\\n\\n(mute string-number)\\nPlace a small ‘x’ at the top of string string-number.\\n\\n(open string-number)\\nPlace a small ‘o’ at the top of string string-number.\\n\\n(barre start-string end-string fret-number)\\nPlace a barre indicator (much like a tie) from string start-string to string end-string at fret fret-number.\\n\\n(capo fret-number)\\nPlace a capo indicator (a large solid bar) across the entire fretboard at fret location fret-number. Also, set fret fret-number to be the lowest fret on the fret diagram.\\n\\n(place-fret string-number fret-number [finger-value [color-modifier]])\\nPlace a fret playing indication on string string-number at fret fret-number with an optional fingering label finger-value, and an optional color modifier color-modifier. By default, the fret playing indicator is a solid dot. This can be globally changed by setting the value of the variable dot-color. Setting color-modifier to inverted inverts the dot color for a specific fingering. If the finger part of the place-fret element is present, finger-value will be displayed according to the setting of the variable finger-code. There is no limit to the number of fret indications per string.\\n\\n\\n\\nUsed properties:\\n\\n - thickness (0.5)\\n - fret-diagram-details\\n - size (1.0)\\n - align-dir (-0.4)\"\n  },\n  {\n    \"label\": \"\\\\fromproperty\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Read the symbol from property settings, and produce a stencil from the markup contained within. If symbol is not defined, it returns an empty markup.\\n\\n    \\\\header {\\n      myTitle = \\\"myTitle\\\"\\n      title = \\\\markup {\\n        from\\n        \\\\italic\\n        \\\\fromproperty #'header:myTitle\\n      }\\n    }\\n    \\\\markup {\\n      \\\\null\\n    }\"\n  },\n  {\n    \"label\": \"\\\\funkHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\funkHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\general-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\general-align\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Align arg in axis direction to the dir side.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        \\\\general-align #X #LEFT\\n        two\\n        three\\n        \\\\null\\n        one\\n        \\\\general-align #X #CENTER\\n        two\\n        three\\n        \\\\null\\n        \\\\line {\\n          one\\n          \\\\general-align #Y #UP\\n          two\\n          three\\n        }\\n        \\\\null\\n        \\\\line {\\n          one\\n          \\\\general-align #Y #3.2\\n          two\\n          three\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\germanChords\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\glissando\",\n    \"detail\": \"Glissando\",\n    \"documentation\": \"A glissando is created by appending \\\\glissando to a note:\\n\\n    g2\\\\glissando g'\\n    c2\\\\glissando c,\\n    \\\\afterGrace f,1\\\\glissando f'16\\n\\nA glissando can connect notes across staves:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"right\\\" {\\n        e'''2\\\\glissando\\n        \\\\change Staff = \\\"left\\\"\\n        a,,4\\\\glissando\\n        \\\\change Staff = \\\"right\\\"\\n        b''8 r |\\n      }\\n      \\\\new Staff = \\\"left\\\" {\\n        \\\\clef bass\\n        s1\\n      }\\n    >>\\n\\nA glissando can connect notes in chords. If anything other than a direct one-to-one pairing of the notes in the two chords is required the connections between the notes are defined by setting \\\\glissandoMap, where the notes of a chord are assumed to be numbered from zero in the order in which they appear in the input ‘.ly’ file.\\n\\n    <c, e>1\\\\glissando g' |\\n    <c, e>1\\\\glissando |\\n    <g' b> |\\n    \\\\break\\n    \\\\set glissandoMap = #'((0 . 1) (1 . 0))\\n    <c, g'>1\\\\glissando |\\n    <d a'> |\\n    \\\\set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))\\n    c1\\\\glissando |\\n    <d f a> |\\n    \\\\set glissandoMap = #'((2 . 0) (1 . 0) (0 . 1))\\n    <f d a'>1\\\\glissando |\\n    <c c'> |\\n\\nDifferent styles of glissandi can be created. For details, see Line styles.\"\n  },\n  {\n    \"label\": \"\\\\grace\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"Grace notes are musical ornaments, printed in a smaller font, that take up no additional logical time in a measure.\\n\\n    c4 \\\\grace b16 a4(\\n    \\\\grace { b16 c16 } a2)\\n\\nThere are three other types of grace notes possible; the acciaccatura – an unmeasured grace note indicated by a slurred note with a slashed stem – and the appoggiatura, which takes a fixed fraction of the main note it is attached to and prints without the slash. It is also possible to write a grace note with a slashed stem, like the acciaccatura but without the slur, so as to place it between notes that are slurred themselves, using the \\\\slashedGrace function.\\n\\n    \\\\acciaccatura d8 c4\\n    \\\\appoggiatura e8 d4\\n    \\\\acciaccatura { g16 f } e2\\n    \\\\slashedGrace a,8 g4\\n    \\\\slashedGrace b16 a4(\\n    \\\\slashedGrace b8 a2)\\n\\nThe placement of grace notes is synchronized between different staves. In the following example, there are two sixteenth grace notes for every eighth grace note\\n\\n    <<\\n      \\\\new Staff { e2 \\\\grace { c16 d e f } e2 }\\n      \\\\new Staff { c2 \\\\grace { g8 b } c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\halfopen\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\halign\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Horizontal alignment may be fine-tuned using a numeric value:\\n\\n    a1-\\\\markup { \\\\halign #-1 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #0 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #0.5 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #2 poco }\\n\\nSome objects may have alignment procedures of their own, and therefore are not affected by these commands. It is possible to move such markup objects as a whole, as shown for instance in Text marks.\"\n  },\n  {\n    \"label\": \"\\\\halign\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Set horizontal alignment. If dir is -1, then it is left-aligned, while +1 is right. Values in between interpolate alignment accordingly.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        \\\\halign #LEFT\\n        two\\n        three\\n        \\\\null\\n        one\\n        \\\\halign #CENTER\\n        two\\n        three\\n        \\\\null\\n        one\\n        \\\\halign #RIGHT\\n        two\\n        three\\n        \\\\null\\n        one\\n        \\\\halign #-5\\n        two\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\harmonic\",\n    \"detail\": \"Harmonics\",\n    \"documentation\": \"Natural harmonics\"\n  },\n  {\n    \"label\": \"\\\\harmonic\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Harmonic indications can be added to tablature notation as sounding pitches:\\n\\n    \\\\layout { \\\\omit Voice.StringNumber }\\n    firstHarmonic = {\\n      d'4\\\\4\\\\harmonic\\n      g'4\\\\3\\\\harmonic\\n      b'2\\\\2\\\\harmonic\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\firstHarmonic\\n        }\\n        \\\\new TabStaff { \\\\firstHarmonic }\\n      >>\\n    }\\n\\nNote that the command \\\\harmonic must always be attached to single notes (possibly inside of a chord) instead of whole chords. It only makes sense for open-string harmonics in the 12th fret. All other harmonics should be calculated by LilyPond. This can be achieved by indicating the fret where a finger of the fretting hand should touch a string.\\n\\n    fretHarmonics = {\\n      \\\\harmonicByFret #5 d16\\\\4\\n      \\\\harmonicByFret #4 d16\\\\4\\n      \\\\harmonicByFret #3 d8\\\\4\\n      \\\\harmonicByFret #5 <g\\\\3 b\\\\2>2.\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\fretHarmonics\\n        }\\n        \\\\new TabStaff { \\\\fretHarmonics }\\n      >>\\n    }\\n\\nAlternatively, harmonics can be computed by defining the ratio of string lengths above and below the harmonic fingering.\\n\\n    ratioHarmonics = {\\n      \\\\harmonicByRatio #1/2 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/3 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/4 { g8\\\\3 b8\\\\2 e'4\\\\1 }\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\ratioHarmonics\\n        }\\n        \\\\new TabStaff { \\\\ratioHarmonics }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\harmonicByFret\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Harmonic indications can be added to tablature notation as sounding pitches:\\n\\n    \\\\layout { \\\\omit Voice.StringNumber }\\n    firstHarmonic = {\\n      d'4\\\\4\\\\harmonic\\n      g'4\\\\3\\\\harmonic\\n      b'2\\\\2\\\\harmonic\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\firstHarmonic\\n        }\\n        \\\\new TabStaff { \\\\firstHarmonic }\\n      >>\\n    }\\n\\nNote that the command \\\\harmonic must always be attached to single notes (possibly inside of a chord) instead of whole chords. It only makes sense for open-string harmonics in the 12th fret. All other harmonics should be calculated by LilyPond. This can be achieved by indicating the fret where a finger of the fretting hand should touch a string.\\n\\n    fretHarmonics = {\\n      \\\\harmonicByFret #5 d16\\\\4\\n      \\\\harmonicByFret #4 d16\\\\4\\n      \\\\harmonicByFret #3 d8\\\\4\\n      \\\\harmonicByFret #5 <g\\\\3 b\\\\2>2.\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\fretHarmonics\\n        }\\n        \\\\new TabStaff { \\\\fretHarmonics }\\n      >>\\n    }\\n\\nAlternatively, harmonics can be computed by defining the ratio of string lengths above and below the harmonic fingering.\\n\\n    ratioHarmonics = {\\n      \\\\harmonicByRatio #1/2 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/3 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/4 { g8\\\\3 b8\\\\2 e'4\\\\1 }\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\ratioHarmonics\\n        }\\n        \\\\new TabStaff { \\\\ratioHarmonics }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\harmonicByRatio\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Harmonic indications can be added to tablature notation as sounding pitches:\\n\\n    \\\\layout { \\\\omit Voice.StringNumber }\\n    firstHarmonic = {\\n      d'4\\\\4\\\\harmonic\\n      g'4\\\\3\\\\harmonic\\n      b'2\\\\2\\\\harmonic\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\firstHarmonic\\n        }\\n        \\\\new TabStaff { \\\\firstHarmonic }\\n      >>\\n    }\\n\\nNote that the command \\\\harmonic must always be attached to single notes (possibly inside of a chord) instead of whole chords. It only makes sense for open-string harmonics in the 12th fret. All other harmonics should be calculated by LilyPond. This can be achieved by indicating the fret where a finger of the fretting hand should touch a string.\\n\\n    fretHarmonics = {\\n      \\\\harmonicByFret #5 d16\\\\4\\n      \\\\harmonicByFret #4 d16\\\\4\\n      \\\\harmonicByFret #3 d8\\\\4\\n      \\\\harmonicByFret #5 <g\\\\3 b\\\\2>2.\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\fretHarmonics\\n        }\\n        \\\\new TabStaff { \\\\fretHarmonics }\\n      >>\\n    }\\n\\nAlternatively, harmonics can be computed by defining the ratio of string lengths above and below the harmonic fingering.\\n\\n    ratioHarmonics = {\\n      \\\\harmonicByRatio #1/2 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/3 <g\\\\3 b\\\\2 e'\\\\1>4\\n      \\\\harmonicByRatio #1/4 { g8\\\\3 b8\\\\2 e'4\\\\1 }\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\ratioHarmonics\\n        }\\n        \\\\new TabStaff { \\\\ratioHarmonics }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\harmonicsOff\",\n    \"detail\": \"Harmonics\",\n    \"documentation\": \"Natural harmonics can be notated in several ways. A diamond-shaped note head generally means to touch the string where you would stop the note if it were not a diamond.\\n\\n    d4 e4.\\n    \\\\harmonicsOn\\n    d8 e e\\n    d4 e4.\\n    \\\\harmonicsOff\\n    d8 e e\\n\\nAlternatively a normal note head is shown at the pitch to be sounded together with a small circle to indicate it should be played as a harmonic:\\n\\n    d2^\\\\flageolet d_\\\\flageolet\\n\\nA smaller circle may be created, see the snippet list in References for unfretted strings.\\n\\nArtificial harmonics\"\n  },\n  {\n    \"label\": \"\\\\harmonicsOn\",\n    \"detail\": \"Harmonics\",\n    \"documentation\": \"Natural harmonics can be notated in several ways. A diamond-shaped note head generally means to touch the string where you would stop the note if it were not a diamond.\\n\\n    d4 e4.\\n    \\\\harmonicsOn\\n    d8 e e\\n    d4 e4.\\n    \\\\harmonicsOff\\n    d8 e e\\n\\nAlternatively a normal note head is shown at the pitch to be sounded together with a small circle to indicate it should be played as a harmonic:\\n\\n    d2^\\\\flageolet d_\\\\flageolet\\n\\nA smaller circle may be created, see the snippet list in References for unfretted strings.\\n\\nArtificial harmonics\"\n  },\n  {\n    \"label\": \"\\\\harp-pedal\",\n    \"detail\": \"A.10.5 Instrument Specific Markup\",\n    \"documentation\": \"Make a harp pedal diagram.\\n\\nPossible elements in definition-string:\\n\\n^\\npedal is up\\n\\n-\\npedal is neutral\\n\\nv\\npedal is down\\n\\n|\\nvertical divider line\\n\\no\\nthe following pedal should be circled (indicating a change)\\n\\n\\n\\nThe function also checks if the string has the typical form of three pedals, then the divider and then the remaining four pedals. If not it prints out a warning. However, in any case, it will also print each symbol in the order as given. This means you can place the divider (even multiple dividers) anywhere you want, but you’ll have to live with the warnings.\\n\\nThe appearance of the diagram can be tweaked inter alia using the size property of the TextScript grob (\\\\override Voice.TextScript #'size = #0.3) for the overall, the thickness property (\\\\override Voice.TextScript #'thickness = #3) for the line thickness of the horizontal line and the divider. The remaining configuration (box sizes, offsets and spaces) is done by the harp-pedal-details list of properties (\\\\override Voice.TextScript #'harp-pedal-details #'box-width = #1). It contains the following settings: box-offset (vertical shift of the box center for up/down pedals), box-width, box-height, space-before-divider (the spacing between two boxes before the divider) and space-after-divider (box spacing after the divider).\\n\\n    \\\\markup \\\\harp-pedal #\\\"^-v|--ov^\\\"\\n\\nUsed properties:\\n\\n - thickness (0.5)\\n - harp-pedal-details (’())\\n - size (1.2)\"\n  },\n  {\n    \"label\": \"\\\\hbracket\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\hbracket\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw horizontal brackets around arg.\\n\\n    \\\\markup {\\n      \\\\hbracket {\\n        \\\\line {\\n          one two three\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\hcenter-in\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Center arg horizontally within a box of extending length/2 to the left and right.\\n\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\set Staff.instrumentName = \\\\markup {\\n          \\\\hcenter-in #12\\n          Oboe\\n        }\\n        c''1\\n      }\\n      \\\\new Staff {\\n        \\\\set Staff.instrumentName = \\\\markup {\\n          \\\\hcenter-in #12\\n          Bassoon\\n        }\\n        \\\\clef tenor\\n        c'1\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\header\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\hide\",\n    \"detail\": \"Making objects transparent\",\n    \"documentation\": \"Every layout object has a transparent property which by default is set to #f. If set to #t the object still occupies space but is made invisible.\\n\\n    a4 a\\n    \\\\once \\\\override NoteHead.transparent = ##t\\n    a a\\n\\nThis rather common operation has a shortcut \\\\hide:\\n\\n    a4 a\\n    \\\\once \\\\hide NoteHead\\n    a a\"\n  },\n  {\n    \"label\": \"\\\\hideKeySignature\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\hideNotes\",\n    \"detail\": \"Hidden notes\",\n    \"documentation\": \"Hidden (or invisible or transparent) notes can be useful in preparing theory or composition exercises.\\n\\n    c4 d\\n    \\\\hideNotes\\n    e4 f\\n    \\\\unHideNotes\\n    g a\\n    \\\\hideNotes\\n    b\\n    \\\\unHideNotes\\n    c\\n\\nNote heads, stems, and flags, and rests are invisible. Beams are invisible if they start on a hidden note. Objects that are attached to invisible notes are still visible.\\n\\n    e8(\\\\p f g a)--\\n    \\\\hideNotes\\n    e8(\\\\p f g a)--\"\n  },\n  {\n    \"label\": \"\\\\hideSplitTiedTabNotes\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"The command \\\\hideSplitTiedTabNotes cancels the behavior of engraving fret numbers in parentheses:\\n\\n    ties = \\\\relative c' {\\n      \\\\repeat volta 2 {\\n        e2. f4~\\n        f2 g2~ }\\n      \\\\alternative {\\n        { g4 f2. }\\n        { g4\\\\repeatTie c,2. }\\n      }\\n      b1~\\n      \\\\break\\n      b1\\n      \\\\bar \\\"|.\\\"\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new StaffGroup  <<\\n          \\\\new Staff {\\n            \\\\clef \\\"treble_8\\\"\\n            \\\\ties\\n          }\\n          \\\\new TabStaff {\\n          \\\\hideSplitTiedTabNotes\\n            \\\\ties\\n          }\\n        >>\\n      >>\\n      \\\\layout {\\n      indent = #0\\n      ragged-right = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\hideStaffSwitch\",\n    \"detail\": \"Staff-change lines\",\n    \"documentation\": \"Whenever a voice switches to another staff, a line connecting the notes can be printed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"one\\\" {\\n        \\\\showStaffSwitch\\n        c1\\n        \\\\change Staff = \\\"two\\\"\\n        b2 a\\n      }\\n      \\\\new Staff = \\\"two\\\" {\\n        \\\\clef bass\\n        s1*2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\hspace\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Create an invisible object taking up horizontal space amount.\\n\\n    \\\\markup {\\n      one\\n      \\\\hspace #2\\n      two\\n      \\\\hspace #8\\n      three\\n    }\"\n  },\n  {\n    \"label\": \"\\\\huge\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\huge\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\huge\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to +2.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\huge\\n      huge\\n    }\"\n  },\n  {\n    \"label\": \"\\\\improvisationOff\",\n    \"detail\": \"Improvisation\",\n    \"documentation\": \"Improvisation is sometimes denoted with slashed note heads, where the performer may choose any pitch but should play the specified rhythm. Such note heads can be created:\\n\\n    \\\\new Voice \\\\with {\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n    } {\\n      e8 e g a a16( bes) a8 g\\n      \\\\improvisationOn\\n      e8 ~\\n      e2 ~ e8 f4 f8 ~\\n      f2\\n      \\\\improvisationOff\\n      a16( bes) a8 g e\\n    }\"\n  },\n  {\n    \"label\": \"\\\\improvisationOff\",\n    \"detail\": \"Showing melody rhythms\",\n    \"documentation\": \"Guitar chord charts often show the strumming rhythms. This can be done with the Pitch_squash_engraver and \\\\improvisationOn.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 f g c\\n        }\\n      }\\n      \\\\new Voice \\\\with {\\n        \\\\consists \\\"Pitch_squash_engraver\\\"\\n      } \\\\relative c'' {\\n        \\\\improvisationOn\\n        c4 c8 c c4 c8 c\\n        f4 f8 f f4 f8 f\\n        g4 g8 g g4 g8 g\\n        c4 c8 c c4 c8 c\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\improvisationOn\",\n    \"detail\": \"Improvisation\",\n    \"documentation\": \"Improvisation is sometimes denoted with slashed note heads, where the performer may choose any pitch but should play the specified rhythm. Such note heads can be created:\\n\\n    \\\\new Voice \\\\with {\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n    } {\\n      e8 e g a a16( bes) a8 g\\n      \\\\improvisationOn\\n      e8 ~\\n      e2 ~ e8 f4 f8 ~\\n      f2\\n      \\\\improvisationOff\\n      a16( bes) a8 g e\\n    }\"\n  },\n  {\n    \"label\": \"\\\\improvisationOn\",\n    \"detail\": \"Showing melody rhythms\",\n    \"documentation\": \"Guitar chord charts often show the strumming rhythms. This can be done with the Pitch_squash_engraver and \\\\improvisationOn.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 f g c\\n        }\\n      }\\n      \\\\new Voice \\\\with {\\n        \\\\consists \\\"Pitch_squash_engraver\\\"\\n      } \\\\relative c'' {\\n        \\\\improvisationOn\\n        c4 c8 c c4 c8 c\\n        f4 f8 f f4 f8 f\\n        g4 g8 g g4 g8 g\\n        c4 c8 c c4 c8 c\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\in\",\n    \"detail\": \"5.4.3 Distances and measurements\",\n    \"documentation\": \"Distances in LilyPond are of two types: absolute and scaled.\\n\\nAbsolute distances are used for specifying margins, indents, and other page layout details, and are by default specified in millimeters. Distances may be specified in other units by following the quantity by \\\\mm, \\\\cm, \\\\in (inches), or \\\\pt (points, 1/72.27 of an inch). Page layout distances can also be specified in scalable units (see the following paragraph) by appending \\\\staff-space to the quantity. Page layout is described in detail in Page layout.\\n\\nScaled distances are always specified in units of the staff-space or, rarely, the half staff-space. The staff-space is the distance between two adjacent staff lines. The default value can be changed globally by setting the global staff size, or it can be overridden locally by changing the staff-space property of StaffSymbol. Scaled distances automatically scale with any change to the either the global staff size or the staff-space property of StaffSymbol, but fonts scale automatically only with changes to the global staff size. The global staff size thus enables the overall size of a rendered score to be easily varied. For the methods of setting the global staff size see Setting the staff size.\"\n  },\n  {\n    \"label\": \"\\\\inclinatum\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\inclinatum\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\include\",\n    \"detail\": \"3.3.1 Including LilyPond files\",\n    \"documentation\": \"A large project may be split up into separate files. To refer to another file, use\\n\\n    \\\\include \\\"otherfile.ly\\\"\\n\\nThe line \\\\include \\\"otherfile.ly\\\" is equivalent to pasting the contents of ‘otherfile.ly’ into the current file at the place where the \\\\include appears. For example, in a large project you might write separate files for each instrument part and create a “full score” file which brings together the individual instrument files. Normally the included file will define a number of variables which then become available for use in the full score file. Tagged sections can be marked in included files to assist in making them usable in different places in a score, see Different editions from one source.\\n\\nFiles in the current working directory may be referenced by specifying just the file name after the \\\\include command. Files in other locations may be included by giving either a full path reference or a relative path reference (but use the UNIX forward slash, /, rather than the DOS/Windows back slash, \\\\, as the directory separator.) For example, if ‘stuff.ly’ is located one directory higher than the current working directory, use\\n\\n    \\\\include \\\"../stuff.ly\\\"\\n\\nor if the included orchestral parts files are all located in a subdirectory called ‘parts’ within the current directory, use\\n\\n    \\\\include \\\"parts/VI.ly\\\"\\n    \\\\include \\\"parts/VII.ly\\\"\\n    … etc\\n\\nFiles which are to be included can also contain \\\\include statements of their own. By default, these second-level \\\\include statements are not interpreted until they have been brought into the main file, so the file names they specify must all be relative to the directory containing the main file, not the directory containing the included file. However, this behavior can be changed globally by passing the option ‘-drelative-includes’ option at the command line (or by adding #(ly:set-option 'relative-includes #t) at the top of the main input file).\\n\\nWhen relative-includes is set to #t, the path for each \\\\include command will be taken relative to the file containing that command. This behavior is recommended and it will become the default behavior in a future version of lilypond.\\n\\nFiles relative to the main directory and files relative to some other directory may both be \\\\included by setting relative-includes to #t or #f at appropriate places in the files. For example, if a general library, libA, has been created which itself uses sub-files which are \\\\included by the entry file of that library, those \\\\include statements will need to be preceded by #(ly:set-option #relative-includes #t) so they are interpreted correctly when brought into the main .ly file, like this:\\n\\n    libA/\\n      libA.ly\\n      A1.ly\\n      A2.ly\\n      …\\n\\nthen the entry file, libA.ly, will contain\\n\\n    #(ly:set-option 'relative-includes #t)\\n    \\\\include \\\"A1.ly\\\"\\n    \\\\include \\\"A2.ly\\\"\\n    …\\n    % return to default setting\\n    #(ly:set-option 'relative-includes #f)\\n\\nAny ‘.ly’ file can then include the entire library simply with\\n\\n    \\\\include \\\"~/libA/libA.ly\\\"\\n\\nMore complex file structures may be devised by switching at appropriate places.\\n\\nFiles can also be included from a directory in a search path specified as an option when invoking LilyPond from the command line. The included files are then specified using just their file name. For example, to compile ‘main.ly’ which includes files located in a subdirectory called ‘parts’ by this method, cd to the directory containing ‘main.ly’ and enter\\n\\n    lilypond --include=parts main.ly\\n\\nand in main.ly write\\n\\n    \\\\include \\\"VI.ly\\\"\\n    \\\\include \\\"VII.ly\\\"\\n    … etc\\n\\nFiles which are to be included in many scores may be placed in the LilyPond directory ‘../ly’. (The location of this directory is installation-dependent - see Other sources of information). These files can then be included simply by naming them on an \\\\include statement. This is how the language-dependent files like ‘english.ly’ are included.\\n\\nLilyPond includes a number of files by default when you start the program. These includes are not apparent to the user, but the files may be identified by running lilypond --verbose from the command line. This will display a list of paths and files that LilyPond uses, along with much other information. Alternatively, the more important of these files are discussed in Other sources of information. These files may be edited, but changes to them will be lost on installing a new version of LilyPond.\\n\\nSome simple examples of using \\\\include are shown in Scores and parts.\"\n  },\n  {\n    \"label\": \"\\\\inStaffSegno\",\n    \"detail\": \"Normal repeats\",\n    \"documentation\": \"The \\\\inStaffSegno command can be used to generate a composite bar line incorporating the segno symbol with the appropriate repeat bar line when used with the \\\\repeat volta command. The correct type of repeat bar line, viz. start repeat, end repeat or double repeat, is selected automatically. Note that the corresponding “D.S.” mark must be added manually.\\n\\nAway from a repeat:\\n\\n    e1\\n    \\\\inStaffSegno\\n    f2 g a b\\n    c1_\\\"D.S.\\\" \\\\bar \\\"|.\\\"\\n\\nAt the start of a repeat:\\n\\n    e1\\n    \\\\repeat volta 2 {\\n      \\\\inStaffSegno  % start repeat\\n      f2 g a b\\n    }\\n    c1_\\\"D.S.\\\" \\\\bar \\\"|.\\\"\\n\\nAt the end of a repeat:\\n\\n    e1\\n    \\\\repeat volta 2 {\\n      f2 g a b\\n      \\\\inStaffSegno  % end repeat\\n    }\\n    f2 g a b\\n    c1_\\\"D.S.\\\" \\\\bar \\\"|.\\\"\\n\\nBetween two repeats:\\n\\n    e1\\n    \\\\repeat volta 2 {\\n      f2 g a b\\n    }\\n    \\\\inStaffSegno  % double repeat\\n    \\\\repeat volta 2 {\\n      f2 g a b\\n    }\\n    c1_\\\"D.S.\\\" \\\\bar \\\"|.\\\"\\n\\nAlternative bar line symbols can be obtained by setting (in the Score context) the properties segnoType, startRepeatSegnoType, endRepeatSegnoType or doubleRepeatSegnoType to the required bar line type. The alternative bar line types must be selected from the pre-defined types or types previously defined with the \\\\defineBarLine command (see Bar lines).\\n\\n    \\\\defineBarLine \\\":|.S[\\\" #'(\\\":|.\\\" \\\"S[\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"]\\\" #'(\\\"]\\\" \\\"\\\" \\\"\\\")\\n    e1\\n    \\\\repeat volta 2 {\\n      f2 g a b\\n      \\\\once \\\\set Score.endRepeatSegnoType = \\\":|.S[\\\"\\n      \\\\inStaffSegno\\n    }\\n    f2 g \\\\bar \\\"]\\\" a b\\n    c1_\\\"D.S.\\\" \\\\bar \\\"|.\\\"\"\n  },\n  {\n    \"label\": \"\\\\instrumentSwitch\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"If an instrument switch is needed, \\\\addInstrumentDefinition may be used in combination with \\\\instrumentSwitch to create a detailed list of the necessary changes for the switch. The \\\\addInstrumentDefinition command has two arguments: an identifying string, and an association list of context properties and values to be used for the instrument. It must be placed in the toplevel scope. \\\\instrumentSwitch is used in the music expression to declare the instrument switch:\\n\\n    \\\\addInstrumentDefinition #\\\"contrabassoon\\\"\\n      #`((instrumentTransposition . ,(ly:make-pitch -1 0 0))\\n         (shortInstrumentName . \\\"Cbsn.\\\")\\n         (clefGlyph . \\\"clefs.F\\\")\\n         (middleCPosition . 6)\\n         (clefPosition . 2)\\n         (instrumentCueName . ,(make-bold-markup \\\"cbsn.\\\"))\\n         (midiInstrument . \\\"bassoon\\\"))\\n    \\\\new Staff \\\\with {\\n      instrumentName = #\\\"Bassoon\\\"\\n    }\\n    \\\\relative c' {\\n      \\\\clef tenor\\n      \\\\compressFullBarRests\\n      c2 g'\\n      R1*16\\n      \\\\instrumentSwitch \\\"contrabassoon\\\"\\n      c,,2 g \\\\break\\n      c,1 ~ | c1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\inversion\",\n    \"detail\": \"Inversion\",\n    \"documentation\": \"A music expression can be inverted and transposed in a single operation with:\\n\\n    \\\\inversion around-pitch to-pitch musicexpr\\n\\nThe musicexpr is inverted interval-by-interval around around-pitch, and then transposed so that around-pitch is mapped to to-pitch.\\n\\n    music = \\\\relative c' { c d e f }\\n    \\\\new Staff {\\n      \\\\music\\n      \\\\inversion d' d' \\\\music\\n      \\\\inversion d' ees' \\\\music\\n    }\\n\\nNote: Motifs to be inverted should be expressed in absolute form or be first converted to absolute form by enclosing them in a relative block.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\ionian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\italianChords\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\italic\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\italic\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Use italic font-shape for arg.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\italic\\n      italic\\n    }\"\n  },\n  {\n    \"label\": \"\\\\justified-lines\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"\\\\justified-lines\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Like \\\\justify, but return a list of lines instead of a single markup. Use \\\\override-lines #'(line-width . X) to set the line width; X is the number of staff spaces.\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width (#f)\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\justify\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Long text indications can also be automatically wrapped accordingly to the given line width. These will be either left-aligned or justified, as shown in the following example.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line  \\\\smallCaps { La vida breve }\\n        \\\\line \\\\bold { Acto I }\\n        \\\\wordwrap \\\\italic {\\n          (La escena representa el corral de una casa de\\n          gitanos en el Albaicín de Granada.  Al fondo una\\n          puerta por la que se ve el negro interior de\\n          una Fragua, iluminado por los rojos resplandores\\n          del fuego.)\\n        }\\n        \\\\hspace #0\\n        \\\\line \\\\bold { Acto II }\\n        \\\\override #'(line-width . 50)\\n        \\\\justify \\\\italic {\\n          (Calle de Granada.  Fachada de la casa de Carmela\\n          y su hermano Manuel con grandes ventanas abiertas\\n          a través de las que se ve el patio\\n          donde se celebra una alegre fiesta)\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\justify\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Like \\\\wordwrap, but with lines stretched to justify the margins. Use \\\\override #'(line-width . X) to set the line width; X is the number of staff spaces.\\n\\n    \\\\markup {\\n      \\\\justify {\\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\\n        do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n        laboris nisi ut aliquip ex ea commodo consequat.\\n      }\\n    }\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width (#f)\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\justify-field\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Justify the data which has been assigned to symbol.\\n\\n    \\\\header {\\n      title = \\\"My title\\\"\\n      myText = \\\"Lorem ipsum dolor sit amet, consectetur adipisicing\\n        elit, sed do eiusmod tempor incididunt ut labore et dolore magna\\n        aliqua.  Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n        laboris nisi ut aliquip ex ea commodo consequat.\\\"\\n    }\\n    \\\\paper {\\n      bookTitleMarkup = \\\\markup {\\n        \\\\column {\\n          \\\\fill-line { \\\\fromproperty #'header:title }\\n          \\\\null\\n          \\\\justify-field #'header:myText\\n        }\\n      }\\n    }\\n    \\\\markup {\\n      \\\\null\\n    }\"\n  },\n  {\n    \"label\": \"\\\\justify-string\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Justify a string. Paragraphs may be separated with double newlines\\n\\n    \\\\markup {\\n      \\\\override #'(line-width . 40)\\n      \\\\justify-string #\\\"Lorem ipsum dolor sit amet, consectetur\\n          adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n          et dolore magna aliqua.\\n          Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n          laboris nisi ut aliquip ex ea commodo consequat.\\n          Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n          qui officia deserunt mollit anim id est laborum\\\"\\n    }\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\keepWithTag\",\n    \"detail\": \"Using tags\",\n    \"documentation\": \"The \\\\tag #'partA command marks a music expression with the name partA. Expressions tagged in this way can be selected or filtered out by name later, using either \\\\keepWithTag #'name or \\\\removeWithTag #'name. The result of applying these filters to tagged music is as follows:\\n\\nFilter\\tResult\\nTagged music preceded by \\\\keepWithTag #'name or \\\\keepWithTag #'(name1 name2…)\\tUntagged music and music tagged with any of the given tag names is included; music tagged with any other tag name is excluded.\\nTagged music preceded by \\\\removeWithTag #'name or \\\\removeWithTag #'(name1 name2…)\\tUntagged music and music not tagged with any of the given tag names is included; music tagged with any of the given tag names is excluded.\\nTagged music not preceded by either \\\\keepWithTag or \\\\removeWithTag\\tAll tagged and untagged music is included.\\n\\n\\nThe arguments of the \\\\tag, \\\\keepWithTag and \\\\removeWithTag commands should be a symbol (such as #'score or #'part), followed by a music expression.\\n\\nIn the following example, we see two versions of a piece of music, one showing trills with the usual notation, and one with trills explicitly expanded:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand { \\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\keepWithTag #'trills \\\\music\\n    }\\n    \\\\score {\\n      \\\\keepWithTag #'expand \\\\music\\n    }\\n\\nAlternatively, it is sometimes easier to exclude sections of music:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand {\\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\removeWithTag #'expand\\n      \\\\music\\n    }\\n    \\\\score {\\n      \\\\removeWithTag #'trills\\n      \\\\music\\n    }\\n\\nTagged filtering can be applied to articulations, texts, etc. by prepending\\n\\n    -\\\\tag #'your-tag\\n\\nto an articulation. For example, this would define a note with a conditional fingering indication and a note with a conditional annotation:\\n\\n    c1-\\\\tag #'finger ^4\\n    c1-\\\\tag #'warn ^\\\"Watch!\\\"\\n\\nMultiple tags may be placed on expressions with multiple \\\\tag entries, or by combining multiple tags into one symbol list:\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'a \\\\tag #'both { a4 a a a }\\n      \\\\tag #'(b both) { b4 b b b }\\n    }\\n    <<\\n    \\\\keepWithTag #'a \\\\music\\n    \\\\keepWithTag #'b \\\\music\\n    \\\\keepWithTag #'both \\\\music\\n    >>\\n\\nMultiple \\\\removeWithTag filters may be applied to a single music expression to remove several differently named tagged sections. Alternatively, you can use a single \\\\removeWithTag with a list of tags.\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'A { a4 a a a }\\n      \\\\tag #'B { b4 b b b }\\n      \\\\tag #'C { c4 c c c }\\n      \\\\tag #'D { d4 d d d }\\n    }\\n    \\\\new Voice {\\n      \\\\removeWithTag #'B\\n      \\\\removeWithTag #'C\\n      \\\\music\\n      \\\\removeWithTag #'(B C)\\n      \\\\music\\n    }\\n\\nTwo or more \\\\keepWithTag filters applied to a single music expression will cause all tagged sections to be removed, as the first filter will remove all tagged sections except the one named, and the second filter will remove even that tagged section. Usually you would rather want to use a single \\\\keepWithTag command with a list of multiple tags: this will only remove tagged sections not given in any of the tags.\\n\\nSometimes you want to splice some music at a particular place in an existing music expression. You can use \\\\pushToTag and \\\\appendToTag for adding material at the front or end of the elements of an existing music construct. Not every music construct has elements, but sequential and simultaneous music are safe bets:\\n\\n    test = { \\\\tag #'here { \\\\tag #'here <<c''>> } }\\n    {\\n      \\\\pushToTag #'here c'\\n      \\\\pushToTag #'here e'\\n      \\\\pushToTag #'here g' \\\\test\\n      \\\\appendToTag #'here c'\\n      \\\\appendToTag #'here e'\\n      \\\\appendToTag #'here g' \\\\test\\n    }\\n\\nBoth commands get a tag, the material to splice in at every occurence of the tag, and the tagged expression. The commands make sure to copy everything that they change so that the original \\\\test retains its meaning.\"\n  },\n  {\n    \"label\": \"\\\\key\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"The key signature indicates the tonality in which a piece is played. It is denoted by a set of alterations (flats or sharps) at the start of the staff. The key signature may be altered:\\n\\n    \\\\key pitch mode\"\n  },\n  {\n    \"label\": \"\\\\key\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\killCues\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The \\\\killCues command removes cue notes from a music expression, so the same music expression can be used to produce the instrument part with cues and the score. The \\\\killCues command removes only the notes and events that were quoted by \\\\cueDuring. Other markup associated with cues, such as clef changes and a label identifying the source instrument, can be tagged for selective inclusion in the score; see Using tags.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\tag #'part {\\n        \\\\clef treble\\n        \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\tag #'part \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\fluteNotes\\n      }\\n      \\\\new Staff {\\n        \\\\removeWithTag #'part { \\\\killCues { \\\\bassoonNotes } }\\n      }\\n    >>\\n\\nAlternatively, Clef changes and instrument labels can be collected into an instrument definition for repeated use, using \\\\addInstrumentDefinition described in Instrument names.\"\n  },\n  {\n    \"label\": \"\\\\label\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\label, \\\\page-ref.\"\n  },\n  {\n    \"label\": \"\\\\laissezVibrer\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"L.v. ties (laissez vibrer) indicate that notes must not be damped at the end. It is used in notation for piano, harp and other string and percussion instruments. They can be entered as follows:\\n\\n    <c f g>1\\\\laissezVibrer\"\n  },\n  {\n    \"label\": \"\\\\large\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\large\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\large\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to +1.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\large\\n      large\\n    }\"\n  },\n  {\n    \"label\": \"\\\\larger\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\larger\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\larger\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Increase the font size relative to the current setting.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\larger\\n      larger\\n    }\"\n  },\n  {\n    \"label\": \"\\\\layout\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\layout\",\n    \"detail\": \"4.2.1 The \\\\layout block\",\n    \"documentation\": \"While the \\\\paper block contains settings that relate to the page formatting of the whole document, the \\\\layout block contains settings for score-specific layout. To set score layout options globally, enter them in a toplevel \\\\layout block. To set layout options for an individual score, enter them in a \\\\layout block inside the \\\\score block, after the music. Settings that can appear in a \\\\layout block include:\\n\\n - the layout-set-staff-size scheme function,\\n - context modifications in \\\\context blocks, and\\n - \\\\paper variables that affect score layout.\\n\\nThe layout-set-staff-size function is discussed in the next section, Setting the staff size. Context modifications are discussed in a separate chapter; see Modifying context plug-ins and Changing context default settings. The \\\\paper variables that can appear in a \\\\layout block are:\\n\\n - line-width, ragged-right and ragged-last (see \\\\paper variables for widths and margins)\\n - indent and short-indent (see \\\\paper variables for shifts and indents)\\n - system-count (see \\\\paper variables for line breaking)\\n\\nHere is an example \\\\layout block:\\n\\n    \\\\layout {\\n      indent = 2\\\\cm\\n      \\\\context {\\n        \\\\StaffGroup\\n        \\\\override StaffGrouper.staff-staff-spacing.basic-distance = #8\\n      }\\n      \\\\context {\\n        \\\\Voice\\n        \\\\override TextScript.padding = #1\\n        \\\\override Glissando.thickness = #3\\n      }\\n    }\\n\\nMultiple \\\\layout blocks can be entered as toplevel expressions. This can, for example, be useful if different settings are stored in separate files and included optionally. Internally, when a \\\\layout block is evaluated, a copy of the current \\\\layout configuration is made, then any changes defined within the block are applied and the result is saved as the new current configuration. From the user’s perspective the \\\\layout blocks are combined, but in conflicting situations (when the same property is changed in different blocks) the later definitions take precedence.\\n\\nFor example, if this block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\override TextScript.color = #magenta\\n        \\\\override Glissando.thickness = #1.5\\n      }\\n    }\\n\\nis placed after the one from the preceding example the 'padding and 'color overrides for TextScript are combined, but the later 'thickness override for Glissando replaces (or hides) the earlier one.\\n\\n\\\\layout blocks may be assigned to variables for reuse later, but the way this works is slightly but significantly different from writing them literally.\\n\\nIf a variable is defined like this:\\n\\n    layoutVariable = \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\override NoteHead.font-size = #4\\n      }\\n    }\\n\\nit will hold the current \\\\layout configuration with the NoteHead.font-size override added, but this combination is not saved as the new current configuration. Be aware that the ‘current configuration’ is read when the variable is defined and not when it is used, so the content of the variable is dependent on its position in the source.\\n\\nThe variable can then be used inside another \\\\layout block, for example:\\n\\n    \\\\layout {\\n      \\\\layoutVariable\\n      \\\\context {\\n        \\\\Voice\\n        \\\\override NoteHead.color = #red\\n      }\\n    }\\n\\nA \\\\layout block containing a variable, as in the example above, does not copy the current configuration but instead uses the content of \\\\layoutVariable as the base configuration for the further additions. This means that any changes defined between the definition and the use of the variable are lost.\\n\\nIf layoutVariable is defined (or \\\\included) immediately before being used, its content is just the current configuration plus the overrides defined within it. So in the example above showing the use of \\\\layoutVariable the final \\\\layout block would consist of:\\n\\n      TextScript.padding = #1\\n      TextScript.color = #magenta\\n      Glissando.thickness = #1.5\\n      NoteHead.font-size = #4\\n      NoteHead.color = #red\\n\\nplus the indent and the StaffGrouper overrides.\\n\\nBut if the variable had already been defined before the first \\\\layout block the current configuration would now contain only\\n\\n      NoteHead.font-size = #4 % (written in the variable definition)\\n      NoteHead.color = #red % (added after the use of the variable)\\n\\nIf carefully planned, \\\\layout variables can be a valuable tool to structure the layout design of sources, and also to reset the \\\\layout configuration to a known state.\"\n  },\n  {\n    \"label\": \"\\\\layout\",\n    \"detail\": \"Output definitions - blueprints for contexts\",\n    \"documentation\": \"While music written in a file may refer to context types and names, contexts are created only when the music is actually being interpreted. LilyPond interprets music under control of an ‘output definition’ and may do so for several different output definitions, resulting in different output. The output definition relevant for printing music is specified using \\\\layout.\"\n  },\n  {\n    \"label\": \"\\\\layout\",\n    \"detail\": \"Changing all contexts of the same type\",\n    \"documentation\": \"The default context settings which are to be used for typesetting in Score, Staff, Voice and other contexts may be specified in a \\\\context block within any \\\\layout block.\\n\\nSettings for Midi output as opposed to typesetting will have to be separately specified in \\\\midi blocks (see Output definitions - blueprints for contexts).\\n\\nThe \\\\layout block should be placed within the \\\\score block to which it is to apply, after the music.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        [context settings for all Voice contexts]\\n      }\\n      \\\\context {\\n        \\\\Staff\\n        [context settings for all Staff contexts]\\n      }\\n    }\\n\\nThe following types of settings may be specified:\\n\\n - An \\\\override command, but with the context name omitted\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Thicker stems\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      \\\\override Stem.thickness = #4.0\\n    }\\n  }\\n}\\n \\n\\n\\n - Directly setting a context property\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Smaller font\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      fontSize = #-4\\n    }\\n  }\\n}\\n \\n\\n\\n - A predefined command such as \\\\dynamicUp or a music expression like \\\\accidentalStyle dodecaphonic\\n\\\\score {\\n  \\\\relative c'' {\\n    a4^\\\"Dynamics above\\\" a a a\\n    a4 a a\\\\ff a\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Voice\\n      \\\\dynamicUp\\n    }\\n    \\\\context {\\n      \\\\Staff\\n      \\\\accidentalStyle dodecaphonic\\n    }\\n  }\\n}\\n \\n\\n\\n - A user-defined variable containing a \\\\with block; for details of the \\\\with block see Changing just one specific context.\\nStaffDefaults = \\\\with {\\n  fontSize = #-4\\n}\\n\\n\\\\score {\\n  \\\\new Staff {\\n    \\\\relative c'' {\\n      a4^\\\"Smaller font\\\" a a a\\n      a4 a a a\\n    }\\n  }\\n  \\\\layout {\\n    \\\\context {\\n      \\\\Staff\\n      \\\\StaffDefaults\\n    }\\n  }\\n}\\n \\n\\n\\n\\nProperty-setting commands can be placed in a \\\\layout block without being enclosed in a \\\\context block. Such settings are equivalent to including the same property-setting commands at the start of every context of the type specified. If no context is specified every bottom-level context is affected, see Bottom-level contexts - voices. The syntax of a property-setting command in a \\\\layout block is the same as the same command written in the music stream.\\n\\n    \\\\score {\\n      \\\\new Staff {\\n        \\\\relative c'' {\\n          a4^\\\"Smaller font\\\" a a a\\n          a4 a a a\\n        }\\n      }\\n      \\\\layout {\\n        \\\\accidentalStyle dodecaphonic\\n        \\\\set fontSize = #-4\\n        \\\\override Voice.Stem.thickness = #4.0\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\left-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\left-align\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Align arg on its left edge.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        \\\\left-align\\n        two\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\left-brace\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"A feta brace in point size size.\\n\\n    \\\\markup {\\n      \\\\left-brace #35\\n      \\\\hspace #2\\n      \\\\left-brace #45\\n    }\"\n  },\n  {\n    \"label\": \"\\\\left-column\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put args in a left-aligned column.\\n\\n    \\\\markup {\\n      \\\\left-column {\\n        one\\n        two\\n        three\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\lheel\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\line\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put args in a horizontal line. The property word-space determines the space between markups in args.\\n\\n    \\\\markup {\\n      \\\\line {\\n        one two three\\n      }\\n    }\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\"\n  },\n  {\n    \"label\": \"\\\\linea\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\linea\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\lineprall\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\locrian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\longa\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\longa\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\longfermata\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\lookup\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Lookup a glyph by name.\\n\\n    \\\\markup {\\n      \\\\override #'(font-encoding . fetaBraces) {\\n        \\\\lookup #\\\"brace200\\\"\\n        \\\\hspace #2\\n        \\\\rotate #180\\n        \\\\lookup #\\\"brace180\\\"\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\lower\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\lower\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Lower arg by the distance amount. A negative amount indicates raising; see also \\\\raise.\\n\\n    \\\\markup {\\n      one\\n      \\\\lower #3\\n      two\\n      three\\n    }\"\n  },\n  {\n    \"label\": \"\\\\ltoe\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\lydian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\lyricmode\",\n    \"detail\": \"Entering lyrics\",\n    \"documentation\": \"Lyrics are entered in a special input mode, which can be introduced by the keyword \\\\lyricmode, or by using \\\\addlyrics or \\\\lyricsto. In this special input mode, the input d is not parsed as the pitch D, but rather as a one-letter syllable of text. In other words, syllables are entered like notes but with pitches replaced by text.\\n\\nFor example:\\n\\n    \\\\lyricmode { Three4 blind mice,2 three4 blind mice2 }\\n\\nThere are two main methods for specifying the horizontal placement of the syllables, either by specifying the duration of each syllable explicitly, as in the example above, or by leaving the lyrics to be aligned automatically to a melody or other voice of music, using \\\\addlyrics or \\\\lyricsto. The former method is described below in Manual syllable durations. The latter method is described in Automatic syllable durations.\\n\\nA word or syllable of lyrics begins with an alphabetic character (plus some other characters, see below) and is terminated by any white space or a digit. Later characters in the syllable can be any character that is not a digit or white space.\\n\\nBecause any character that is not a digit or white space is regarded as part of the syllable, a word is valid even if it ends with }, which often leads to the following mistake:\\n\\n    \\\\lyricmode { lah lah lah}\\n\\nIn this example, the } is included in the final syllable, so the opening brace is not balanced and the input file will probably not compile. Instead, braces should always be surrounded with white space:\\n\\n    \\\\lyricmode { lah lah lah }\\n\\nPunctuation, lyrics with accented characters, characters from non-English languages, or special characters (such as the heart symbol or slanted quotes), may simply be inserted directly into the input file, providing it is saved with UTF-8 encoding. For more information, see Special characters.\\n\\n    \\\\relative c'' { d8 c16 a bes8 f e' d c4 }\\n    \\\\addlyrics { „Schad’ um das schö -- ne grü -- ne Band, }\\n\\nNormal quotes may be used in lyrics, but they have to be preceded with a backslash character and the whole syllable has to be enclosed between additional quotes. For example,\\n\\n    \\\\relative c' { \\\\time 3/4 e4 e4. e8 d4 e d c2. }\\n    \\\\addlyrics { \\\"\\\\\\\"I\\\" am so lone -- \\\"ly,\\\\\\\"\\\" said she }\\n\\nThe full definition of a word start in lyrics mode is somewhat more complex. A word in lyrics mode is one that begins with an alphabetic character, _, ?, !, :, ', the control characters ^A through ^F, ^Q through ^W, ^Y, ^^, any 8-bit character with an ASCII code over 127, or a two-character combination of a backslash followed by one of `, ', \\\", or ^.\\n\\nGreat control over the appearance of lyrics comes from using \\\\markup inside the lyrics themselves. For explanation of many options, see Formatting text.\"\n  },\n  {\n    \"label\": \"\\\\lyricmode\",\n    \"detail\": \"Aligning lyrics to a melody\",\n    \"documentation\": \"Lyrics are printed by interpreting them in the context called Lyrics, see Contexts explained.\\n\\n    \\\\new Lyrics \\\\lyricmode { … }\\n\\nLyrics can be aligned with melodies in two main ways:\\n\\n - Lyrics can be aligned automatically, with the durations of the syllables being taken from another voice of music or (in special circumstances) an associated melody, using \\\\addlyrics, \\\\lyricsto, or by setting the associatedVoice property. For more details, see Automatic syllable durations.\\n<<\\n  \\\\new Staff <<\\n    \\\\time 2/4\\n    \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n      \\\\voiceOne\\n      c4 b8. a16 g4. r8 a4 ( b ) c2\\n    }\\n    \\\\new Voice = \\\"two\\\" \\\\relative c' {\\n      \\\\voiceTwo\\n       s2 s4. f8 e4 d c2\\n    }\\n  >>\\n\\n% takes durations and alignment from notes in \\\"one\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    Life is __ _ love, live __ life.\\n  }\\n\\n% takes durations and alignment from notes in \\\"one\\\" initially\\n% then switches to \\\"two\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    No more let\\n    \\\\set associatedVoice = \\\"two\\\"  % must be set one syllable early\\n    sins and sor -- rows grow.\\n  }\\n>>\\n \\n\\nThe first stanza shows the normal way of entering lyrics.\\n\\nThe second stanza shows how the voice from which the lyric durations are taken can be changed. This is useful if the words to different stanzas fit the notes in different ways and all the durations are available in Voice contexts. For more details, see Stanzas.\\n\\n\\n - Lyrics can be aligned independently of the duration of any notes if the durations of the syllables are specified explicitly, and entered with \\\\lyricmode.\\n<<\\n  \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n    \\\\time 2/4\\n    c4 b8. a16 g4. f8 e4 d c2\\n  }\\n\\n% uses previous explicit duration of 2;\\n  \\\\new Lyrics \\\\lyricmode {\\n    Joy to the earth!\\n  }\\n\\n% explicit durations, set to a different rhythm\\n  \\\\new Lyrics \\\\lyricmode {\\n    Life4 is love,2. live4 life.2\\n  }\\n>>\\n \\n\\nThe first stanza is not aligned with the notes because the durations were not specified, and the previous value of 2 is used for each word.\\n\\nThe second stanza shows how the words can be aligned quite independently from the notes. This is useful if the words to different stanzas fit the notes in different ways and the required durations are not available in a music context. For more details see Manual syllable durations. This technique is also useful when setting dialogue over music; for examples showing this, see Dialogue over music.\\n\\nWhen entered in this way the words are left-aligned to the notes by default, but may be center-aligned to the notes of a melody by specifying an associated voice, if one exists. For details, see Manual syllable durations.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\lyricsto\",\n    \"detail\": \"Aligning lyrics to a melody\",\n    \"documentation\": \"Lyrics are printed by interpreting them in the context called Lyrics, see Contexts explained.\\n\\n    \\\\new Lyrics \\\\lyricmode { … }\\n\\nLyrics can be aligned with melodies in two main ways:\\n\\n - Lyrics can be aligned automatically, with the durations of the syllables being taken from another voice of music or (in special circumstances) an associated melody, using \\\\addlyrics, \\\\lyricsto, or by setting the associatedVoice property. For more details, see Automatic syllable durations.\\n<<\\n  \\\\new Staff <<\\n    \\\\time 2/4\\n    \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n      \\\\voiceOne\\n      c4 b8. a16 g4. r8 a4 ( b ) c2\\n    }\\n    \\\\new Voice = \\\"two\\\" \\\\relative c' {\\n      \\\\voiceTwo\\n       s2 s4. f8 e4 d c2\\n    }\\n  >>\\n\\n% takes durations and alignment from notes in \\\"one\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    Life is __ _ love, live __ life.\\n  }\\n\\n% takes durations and alignment from notes in \\\"one\\\" initially\\n% then switches to \\\"two\\\"\\n  \\\\new Lyrics \\\\lyricsto \\\"one\\\" {\\n    No more let\\n    \\\\set associatedVoice = \\\"two\\\"  % must be set one syllable early\\n    sins and sor -- rows grow.\\n  }\\n>>\\n \\n\\nThe first stanza shows the normal way of entering lyrics.\\n\\nThe second stanza shows how the voice from which the lyric durations are taken can be changed. This is useful if the words to different stanzas fit the notes in different ways and all the durations are available in Voice contexts. For more details, see Stanzas.\\n\\n\\n - Lyrics can be aligned independently of the duration of any notes if the durations of the syllables are specified explicitly, and entered with \\\\lyricmode.\\n<<\\n  \\\\new Voice = \\\"one\\\" \\\\relative c'' {\\n    \\\\time 2/4\\n    c4 b8. a16 g4. f8 e4 d c2\\n  }\\n\\n% uses previous explicit duration of 2;\\n  \\\\new Lyrics \\\\lyricmode {\\n    Joy to the earth!\\n  }\\n\\n% explicit durations, set to a different rhythm\\n  \\\\new Lyrics \\\\lyricmode {\\n    Life4 is love,2. live4 life.2\\n  }\\n>>\\n \\n\\nThe first stanza is not aligned with the notes because the durations were not specified, and the previous value of 2 is used for each word.\\n\\nThe second stanza shows how the words can be aligned quite independently from the notes. This is useful if the words to different stanzas fit the notes in different ways and the required durations are not available in a music context. For more details see Manual syllable durations. This technique is also useful when setting dialogue over music; for examples showing this, see Dialogue over music.\\n\\nWhen entered in this way the words are left-aligned to the notes by default, but may be center-aligned to the notes of a melody by specifying an associated voice, if one exists. For details, see Manual syllable durations.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\lyricsto\",\n    \"detail\": \"Automatic syllable durations\",\n    \"documentation\": \"Lyrics can be automatically aligned to the notes of a melody in three ways:\\n\\n - by specifying the named Voice context containing the melody with \\\\lyricsto,\\n - by introducing the lyrics with \\\\addlyrics and placing them immediately after the Voice context containing the melody,\\n - by setting the associatedVoice property, the alignment of the lyrics may be switched to a different named Voice context at any musical moment.\\n\\nIn all three methods hyphens can be drawn between the syllables of a word and extender lines can be drawn beyond the end of a word. For details, see Extenders and hyphens.\\n\\nThe Voice context containing the melody to which the lyrics are being aligned must not have “died”, or the lyrics after that point will be lost. This can happen if there are periods when that voice has nothing to do. For methods of keeping contexts alive, see Keeping contexts alive.\"\n  },\n  {\n    \"label\": \"\\\\lyricsto\",\n    \"detail\": \"Using \\\\lyricsto\",\n    \"documentation\": \"Lyrics can be aligned under a melody automatically by specifying the named Voice context containing the melody with \\\\lyricsto:\\n\\n    <<\\n      \\\\new Voice = \\\"melody\\\" {\\n        a1 a4. a8 a2\\n      }\\n      \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n        These are the words\\n      }\\n    >>\\n\\nThis aligns the lyrics to the notes of the named Voice context, which must already exist. Therefore normally the Voice context is specified first, followed by the Lyrics context. The lyrics themselves follow the \\\\lyricsto command. The \\\\lyricsto command invokes lyric mode automatically, so the \\\\lyricmode keyword may be omitted. By default, the lyrics are placed underneath the notes. For other placements, see Placing lyrics vertically.\"\n  },\n  {\n    \"label\": \"\\\\magnify\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\magnify\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set the font magnification for its argument. In the following example, the middle A is 10% larger:\\n\\n    A \\\\magnify #1.1 { A } A\\n\\nNote: Magnification only works if a font name is explicitly selected. Use \\\\fontsize otherwise.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\magnify #1.5 {\\n        50% larger\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\major\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\makeClusters\",\n    \"detail\": \"Clusters\",\n    \"documentation\": \"A cluster indicates a continuous range of pitches to be played. They can be denoted as the envelope of a set of notes. They are entered by applying the function \\\\makeClusters to a sequence of chords, e.g.,\\n\\n    \\\\makeClusters { <g b>2 <c g'> }\\n\\nOrdinary notes and clusters can be put together in the same staff, even simultaneously. In such a case no attempt is made to automatically avoid collisions between ordinary notes and clusters.\"\n  },\n  {\n    \"label\": \"\\\\map-markup-commands\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"This applies the function compose to every markup in args (including elements of markup list command calls) in order to produce a new markup list. Since the return value from a markup list command call is not a markup list but rather a list of stencils, this requires passing those stencils off as the results of individual markup calls. That way, the results should work out as long as no markups rely on side effects.\"\n  },\n  {\n    \"label\": \"\\\\marcato\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\mark\",\n    \"detail\": \"Rehearsal marks\",\n    \"documentation\": \"To print a rehearsal mark, use the \\\\mark command.\\n\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n\\nThe mark is incremented automatically if you use \\\\mark \\\\default, but you can also use an integer argument to set the mark manually. The value to use is stored in the property rehearsalMark.\\n\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark #8\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n\\nThe letter ‘I’ is skipped in accordance with engraving traditions. If you wish to include the letter ‘I’, then use one of the following commands, depending on which style of rehearsal mark you want (letters only, letters in a hollow box, or letters in a hollow circle).\\n\\n    \\\\set Score.markFormatter = #format-mark-alphabet\\n    \\\\set Score.markFormatter = #format-mark-box-alphabet\\n    \\\\set Score.markFormatter = #format-mark-circle-alphabet\\n\\n    \\\\set Score.markFormatter = #format-mark-box-alphabet\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark #8\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\"\n  },\n  {\n    \"label\": \"\\\\mark\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"Various text elements may be added to a score using the syntax described in Rehearsal marks:\\n\\n    c4\\n    \\\\mark \\\"Allegro\\\"\\n    c c c\\n\\nThis syntax makes it possible to put any text on a bar line; more complex text formatting may be added using a \\\\markup block, as described in Formatting text:\\n\\n    <c e>1\\n    \\\\mark \\\\markup { \\\\italic { colla parte } }\\n    <d f>2 <e g>\\n    <c f aes>1\\n\\nThis syntax also allows to print special signs, like coda, segno or fermata, by specifying the appropriate symbol name as explained in Music notation inside markup:\\n\\n    <bes f>2 <aes d>\\n    \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    <e g>1\\n\\nSuch objects are only typeset above the top staff of the score; depending on whether they are specified at the end or the middle of a bar, they can be placed above the bar line or between notes. When specified at a line break, the mark will be printed at the beginning of the next line.\\n\\n    \\\\mark \\\"Allegro\\\"\\n    c1 c\\n    \\\\mark \\\"assai\\\" \\\\break\\n    c  c\"\n  },\n  {\n    \"label\": \"\\\\markalphabet\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Make a markup letter for num. The letters start with A to Z and continue with double letters.\\n\\n    \\\\markup {\\n      \\\\markalphabet #8\\n      \\\\hspace #2\\n      \\\\markalphabet #26\\n    }\"\n  },\n  {\n    \"label\": \"\\\\markLengthOff\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"In a part for an instrument with long periods of rests, tempo indications sometimes follow each other closely. The command \\\\markLengthOn provides extra horizontal space to prevent tempo indications from overlapping, and \\\\markLengthOff restores the default behavior of ignoring tempo marks for horizontal spacing.\\n\\n    \\\\compressFullBarRests\\n    \\\\markLengthOn\\n    \\\\tempo \\\"Molto vivace\\\"\\n    R1*12\\n    \\\\tempo \\\"Meno mosso\\\"\\n    R1*16\\n    \\\\markLengthOff\\n    \\\\tempo \\\"Tranquillo\\\"\\n    R1*20\"\n  },\n  {\n    \"label\": \"\\\\markLengthOff\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"\\\\markLengthOn, \\\\markLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\markLengthOn\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"In a part for an instrument with long periods of rests, tempo indications sometimes follow each other closely. The command \\\\markLengthOn provides extra horizontal space to prevent tempo indications from overlapping, and \\\\markLengthOff restores the default behavior of ignoring tempo marks for horizontal spacing.\\n\\n    \\\\compressFullBarRests\\n    \\\\markLengthOn\\n    \\\\tempo \\\"Molto vivace\\\"\\n    R1*12\\n    \\\\tempo \\\"Meno mosso\\\"\\n    R1*16\\n    \\\\markLengthOff\\n    \\\\tempo \\\"Tranquillo\\\"\\n    R1*20\"\n  },\n  {\n    \"label\": \"\\\\markLengthOn\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"\\\\markLengthOn, \\\\markLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\markletter\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Make a markup letter for num. The letters start with A to Z (skipping letter I), and continue with double letters.\\n\\n    \\\\markup {\\n      \\\\markletter #8\\n      \\\\hspace #2\\n      \\\\markletter #26\\n    }\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"Various text elements may be added to a score using the syntax described in Rehearsal marks:\\n\\n    c4\\n    \\\\mark \\\"Allegro\\\"\\n    c c c\\n\\nThis syntax makes it possible to put any text on a bar line; more complex text formatting may be added using a \\\\markup block, as described in Formatting text:\\n\\n    <c e>1\\n    \\\\mark \\\\markup { \\\\italic { colla parte } }\\n    <d f>2 <e g>\\n    <c f aes>1\\n\\nThis syntax also allows to print special signs, like coda, segno or fermata, by specifying the appropriate symbol name as explained in Music notation inside markup:\\n\\n    <bes f>2 <aes d>\\n    \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    <e g>1\\n\\nSuch objects are only typeset above the top staff of the score; depending on whether they are specified at the end or the middle of a bar, they can be placed above the bar line or between notes. When specified at a line break, the mark will be printed at the beginning of the next line.\\n\\n    \\\\mark \\\"Allegro\\\"\\n    c1 c\\n    \\\\mark \\\"assai\\\" \\\\break\\n    c  c\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"A \\\\markup block can exist by itself, outside of any \\\\score block, as a “top-level expression”. This syntax is described in File structure.\\n\\n    \\\\markup {\\n      Tomorrow, and tomorrow, and tomorrow...\\n    }\\n\\nThis allows printing text separately from the music, which is particularly useful when the input file contains several music pieces, as described in Multiple scores in a book.\\n\\n    \\\\score {\\n      c'1\\n    }\\n    \\\\markup {\\n      Tomorrow, and tomorrow, and tomorrow...\\n    }\\n    \\\\score {\\n      c'1\\n    }\\n\\nSeparate text blocks can be spread over multiple pages, making it possible to print text documents or books entirely within LilyPond. This feature, and the specific syntax it requires, are described in Multi-page markup.\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"\\\\markup, \\\\markuplist.\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Text markup introduction\",\n    \"documentation\": \"A \\\\markup block is used to typeset text with an extensible syntax called “markup mode”.\"\n  },\n  {\n    \"label\": \"\\\\markuplist\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"\\\\markup, \\\\markuplist.\"\n  },\n  {\n    \"label\": \"\\\\markuplist\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"\\\\maxima\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\maxima\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\medium\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Switch to medium font-series (in contrast to bold).\\n\\n    \\\\markup {\\n      \\\\bold {\\n        some bold text\\n        \\\\hspace #2\\n        \\\\medium {\\n          medium font series\\n        }\\n        \\\\hspace #2\\n        bold again\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\melisma\",\n    \"detail\": \"Multiple notes to one syllable\",\n    \"documentation\": \"Sometimes, particularly in Medieval and baroque music, several notes are sung on one syllable; this is called melisma, see melisma. The syllable to a melisma is usually left-aligned with the first note of the melisma.\\n\\nWhen a melisma occurs on a syllable other than the last one in a word, that syllable is usually joined to the following one with a hyphenated line. This is indicated by placing a double hyphen, --, immediately after the syllable.\\n\\nAlternatively, when a melisma occurs on the last or only syllable in a word an extender line is usually drawn from the end of the syllable to the last note of the melisma. This is indicated by placing a double underscore, __, immediately after the word.\\n\\nThere are five ways in which melismata can be indicated:\\n\\n - Melismata are created automatically over notes which are tied together:\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g2 ~ |\\n    g4 e2 ~ |\\n    e8\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e __\\n  }\\n>>\\n \\n\\n\\n - Melismata can be created automatically from the music by placing slurs over the notes of each melisma. This is the usual way of entering lyrics:\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8 ( f e f )\\n    e8 ( d e2 )\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e __\\n  }\\n>>\\n \\n\\nNote that phrasing slurs do not affect the creation of melismata.\\n\\n\\n - Notes are considered a melisma if they are manually beamed, providing automatic beaming is switched off. See Setting automatic beam behavior.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    \\\\autoBeamOff\\n    f4 g8[ f e f]\\n    e2.\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e\\n  }\\n>>\\n \\n\\nClearly this is not suited to melismata over notes which are longer than eighth notes.\\n\\n\\n - An unslurred group of notes will be treated as a melisma if they are bracketed between \\\\melisma and \\\\melismaEnd.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8\\n    \\\\melisma\\n    f e f\\n    \\\\melismaEnd\\n    e2.\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e\\n  }\\n>>\\n \\n\\n\\n - A melisma can be defined entirely in the lyrics by entering a single underscore character, _, for every extra note that has to be added to the melisma.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8 f e f\\n    e8 d e2\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- _ _ _ e __ _ _\\n  }\\n>>\\n \\n\\n\\n\\nIt is possible to have ties, slurs and manual beams in the melody without their indicating melismata. To do this, set melismaBusyProperties:\\n\\n    <<\\n      \\\\new Voice = \\\"melody\\\" {\\n        \\\\time 3/4\\n        \\\\set melismaBusyProperties = #'()\\n        c4 d ( e )\\n        g8 [ f ] f4 ~ f\\n      }\\n      \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n        Ky -- ri -- e e -- le -- i -- son\\n      }\\n    >>\\n\\nOther settings for melismaBusyProperties can be used to selectively include or exclude ties, slurs, and beams from the automatic detection of melismata; see melismaBusyProperties in Tunable context properties.\\n\\nAlternatively, if all melismata indications are to be ignored, ignoreMelismata may be set true; see Stanzas with different rhythms.\\n\\nIf a melisma is required during a passage in which melismaBusyProperties is active, it may be indicated by placing a single underscore in the lyrics for each note which should be included in the melisma:\\n\\n    <<\\n      \\\\new Voice = \\\"melody\\\" {\\n        \\\\time 3/4\\n        \\\\set melismaBusyProperties = #'()\\n        c4 d ( e )\\n        g8 [ f ] ~ f4 ~ f\\n      }\\n      \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n        Ky -- ri -- _ e __ _ _ _\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\melismaEnd\",\n    \"detail\": \"Multiple notes to one syllable\",\n    \"documentation\": \"Sometimes, particularly in Medieval and baroque music, several notes are sung on one syllable; this is called melisma, see melisma. The syllable to a melisma is usually left-aligned with the first note of the melisma.\\n\\nWhen a melisma occurs on a syllable other than the last one in a word, that syllable is usually joined to the following one with a hyphenated line. This is indicated by placing a double hyphen, --, immediately after the syllable.\\n\\nAlternatively, when a melisma occurs on the last or only syllable in a word an extender line is usually drawn from the end of the syllable to the last note of the melisma. This is indicated by placing a double underscore, __, immediately after the word.\\n\\nThere are five ways in which melismata can be indicated:\\n\\n - Melismata are created automatically over notes which are tied together:\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g2 ~ |\\n    g4 e2 ~ |\\n    e8\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e __\\n  }\\n>>\\n \\n\\n\\n - Melismata can be created automatically from the music by placing slurs over the notes of each melisma. This is the usual way of entering lyrics:\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8 ( f e f )\\n    e8 ( d e2 )\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e __\\n  }\\n>>\\n \\n\\nNote that phrasing slurs do not affect the creation of melismata.\\n\\n\\n - Notes are considered a melisma if they are manually beamed, providing automatic beaming is switched off. See Setting automatic beam behavior.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    \\\\autoBeamOff\\n    f4 g8[ f e f]\\n    e2.\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e\\n  }\\n>>\\n \\n\\nClearly this is not suited to melismata over notes which are longer than eighth notes.\\n\\n\\n - An unslurred group of notes will be treated as a melisma if they are bracketed between \\\\melisma and \\\\melismaEnd.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8\\n    \\\\melisma\\n    f e f\\n    \\\\melismaEnd\\n    e2.\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- e\\n  }\\n>>\\n \\n\\n\\n - A melisma can be defined entirely in the lyrics by entering a single underscore character, _, for every extra note that has to be added to the melisma.\\n<<\\n  \\\\new Voice = \\\"melody\\\" {\\n    \\\\time 3/4\\n    f4 g8 f e f\\n    e8 d e2\\n  }\\n  \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n    Ky -- ri -- _ _ _ e __ _ _\\n  }\\n>>\\n \\n\\n\\n\\nIt is possible to have ties, slurs and manual beams in the melody without their indicating melismata. To do this, set melismaBusyProperties:\\n\\n    <<\\n      \\\\new Voice = \\\"melody\\\" {\\n        \\\\time 3/4\\n        \\\\set melismaBusyProperties = #'()\\n        c4 d ( e )\\n        g8 [ f ] f4 ~ f\\n      }\\n      \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n        Ky -- ri -- e e -- le -- i -- son\\n      }\\n    >>\\n\\nOther settings for melismaBusyProperties can be used to selectively include or exclude ties, slurs, and beams from the automatic detection of melismata; see melismaBusyProperties in Tunable context properties.\\n\\nAlternatively, if all melismata indications are to be ignored, ignoreMelismata may be set true; see Stanzas with different rhythms.\\n\\nIf a melisma is required during a passage in which melismaBusyProperties is active, it may be indicated by placing a single underscore in the lyrics for each note which should be included in the melisma:\\n\\n    <<\\n      \\\\new Voice = \\\"melody\\\" {\\n        \\\\time 3/4\\n        \\\\set melismaBusyProperties = #'()\\n        c4 d ( e )\\n        g8 [ f ] ~ f4 ~ f\\n      }\\n      \\\\new Lyrics \\\\lyricsto \\\"melody\\\" {\\n        Ky -- ri -- _ e __ _ _ _\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyDottedOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyDottedOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyHeadedOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyHeadedOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mf\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\midi\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\midi\",\n    \"detail\": \"Output definitions - blueprints for contexts\",\n    \"documentation\": \"A much simpler output definition used for producing Midi output is specified using \\\\midi. Several other output definitions are used by LilyPond internally, like when using the part combiner (Automatic part combining) or creating music quotes (Quoting other voices).\\n\\nOutput definitions define the relation between contexts as well as their respective default settings. While most changes will usually be made inside of a \\\\layout block, Midi-related settings will only have an effect when made within a \\\\midi block.\"\n  },\n  {\n    \"label\": \"\\\\minor\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\mixolydian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\mm\",\n    \"detail\": \"5.4.3 Distances and measurements\",\n    \"documentation\": \"Distances in LilyPond are of two types: absolute and scaled.\\n\\nAbsolute distances are used for specifying margins, indents, and other page layout details, and are by default specified in millimeters. Distances may be specified in other units by following the quantity by \\\\mm, \\\\cm, \\\\in (inches), or \\\\pt (points, 1/72.27 of an inch). Page layout distances can also be specified in scalable units (see the following paragraph) by appending \\\\staff-space to the quantity. Page layout is described in detail in Page layout.\\n\\nScaled distances are always specified in units of the staff-space or, rarely, the half staff-space. The staff-space is the distance between two adjacent staff lines. The default value can be changed globally by setting the global staff size, or it can be overridden locally by changing the staff-space property of StaffSymbol. Scaled distances automatically scale with any change to the either the global staff size or the staff-space property of StaffSymbol, but fonts scale automatically only with changes to the global staff size. The global staff size thus enables the overall size of a rendered score to be easily varied. For the methods of setting the global staff size see Setting the staff size.\"\n  },\n  {\n    \"label\": \"\\\\modalInversion\",\n    \"detail\": \"Modal inversion\",\n    \"documentation\": \"A motif can be inverted within a given scale around a given pivot note and transposed in a single operation with:\\n\\n    \\\\modalInversion around-pitch to-pitch scale motif\\n\\nThe notes of motif are placed the same number of scale degrees from the around-pitch note within the scale, but in the opposite direction, and the result is then shifted within the scale by the number of scale degrees given by the interval between to-pitch and around-pitch.\\n\\nSo to simply invert around a note in the scale use the same value for around-pitch and to-pitch:\\n\\n    octatonicScale = \\\\relative c' { ees f fis gis a b c d }\\n    motif = \\\\relative c' { c8. ees16 fis8. a16 b8. gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalInversion fis' fis' \\\\octatonicScale \\\\motif\\n    }\\n\\nTo invert around a pivot between two notes in the scale, invert around one of the notes and then transpose by one scale degree. The two notes specified can be interpreted as bracketing the pivot point:\\n\\n    scale = \\\\relative c' { c g' }\\n    motive = \\\\relative c' { c c g' c, }\\n    \\\\new Staff {\\n      \\\\motive\\n      \\\\modalInversion c' g' \\\\scale \\\\motive\\n    }\\n\\nThe combined operation of inversion and retrograde produce the retrograde-inversion:\\n\\n    octatonicScale = \\\\relative c' { ees f fis gis a b c d }\\n    motif = \\\\relative c' { c8. ees16 fis8. a16 b8. gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\retrograde \\\\modalInversion c' c' \\\\octatonicScale \\\\motif\\n    }\"\n  },\n  {\n    \"label\": \"\\\\modalTranspose\",\n    \"detail\": \"Modal transposition\",\n    \"documentation\": \"A motif can be transposed within a given scale with:\\n\\n    \\\\modalTranspose from-pitch to-pitch scale motif\\n\\nThe notes of motif are shifted within the scale by the number of scale degrees given by the interval between to-pitch and from-pitch:\\n\\n    diatonicScale = \\\\relative c' { c d e f g a b }\\n    motif = \\\\relative c' { c8 d e f g a b c }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalTranspose c f \\\\diatonicScale \\\\motif\\n      \\\\modalTranspose c b, \\\\diatonicScale \\\\motif\\n    }\\n\\nAn ascending scale of any length and with any intervals may be specified:\\n\\n    pentatonicScale = \\\\relative c' { ges aes bes des ees }\\n    motif = \\\\relative c' { ees8 des ges,4 <ges' bes,> <ges bes,> }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalTranspose ges ees' \\\\pentatonicScale \\\\motif\\n    }\\n\\nWhen used with a chromatic scale \\\\modalTranspose has a similar effect to \\\\transpose, but with the ability to specify the names of the notes to be used:\\n\\n    chromaticScale = \\\\relative c' { c cis d dis e f fis g gis a ais b }\\n    motif = \\\\relative c' { c8 d e f g a b c }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\transpose c f \\\\motif\\n      \\\\modalTranspose c f \\\\chromaticScale \\\\motif\\n    }\"\n  },\n  {\n    \"label\": \"\\\\mordent\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\mp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\musicglyph\",\n    \"detail\": \"Rehearsal marks\",\n    \"documentation\": \"Music glyphs (such as the segno sign) may be printed inside a \\\\mark\\n\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.segno\\\" }\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.coda\\\" }\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    c1\\n\\nSee The Feta font, for a list of symbols which may be printed with \\\\musicglyph.\\n\\nFor common tweaks to the positioning of rehearsal marks, see Formatting text. For more precise control, see break-alignable-interface in Aligning objects.\\n\\nThe file ‘scm/translation-functions.scm’ contains the definitions of format-mark-numbers and format-mark-letters. They can be used as inspiration for other formatting functions.\"\n  },\n  {\n    \"label\": \"\\\\musicglyph\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"glyph-name is converted to a musical symbol; for example, \\\\musicglyph #\\\"accidentals.natural\\\" selects the natural sign from the music font. See The Feta font for a complete listing of the possible glyphs.\\n\\n    \\\\markup {\\n      \\\\musicglyph #\\\"f\\\"\\n      \\\\musicglyph #\\\"rests.2\\\"\\n      \\\\musicglyph #\\\"clefs.G_change\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\name\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\natural\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a natural symbol.\\n\\n    \\\\markup {\\n      \\\\natural\\n    }\"\n  },\n  {\n    \"label\": \"\\\\new\",\n    \"detail\": \"5.1.2 Creating and referencing contexts\",\n    \"documentation\": \"LilyPond will create lower-level contexts automatically if a music expression is encountered before a suitable context exists, but this is usually successful only for simple scores or music fragments like the ones in the documentation. For more complex scores it is advisable to specify all contexts explicitly with either the \\\\new or \\\\context command. The syntax of these two commands is very similar:\\n\\n    [\\\\new | \\\\context] Context [ = name] [music-expression]\\n\\nwhere either \\\\new or \\\\context may be specified. Context is the type of context which is to be created, name is an optional name to be given to the particular context being created and music-expression is a single music expression that is to be interpreted by the engravers and performers in this context.\\n\\nThe \\\\new prefix without a name is commonly used to create scores with many staves:\\n\\n    <<\\n      \\\\new Staff {\\n        % leave the Voice context to be created implicitly\\n        c4 c\\n      }\\n      \\\\new Staff {\\n        d4 d\\n      }\\n    >>\\n\\nand to place several voices into one staff:\\n\\n    <<\\n      \\\\new Staff <<\\n        \\\\new Voice {\\n          \\\\voiceOne\\n          c8 c c4 c c\\n        }\\n        \\\\new Voice {\\n          \\\\voiceTwo\\n          g4 g g g\\n        }\\n      >>\\n    >>\\n\\n\\\\new should always be used to specify unnamed contexts.\\n\\nThe difference between \\\\new and \\\\context is in the action taken:\\n\\n - \\\\new with or without a name will always create a fresh, distinct, context, even if one with the same name already exists:\\n<<\\n  \\\\new Staff <<\\n    \\\\new Voice = \\\"A\\\" {\\n      \\\\voiceOne\\n      c8 c c4 c c\\n    }\\n    \\\\new Voice = \\\"A\\\" {\\n      \\\\voiceTwo\\n      g4 g g g\\n    }\\n  >>\\n>>\\n \\n\\n\\n - \\\\context with a name specified will create a distinct context only if a context of the same type with the same name in the same context hierarchy does not already exist. Otherwise it will be taken as a reference to that previously created context, and its music expression will be passed to that context for interpretation.\\nOne application of named contexts is in separating the score layout from the musical content. Either of these two forms is valid:\\n\\n\\\\score {\\n  <<\\n    % score layout\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"one\\\" {\\n        \\\\voiceOne\\n      }\\n      \\\\new Voice = \\\"two\\\" {\\n        \\\\voiceTwo\\n      }\\n    >>\\n\\n    % musical content\\n    \\\\context Voice = \\\"one\\\" {\\n      \\\\relative c'' {\\n        c4 c c c\\n      }\\n    }\\n    \\\\context Voice = \\\"two\\\" {\\n      \\\\relative c'' {\\n        g8 g g4 g g\\n      }\\n    }\\n  >>\\n}\\n \\n\\n\\\\score {\\n  <<\\n    % score layout\\n    \\\\new Staff <<\\n      \\\\context Voice = \\\"one\\\" {\\n        \\\\voiceOne\\n      }\\n      \\\\context Voice = \\\"two\\\" {\\n        \\\\voiceTwo\\n      }\\n    >>\\n\\n    % musical content\\n    \\\\context Voice = \\\"one\\\" {\\n      \\\\relative c'' {\\n        c4 c c c\\n      }\\n    }\\n    \\\\context Voice = \\\"two\\\" {\\n      \\\\relative c'' {\\n        g8 g g4 g g\\n      }\\n    }\\n  >>\\n}\\n \\n\\nAlternatively, variables may be employed to similar effect. See Organizing pieces with variables.\\n\\n\\n - \\\\context with no name will match the first of any previously created contexts of the same type in the same context heirarchy, even one that has been given a name, and its music expression will be passed to that context for interpretation. This form is rarely useful. However, \\\\context with no name and no music expression is used to set the context in which a Scheme procedure specified with \\\\applyContext is executed:\\n\\\\new Staff \\\\relative c' {\\n  c1\\n  \\\\context Timing\\n  \\\\applyContext #(lambda (ctx)\\n                   (newline)\\n                   (display (ly:context-current-moment ctx)))\\n  c1\\n}\\n\\n\\nA context must be named if it is to be referenced later, for example when lyrics are associated with music:\\n\\n    \\\\new Voice = \\\"tenor\\\" music\\n    …\\n    \\\\new Lyrics \\\\lyricsto \\\"tenor\\\" lyrics\\n\\nFor details of associating lyrics with music see Automatic syllable durations.\\n\\nThe properties of all contexts of a particular type can be modified in a \\\\layout block (with a different syntax), see Changing all contexts of the same type. This construct also provides a means of keeping layout instructions separate from the musical content. If a single context is to be modified, a \\\\with block must be used, see Changing just one specific context.\"\n  },\n  {\n    \"label\": \"\\\\newSpacingSection\",\n    \"detail\": \"4.5.2 New spacing area\",\n    \"documentation\": \"New sections with different spacing parameters can be started with newSpacingSection. This is useful when there are sections with a different notions of long and short notes.\\n\\nIn the following example, the time signature change introduces a new section, and hence the 16ths notes are automatically spaced slightly wider.\\n\\n    \\\\time 2/4\\n    c4 c8 c\\n    c8 c c4 c16[ c c8] c4\\n    \\\\newSpacingSection\\n    \\\\time 4/16\\n    c16[ c c8]\\n\\nThe \\\\newSpacingSection command creates a new SpacingSpanner object at that musical moment. If the automatic spacing adjustments do not give the required spacing, manual \\\\overrides may be applied to its properties. These must be applied at the same musical moment as the \\\\newSpacingSection command itself. They will then affect the spacing of all the following music until the properties are changed in a new spacing section, for example,\\n\\n    \\\\time 4/16\\n    c16[ c c8]\\n    \\\\newSpacingSection\\n    \\\\override Score.SpacingSpanner.spacing-increment = #2\\n    c16[ c c8]\\n    \\\\newSpacingSection\\n    \\\\revert Score.SpacingSpanner.spacing-increment\\n    c16[ c c8]\"\n  },\n  {\n    \"label\": \"\\\\noBeam\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"Individual notes may be marked with \\\\noBeam to prevent them from being beamed:\\n\\n    \\\\time 2/4\\n    c8 c\\\\noBeam c c\\n\\nGrace note beams and normal note beams can occur simultaneously. Unbeamed grace notes are not put into normal note beams.\\n\\n    c4 d8[\\n    \\\\grace { e32 d c d }\\n    e8] e[ e\\n    \\\\grace { f16 }\\n    e8 e]\"\n  },\n  {\n    \"label\": \"\\\\noBreak\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\noPageBreak\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\noPageTurn\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\normal-size-sub\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set arg in subscript with a normal font size.\\n\\n    \\\\markup {\\n      default\\n      \\\\normal-size-sub {\\n        subscript in standard size\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\normal-size-super\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\normal-size-super\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set arg in superscript with a normal font size.\\n\\n    \\\\markup {\\n      default\\n      \\\\normal-size-super {\\n        superscript in standard size\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\normal-text\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set all font related properties (except the size) to get the default normal text font, no matter what font was used earlier.\\n\\n    \\\\markup {\\n      \\\\huge \\\\bold \\\\sans \\\\caps {\\n        huge bold sans caps\\n        \\\\hspace #2\\n        \\\\normal-text {\\n          huge normal\\n        }\\n        \\\\hspace #2\\n        as before\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\normalsize\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\normalsize\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\normalsize\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to default.\\n\\n    \\\\markup {\\n      \\\\teeny {\\n        this is very small\\n        \\\\hspace #2\\n        \\\\normalsize {\\n          normal size\\n        }\\n        \\\\hspace #2\\n        teeny again\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\note\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"This produces a note with a stem pointing in dir direction, with the duration for the note head type and augmentation dots. For example, \\\\note #\\\"4.\\\" #-0.75 creates a dotted quarter note, with a shortened down stem.\\n\\n    \\\\markup {\\n      \\\\override #'(style . cross) {\\n        \\\\note #\\\"4..\\\" #UP\\n      }\\n      \\\\hspace #2\\n      \\\\note #\\\"breve\\\" #0\\n    }\\n\\nUsed properties:\\n\\n - style (’())\\n - flag-style (’())\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\note-by-number\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Construct a note symbol, with stem and flag. By using fractional values for dir, longer or shorter stems can be obtained. Supports all note-head-styles. Supported flag-styles are default, old-straight-flag, modern-straight-flag and flat-flag.\\n\\n    \\\\markup {\\n      \\\\note-by-number #3 #0 #DOWN\\n      \\\\hspace #2\\n      \\\\note-by-number #1 #2 #0.8\\n    }\\n\\nUsed properties:\\n\\n - style (’())\\n - flag-style (’())\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\null\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\null\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"An empty markup with extents of a single point.\\n\\n    \\\\markup {\\n      \\\\null\\n    }\"\n  },\n  {\n    \"label\": \"\\\\number\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font family to number, which yields the font used for time signatures and fingerings. This font contains numbers and some punctuation; it has no letters.\\n\\n    \\\\markup {\\n      \\\\number {\\n        0 1 2 3 4 5 6 7 8 9 . ,\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\numericTimeSignature\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature symbol that is used in 2/2 and 4/4 time can be changed to a numeric style:\\n\\n    % Default style\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Change to numeric style\\n    \\\\numericTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Revert to default style\\n    \\\\defaultTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n\\nMensural time signatures are covered in Mensural time signatures.\"\n  },\n  {\n    \"label\": \"\\\\octaveCheck\",\n    \"detail\": \"Octave checks\",\n    \"documentation\": \"In relative mode, it is easy to forget an octave changing mark. Octave checks make such errors easier to find by displaying a warning and correcting the octave if a note is found in an unexpected octave.\\n\\nTo check the octave of a note, specify the absolute octave after the = symbol. This example will generate a warning (and change the pitch) because the second note is the absolute octave d'' instead of d' as indicated by the octave correction.\\n\\n    \\\\relative c'' {\\n      c2 d='4 d\\n      e2 f\\n    }\\n\\nThe octave of notes may also be checked with the \\\\octaveCheck controlpitch command. controlpitch is specified in absolute mode. This checks that the interval between the previous note and the controlpitch is within a fourth (i.e., the normal calculation of relative mode). If this check fails, a warning is printed, but the previous note is not changed. Future notes are relative to the controlpitch.\\n\\n    \\\\relative c'' {\\n      c2 d\\n      \\\\octaveCheck c'\\n      e2 f\\n    }\\n\\nCompare the two bars below. The first and third \\\\octaveCheck checks fail, but the second one does not fail.\\n\\n    \\\\relative c'' {\\n      c4 f g f\\n      c4\\n      \\\\octaveCheck c'\\n      f\\n      \\\\octaveCheck c'\\n      g\\n      \\\\octaveCheck c'\\n      f\\n    }\"\n  },\n  {\n    \"label\": \"\\\\omit\",\n    \"detail\": \"Removing the stencil\",\n    \"documentation\": \"Every layout object has a stencil property. By default this is set to the specific function which draws that object. If this property is overridden to #f no function will be called and the object will not be drawn. The default action can be recovered with \\\\revert.\\n\\n    a1 a\\n    \\\\override Score.BarLine.stencil = ##f\\n    a a\\n    \\\\revert Score.BarLine.stencil\\n    a a a\\n\\nThis rather common operation has a shortcut \\\\omit:\\n\\n    a1 a\\n    \\\\omit Score.BarLine\\n    a a\\n    \\\\undo \\\\omit Score.BarLine\\n    a a a\"\n  },\n  {\n    \"label\": \"\\\\on-the-fly\",\n    \"detail\": \"Custom layout for headers and footers\",\n    \"documentation\": \"The \\\\markup command \\\\on-the-fly can be used to add markup conditionally to header and footer text defined within the \\\\paper block, using the following syntax:\\n\\n    variable = \\\\markup {\\n      …\\n      \\\\on-the-fly  \\\\procedure  markup\\n      …\\n    }\\n\\nThe procedure is called each time the \\\\markup command in which it appears is evaluated. The procedure should test for a particular condition and interpret (i.e. print) the markup argument if and only if the condition is true.\\n\\nA number of ready-made procedures for testing various conditions are provided:\\n\\n    Procedure name\\n    Condition tested\\n    print-page-number-check-first\\n    should this page number be printed?\\n    create-page-number-stencil\\n    print-page-numbers true?\\n    print-all-headers\\n    print-all-headers true?\\n    first-page\\n    first page in the book?\\n    (on-page nmbr)\\n    page number = nmbr?\\n    last-page\\n    last page in the book?\\n    not-first-page\\n    not first page in the book?\\n    part-first-page\\n    first page in the book part?\\n    part-last-page\\n    last page in the book part?\\n    not-single-page\\n    pages in book part > 1?\\n\\nThe following example centers page numbers at the bottom of every page. First, the default settings for oddHeaderMarkup and evenHeaderMarkup are removed by defining each as a null markup. Then, oddFooterMarkup is redefined with the page number centered. Finally, evenFooterMarkup is given the same layout by defining it as \\\\oddFooterMarkup:\\n\\n    \\\\book {\\n      \\\\paper {\\n        print-page-number = ##t\\n        print-first-page-number = ##t\\n        oddHeaderMarkup = \\\\markup \\\\null\\n        evenHeaderMarkup = \\\\markup \\\\null\\n        oddFooterMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\on-the-fly \\\\print-page-number-check-first\\n            \\\\fromproperty #'page:page-number-string\\n          }\\n        }\\n        evenFooterMarkup = \\\\oddFooterMarkup\\n      }\\n      \\\\score {\\n        \\\\new Staff { s1 \\\\break s1 \\\\break s1 }\\n      }\\n    }\\n\\nSeveral \\\\on-the-fly conditions can be combined with an ‘and’ operation, for example,\\n\\n      \\\\on-the-fly \\\\first-page\\n      \\\\on-the-fly \\\\last-page\\n      { \\\\markup … \\\\fromproperty #'header: … }\\n\\ndetermines if the output is a single page.\"\n  },\n  {\n    \"label\": \"\\\\on-the-fly\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Apply the procedure markup command to arg. procedure should take a single argument.\"\n  },\n  {\n    \"label\": \"\\\\once\",\n    \"detail\": \"5.3.3 The \\\\override command\",\n    \"documentation\": \"\\\\once can be used with \\\\override to affect only the current time step:\\n\\n    {\\n      <<\\n        {\\n          \\\\override Stem.thickness = #3.0\\n          e4 e e e\\n        } \\\\\\\\ {\\n          c4\\n          \\\\once \\\\override Stem.thickness = #3.0\\n          c4 c c\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\oneVoice\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\open\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\open\",\n    \"detail\": \"Bowing indications\",\n    \"documentation\": \"Bowing indications are created as articulations, which are described in Articulations and ornamentations.\\n\\nThe bowing commands, \\\\upbow and \\\\downbow, are used with slurs as follows:\\n\\n    c4(\\\\downbow d) e(\\\\upbow f)\\n\\nand the following example shows three ways in which an open A string on a violin might be indicated:\\n\\n    a4 \\\\open\\n    a^\\\\markup { \\\\teeny \\\"II\\\" }\\n    a2^\\\\markup { \\\\small \\\"sul A\\\" }\"\n  },\n  {\n    \"label\": \"\\\\oriscus\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\oriscus\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\ottava\",\n    \"detail\": \"Ottava brackets\",\n    \"documentation\": \"Ottava brackets introduce an extra transposition of an octave for the staff:\\n\\n    a2 b\\n    \\\\ottava #-2\\n    a2 b\\n    \\\\ottava #-1\\n    a2 b\\n    \\\\ottava #0\\n    a2 b\\n    \\\\ottava #1\\n    a2 b\\n    \\\\ottava #2\\n    a2 b\"\n  },\n  {\n    \"label\": \"\\\\oval\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw an oval around arg. Use thickness, x-padding, x-padding and font-size properties to determine line thickness and padding around the markup.\\n\\n    \\\\markup {\\n      \\\\oval {\\n        Hi\\n      }\\n    }\\n\\nUsed properties:\\n\\n - y-padding (0.75)\\n - x-padding (0.75)\\n - font-size (0)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\override\",\n    \"detail\": \"5.3.3 The \\\\override command\",\n    \"documentation\": \"There is a special type of context property: the grob description. Grob descriptions are named in StudlyCaps (starting with capital letters). They contain the ‘default settings’ for a particular kind of grob as an association list. See ‘scm/define-grobs.scm’ to see the settings for each grob description. Grob descriptions are modified with \\\\override.\\n\\nThe syntax for the \\\\override command is\\n\\n    \\\\override [context.]GrobName.property = #value\\n\\nFor example, we can increase the thickness of a note stem by overriding the thickness property of the Stem object:\\n\\n    c4 c\\n    \\\\override Voice.Stem.thickness = #3.0\\n    c4 c\\n\\nIf no context is specified in an \\\\override, the bottom context is used:\\n\\n    { \\\\override Staff.Stem.thickness = #3.0\\n      <<\\n        {\\n          e4 e\\n          \\\\override Stem.thickness = #0.5\\n          e4 e\\n        } \\\\\\\\ {\\n          c4 c c c\\n        }\\n      >>\\n    }\\n\\nSome tweakable options are called ‘subproperties’ and reside inside properties. To tweak those, use commands in the form\\n\\n    \\\\override Stem.details.beamed-lengths = #'(4 4 3)\\n\\nor to modify the ends of spanners, use a form like these\\n\\n    \\\\override TextSpanner.bound-details.left.text = #\\\"left text\\\"\\n    \\\\override TextSpanner.bound-details.right.text = #\\\"right text\\\"\"\n  },\n  {\n    \"label\": \"\\\\override\",\n    \"detail\": \"5.3.5 \\\\set vs. \\\\override\",\n    \"documentation\": \"Both \\\\set and \\\\override manipulate properties associated with contexts. In either case, properties heed the hierarchy of contexts: properties not set in a context itself show the values of the respective parent context.\\n\\nValues and lifetime of context properties are dynamic and only available when music is being interpreted, ‘iterated’. At the time of context creation, properties are initialized from the corresponding context definition and possible context modifications. Afterwards, changes are achieved with property-setting commands in the music itself.\\n\\nNow grob definitions are a special category of context properties. Since their structure, bookkeeping and use is different from ordinary context properties, they are accessed with a different set of commands, and treated separately in the documentation.\\n\\nAs opposed to plain context properties, grob definitions are subdivided into grob properties. A “grob” (graphical object) is usually created by an engraver at the time of interpreting a music expression and receives its initial properties from the current grob definition of the engraver’s context. The engraver (or other ‘backend’ parts of LilyPond) may subsequently add or change properties to the grob, but that does not affect the context’s grob definition.\\n\\nWhat we call ‘grob properties’ in the context of user-level tweaking are actually the properties of a context’s grob definition. In contrast to ordinary context properties, grob definitions have the bookkeeping required to keep track of its parts, the individual grob properties (and even subproperties of them) separately so that it is possible to define those parts in different contexts and have the overall grob definition at the time of grob creation be assembled from pieces provided in different contexts among the current context and its parents.\\n\\nGrob definitions are manipulated using \\\\override and \\\\revert and have a name starting with a capital letter (like ‘NoteHead’) whereas ordinary context properties are manipulated using \\\\set and \\\\unset and are named starting with a lowercase letter.\"\n  },\n  {\n    \"label\": \"\\\\override\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Add the argument new-prop to the property list. Properties may be any property supported by font-interface, text-interface and instrument-specific-markup-interface.\\n\\n    \\\\markup {\\n      \\\\line {\\n        \\\\column {\\n          default\\n          baseline-skip\\n        }\\n        \\\\hspace #2\\n        \\\\override #'(baseline-skip . 4) {\\n          \\\\column {\\n            increased\\n            baseline-skip\\n          }\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\override-lines\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Like \\\\override, for markup lists.\"\n  },\n  {\n    \"label\": \"\\\\overrideProperty\",\n    \"detail\": \"5.3.5 \\\\set vs. \\\\override\",\n    \"documentation\": \"The special commands \\\\tweak and \\\\overrideProperty change grob properties bypassing context properties completely. Instead they catch grobs as they are being created and then directly set properties on them when they originate from a tweaked music event or are of a particular kind, respectively.\"\n  },\n  {\n    \"label\": \"\\\\overrideTimeSignatureSettings\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"In addition to setting the printed time signature, the \\\\time command also sets the values of the time-signature-based properties baseMoment, beatStructure, and beamExceptions. The predefined default values for these properties can be found in ‘scm/time-signature-settings.scm’.\\n\\nThe default value of beatStructure can be overridden in the \\\\time command itself by supplying it as the optional first argument:\\n\\n    \\\\score {\\n      \\\\new Staff {\\n        \\\\relative c' {\\n          \\\\time #'(2 2 3) 7/8\\n          \\\\repeat unfold 7 { c8 } |\\n          \\\\time #'(3 2 2) 7/8\\n          \\\\repeat unfold 7 { c8 } |\\n        }\\n      }\\n    }\\n\\nAlternatively, the default values of all these time-signature-based variables, including baseMoment and beamExceptions, can be set together. The values can be set independently for several different time signatures. The new values take effect when a subsequent \\\\time command with the same value of the time signature is executed:\\n\\n    \\\\score {\\n      \\\\new Staff {\\n        \\\\relative c' {\\n          \\\\overrideTimeSignatureSettings\\n            4/4        % timeSignatureFraction\\n            1/4        % baseMomentFraction\\n            #'(3 1)    % beatStructure\\n            #'()       % beamExceptions\\n          \\\\time 4/4\\n          \\\\repeat unfold 8 { c8 } |\\n        }\\n      }\\n    }\\n\\n\\\\overrideTimeSignatureSettings takes four arguments:\\n\\ntimeSignatureFraction, a fraction describing the time signature to which these values apply.\\nbaseMomentFraction, a fraction containing the numerator and denominator of the basic timing unit for the time signature.\\nbeatStructure, a Scheme list indicating the structure of the beats in the measure, in units of the base moment.\\nbeamExceptions, an alist containing any beaming rules for the time signature that go beyond ending at every beat, as described in Setting automatic beam behavior.\\n\"\n  },\n  {\n    \"label\": \"\\\\p\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\pad-around\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-around\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Add padding amount all around arg.\\n\\n    \\\\markup {\\n      \\\\box {\\n        default\\n      }\\n      \\\\hspace #2\\n      \\\\box {\\n        \\\\pad-around #0.5 {\\n          padded\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-markup\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-markup\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Add space around a markup object. Identical to pad-around.\\n\\n    \\\\markup {\\n      \\\\box {\\n        default\\n      }\\n      \\\\hspace #2\\n      \\\\box {\\n        \\\\pad-markup #1 {\\n          padded\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-to-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-to-box\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Make arg take at least x-ext, y-ext space.\\n\\n    \\\\markup {\\n      \\\\box {\\n        default\\n      }\\n      \\\\hspace #4\\n      \\\\box {\\n        \\\\pad-to-box #'(0 . 10) #'(0 . 3) {\\n          padded\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-x\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-x\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Add padding amount around arg in the X direction.\\n\\n    \\\\markup {\\n      \\\\box {\\n        default\\n      }\\n      \\\\hspace #4\\n      \\\\box {\\n        \\\\pad-x #2 {\\n          padded\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\page-link\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Add a link to the page page-number around arg. This only works in the PDF backend.\\n\\n    \\\\markup {\\n      \\\\page-link #2  { \\\\italic { This links to page 2... } }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\page-ref\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\page-ref\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Reference to a page number. label is the label set on the referenced page (using the \\\\label command), gauge a markup used to estimate the maximum width of the page number, and default the value to display when label is not found.\"\n  },\n  {\n    \"label\": \"\\\\pageBreak\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\pageBreak, \\\\noPageBreak.\"\n  },\n  {\n    \"label\": \"\\\\pageTurn\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\pageTurn, \\\\noPageTurn, \\\\allowPageTurn.\"\n  },\n  {\n    \"label\": \"\\\\paper\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\paper\",\n    \"detail\": \"4.1.2 Paper size and automatic scaling\",\n    \"documentation\": \"‘A4’ is the default value when no explicit paper size is set. However, there are two functions that can be used to change it:\\n\\nset-default-paper-size\\n#(set-default-paper-size \\\"quarto\\\")\\nwhich must always be placed at the toplevel scope, and\\n\\nset-paper-size\\n\\\\paper {\\n  #(set-paper-size \\\"tabloid\\\")\\n}\\nwhich must always be placed in a \\\\paper block.\\n\\n\\n\\nIf the set-default-paper-size function is used in the toplevel scope, it must come before any \\\\paper block. set-default-paper-size sets the paper size for all pages, whereas set-paper-size only sets the paper size for the pages that the \\\\paper block applies to. For example, if the \\\\paper block is at the top of the file, then it will apply the paper size to all pages. If the \\\\paper block is inside a \\\\book, then the paper size will only apply to that book.\\n\\nWhen the set-paper-size function is used, it must be placed before any other functions used within the same \\\\paper block. See Automatic scaling to paper size.\\n\\nPaper sizes are defined in ‘scm/paper.scm’, and while it is possible to add custom sizes, they will be overwritten on subsequent software updates. The available paper sizes are listed in Predefined paper sizes.\\n\\nThe following command can be used in the file to add a custom paper size which can then be used with set-default-paper-size or set-paper-size as appropriate,\\n\\n    #(set! paper-alist (cons '(\\\"my size\\\" . (cons (* 15 in) (* 3 in))) paper-alist))\\n    \\\\paper {\\n      #(set-paper-size \\\"my size\\\")\\n    }\\n\\nThe units in (inches), cm (centimeters) and mm (millimeters) can all be used.\"\n  },\n  {\n    \"label\": \"\\\\parallelMusic\",\n    \"detail\": \"Writing music in parallel\",\n    \"documentation\": \"Music for multiple parts can be interleaved in input code. The function \\\\parallelMusic accepts a list with the names of a number of variables to be created, and a musical expression. The content of alternate measures from the expression become the value of the respective variables, so you can use them afterwards to print the music.\\n\\nNote: Bar checks | must be used, and the measures must be of the same length.\\n\\n\\n\\n    \\\\parallelMusic #'(voiceA voiceB voiceC) {\\n      % Bar 1\\n      r8 g'16 c'' e'' g' c'' e'' r8 g'16 c'' e'' g' c'' e'' |\\n      r16 e'8.~   e'4            r16 e'8.~   e'4            |\\n      c'2                        c'2                        |\\n      % Bar 2\\n      r8 a'16 d'' f'' a' d'' f'' r8 a'16 d'' f'' a' d'' f'' |\\n      r16 d'8.~   d'4            r16 d'8.~   d'4            |\\n      c'2                        c'2                        |\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff << \\\\voiceA \\\\\\\\ \\\\voiceB >>\\n      \\\\new Staff { \\\\clef bass \\\\voiceC }\\n    >>\\n\\nRelative mode may be used. Note that the \\\\relative command is not used inside \\\\parallelMusic itself. The notes are relative to the preceding note in the voice, not to the previous note in the input – in other words, relative notes for voiceA ignore the notes in voiceB.\\n\\n    \\\\parallelMusic #'(voiceA voiceB voiceC) {\\n      % Bar 1\\n      r8 g16 c e g, c e r8 g,16 c e g, c e  |\\n      r16 e8.~ e4       r16 e8.~  e4        |\\n      c2                c                   |\\n      % Bar 2\\n      r8 a,16 d f a, d f r8 a,16 d f a, d f |\\n      r16 d8.~  d4       r16 d8.~  d4       |\\n      c2                 c                  |\\n     }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff << \\\\relative c'' \\\\voiceA \\\\\\\\ \\\\relative c' \\\\voiceB >>\\n      \\\\new Staff \\\\relative c' { \\\\clef bass \\\\voiceC }\\n    >>\\n\\nThis works quite well for piano music. This example maps four consecutive measures to four variables:\\n\\n    global = {\\n      \\\\key g \\\\major\\n      \\\\time 2/4\\n    }\\n    \\\\parallelMusic #'(voiceA voiceB voiceC voiceD) {\\n      % Bar 1\\n      a8    b     c   d     |\\n      d4          e         |\\n      c16 d e fis d e fis g |\\n      a4          a         |\\n      % Bar 2\\n      e8      fis  g     a   |\\n      fis4         g         |\\n      e16 fis g  a fis g a b |\\n      a4           a         |\\n      % Bar 3 ...\\n    }\\n    \\\\score {\\n      \\\\new PianoStaff <<\\n         \\\\new Staff {\\n           \\\\global\\n           <<\\n             \\\\relative c'' \\\\voiceA\\n             \\\\\\\\\\n             \\\\relative c'  \\\\voiceB\\n           >>\\n         }\\n         \\\\new Staff {\\n           \\\\global \\\\clef bass\\n           <<\\n             \\\\relative c \\\\voiceC\\n             \\\\\\\\\\n             \\\\relative c \\\\voiceD\\n           >>\\n         }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\parenthesize\",\n    \"detail\": \"Parentheses\",\n    \"documentation\": \"Objects may be parenthesized by prefixing \\\\parenthesize to the music event. When prefixed to a chord, it parenthesizes every note. Individual notes inside a chord may also be parenthesized.\\n\\n    c2 \\\\parenthesize d\\n    c2 \\\\parenthesize <c e g>\\n    c2 <c \\\\parenthesize e g>\\n\\nNon-note objects may be parenthesized as well. For articulations, a hyphen is needed before the \\\\parenthesize command.\\n\\n    c2-\\\\parenthesize -. d\\n    c2 \\\\parenthesize r\"\n  },\n  {\n    \"label\": \"\\\\parenthesize\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw parentheses around arg. This is useful for parenthesizing a column containing several lines of text.\\n\\n    \\\\markup {\\n      \\\\line {\\n        \\\\parenthesize {\\n          \\\\column {\\n            foo\\n            bar\\n          }\\n        }\\n        \\\\override #'(angularity . 2) {\\n          \\\\parenthesize {\\n            \\\\column {\\n              bah\\n              baz\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\nUsed properties:\\n\\n - width (0.25)\\n - thickness (1)\\n - size (1)\\n - padding\\n - angularity (0)\"\n  },\n  {\n    \"label\": \"\\\\partcombine\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"Automatic part combining is used to merge two separate parts of music onto a single staff. This can be especially helpful when typesetting orchestral scores. A single Voice is printed while the two parts of music are the same, but in places where they differ, a second Voice is printed. Stem directions are set up & down accordingly while Solo and a due parts are also identified and marked appropriately.\\n\\nThe syntax for automatic part combining is:\\n\\n    \\\\partcombine musicexpr1 musicexpr2\\n\\nThe following example demonstrates the basic functionality, putting parts on a single staff as polyphony and setting stem directions accordingly. The same variables are used for the independent parts and the combined staff.\\n\\n    instrumentOne = \\\\relative c' {\\n      c4 d e f |\\n      R1 |\\n      d'4 c b a |\\n      b4 g2 f4 |\\n      e1 |\\n    }\\n    instrumentTwo = \\\\relative g' {\\n      R1 |\\n      g4 a b c |\\n      d4 c b a |\\n      g4 f( e) d |\\n      e1 |\\n    }\\n    <<\\n      \\\\new Staff \\\\instrumentOne\\n      \\\\new Staff \\\\instrumentTwo\\n      \\\\new Staff \\\\partcombine \\\\instrumentOne \\\\instrumentTwo\\n    >>\\n\\nBoth parts have identical notes in the third measure, so only one instance of the notes is printed. Stem, slur, and tie directions are set automatically, depending on whether the parts are playing solo or in unison. When needed in polyphony situations, the first part (with context called one) gets “up” stems, while the second (called two) always gets “down” stems. In solo situations, the first and second parts get marked with “Solo” and “Solo II”, respectively. The unison (a due) parts are marked with the text “a2”.\\n\\nBoth arguments to \\\\partcombine will be interpreted as separate Voice contexts, so if the music is being specified in relative mode then both parts must contain a \\\\relative function, i.e.,\\n\\n    \\\\partcombine\\n      \\\\relative … musicexpr1\\n      \\\\relative … musicexpr2\\n\\nA \\\\relative section that encloses a \\\\partcombine has no effect on the pitches of musicexpr1 or musicexpr2.\"\n  },\n  {\n    \"label\": \"\\\\partcombine\",\n    \"detail\": \"Polyphony with shared lyrics\",\n    \"documentation\": \"When two voices with different rhythms share the same lyrics, aligning the lyrics to one of the voices may lead to problems in the other voice. For example, the second lyric extender below is too short, since the lyrics are aligned only to the top voice:\\n\\n    soprano = \\\\relative { b'8( c d c) d2 }\\n    alto = \\\\relative { g'2 b8( a g a) }\\n    words = \\\\lyricmode { la __ la __ }\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"sopranoVoice\\\" { \\\\voiceOne \\\\soprano }\\n      \\\\new Voice { \\\\voiceTwo \\\\alto }\\n      \\\\new Lyrics \\\\lyricsto \\\"sopranoVoice\\\" \\\\words\\n    >>\\n\\nTo get the desired result, align the lyrics to a new NullVoice context containing a suitable combination of the two voices. The notes of the NullVoice context do not appear on the printed page, but can be used to align the lyrics appropriately:\\n\\n    soprano = \\\\relative { b'8( c d c) d2 }\\n    alto = \\\\relative { g'2 b8( a g a) }\\n    aligner = \\\\relative { b'8( c d c) b( a g a) }\\n    words = \\\\lyricmode { la __ la __ }\\n    \\\\new Staff <<\\n      \\\\new Voice { \\\\voiceOne \\\\soprano }\\n      \\\\new Voice { \\\\voiceTwo \\\\alto }\\n      \\\\new NullVoice = \\\"aligner\\\" \\\\aligner\\n      \\\\new Lyrics \\\\lyricsto \\\"aligner\\\" \\\\words\\n    >>\\n\\nThe NullVoice context must be placed within a Staff context and contain notes that are already being displayed in that staff and that are also in the same octave. Otherwise the NullVoice may interact with the printed voices in unexpected ways. For example, arbitrary notes in the NullVoice may cause accidentals to appear (or disappear) on the staff.\\n\\nThis method also can be used with the \\\\partcombine function, which does not allow lyrics on its own:\\n\\n    soprano = \\\\relative { b'8( c d c) d2 }\\n    alto = \\\\relative { g'2 b8( a g a) }\\n    aligner = \\\\relative { b'8( c d c) b( a g a) }\\n    words = \\\\lyricmode { la __ la __ }\\n    \\\\new Staff <<\\n      \\\\new Voice \\\\partcombine \\\\soprano \\\\alto\\n      \\\\new NullVoice = \\\"aligner\\\" \\\\aligner\\n      \\\\new Lyrics \\\\lyricsto \\\"aligner\\\" \\\\words\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineApart\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineAutomatic\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineChords\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineSoloI\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineSoloII\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineUnisono\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partial\",\n    \"detail\": \"Upbeats\",\n    \"documentation\": \"Partial or pick-up measures, such as an anacrusis or an upbeat, are entered using the \\\\partial command,\\n\\n    \\\\partial duration\\n\\nwhere duration is the remaining length of the partial measure before the start of the next full measure.\\n\\n    \\\\time 3/4\\n    \\\\partial 8\\n    e8 | a4 c8 b c4 |\\n\\nThe duration can be any value less than a full measure:\\n\\n    \\\\time 3/4\\n    \\\\partial 4.\\n    r4 e8 | a4 c8 b c4 |\\n\\n\\\\partial duration can also be written as:\\n\\n    \\\\set Timing.measurePosition -duration\\n\\nSo the first example above could be written:\\n\\n    \\\\time 3/4\\n    \\\\set Timing.measurePosition = #(ly:make-moment -1/8)\\n    e8 | a4 c8 b c4 |\\n\\nThe property measurePosition contains a rational number, which is usually positive and indicates how much of the measure has passed at this point. The \\\\partial duration command sets it to a negative number, when it has a different meaning: it then says that the current (first) bar will be preceded by a bar 0 (the partial bar) with a duration given by duration.\"\n  },\n  {\n    \"label\": \"\\\\partial\",\n    \"detail\": \"1.4.1 Long repeats\",\n    \"documentation\": \"The syntax for a normal repeat is\\n\\n    \\\\repeat volta repeatcount musicexpr\\n\\nwhere musicexpr is a music expression.\\n\\nA single repeat without an alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f }\\n    c2 d\\n    \\\\repeat volta 2 { d4 e f g }\\n\\nAlternative endings can be produced using \\\\alternative. Each group of alternatives must be themselves, enclosed in a set of braces.\\n\\n    \\\\repeat volta repeatcount musicexpr\\n    \\\\alternative {\\n      { musicexpr }\\n    }\\n\\nwhere musicexpr is a music expression.\\n\\nIf there are more repeats than there are alternate endings, the earliest repeats are given the first alternative.\\n\\nA single repeat with one alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with one alternate ending:\\n\\n    \\\\repeat volta 4 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with more than one alternate ending:\\n\\n    \\\\repeat volta 3 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n      { a2 g | }\\n    }\\n    c1\\n\\nNote: If there are two or more alternatives, nothing should appear between the closing brace of one and the opening brace of the next in an \\\\alternative block, otherwise you will not get the expected number of endings.\\n\\n\\n\\nNote: If you include \\\\relative inside a \\\\repeat without explicitly instantiating the Voice context, extra (unwanted) staves will appear. See An extra staff appears.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\partial\",\n    \"detail\": \"Normal repeats\",\n    \"documentation\": \"If a repeat starts in the middle of a measure and has no alternate endings, normally the end of the repeat will also fall in the middle of a measure, so that the two ends add up to one complete measure. In such cases, the repeat signs do not constitute true bar lines. Do not use \\\\partial commands or bar checks where these repeat signs are printed:\\n\\n    % no \\\\partial here\\n    c4 e g  % no bar check here\\n    % no \\\\partial here\\n    \\\\repeat volta 4 {\\n      e4 |\\n      c2 e |\\n      % no \\\\partial here\\n      g4 g g  % no bar check here\\n    }\\n    % no \\\\partial here\\n    g4 |\\n    a2 a |\\n    g1 |\\n\\nSimilarly, if a repeat begins with the initial partial measure of a score and has no alternate endings, the same conditions apply as in the above example, except that in this case the \\\\partial command is required at the beginning of the score:\\n\\n    \\\\partial 4  % required\\n    \\\\repeat volta 4 {\\n      e4 |\\n      c2 e |\\n      % no \\\\partial here\\n      g4 g g  % no bar check here\\n    }\\n    % no \\\\partial here\\n    g4 |\\n    a2 a |\\n    g1 |\\n\\nWhen alternate endings are added to a repeat that begins with an incomplete measure, it becomes necessary to set the Timing.measureLength context property manually, in the following specific places:\\n\\n - at the start of any incomplete measures in the \\\\alternative block, which normally occur at the end of each alternative, except (in most cases) the last.\\n - at the start of each alternative, except the first.\\n\\n    \\\\partial 4\\n    \\\\repeat volta 2 { e4 | c2 e | }\\n    \\\\alternative {\\n      {\\n        f2 d |\\n        \\\\set Timing.measureLength = #(ly:make-moment 3/4)\\n        g4 g g  % optional bar check is allowed here\\n      }\\n      {\\n        \\\\set Timing.measureLength = #(ly:make-moment 4/4)\\n        a2 a |\\n      }\\n    }\\n    g1 |\\n\\nThe measureLength property is described in Time administration.\"\n  },\n  {\n    \"label\": \"\\\\path\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draws a path with line thickness according to the directions given in commands. commands is a list of lists where the car of each sublist is a drawing command and the cdr comprises the associated arguments for each command.\\n\\nThere are seven commands available to use in the list commands: moveto, rmoveto, lineto, rlineto, curveto, rcurveto, and closepath. Note that the commands that begin with r are the relative variants of the other three commands.\\n\\nThe commands moveto, rmoveto, lineto, and rlineto take 2 arguments; they are the X and Y coordinates for the destination point.\\n\\nThe commands curveto and rcurveto create cubic Bézier curves, and take 6 arguments; the first two are the X and Y coordinates for the first control point, the second two are the X and Y coordinates for the second control point, and the last two are the X and Y coordinates for the destination point.\\n\\nThe closepath command takes zero arguments and closes the current subpath in the active path.\\n\\nNote that a sequence of commands must begin with a moveto or rmoveto to work with the SVG output.\\n\\nLine-cap styles and line-join styles may be customized by overriding the line-cap-style and line-join-style properties, respectively. Available line-cap styles are 'butt, 'round, and 'square. Available line-join styles are 'miter, 'round, and 'bevel.\\n\\nThe property filled specifies whether or not the path is filled with color.\\n\\n    samplePath =\\n      #'((moveto 0 0)\\n         (lineto -1 1)\\n         (lineto 1 1)\\n         (lineto 1 -1)\\n         (curveto -5 -5 -5 5 -1 0)\\n         (closepath))\\n    \\\\markup {\\n      \\\\path #0.25 #samplePath\\n      \\\\override #'(line-join-style . miter) \\\\path #0.25 #samplePath\\n      \\\\override #'(filled . #t) \\\\path #0.25 #samplePath\\n    }\\n\\nUsed properties:\\n\\n - filled (#f)\\n - line-join-style (round)\\n - line-cap-style (round)\"\n  },\n  {\n    \"label\": \"\\\\pattern\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Prints count times a pattern markup. Patterns are spaced apart by space. Patterns are distributed on axis.\\n\\n    \\\\markup \\\\column {\\n      \\\"Horizontally repeated :\\\"\\n      \\\\pattern #7 #X #2 \\\\flat\\n      \\\\null\\n      \\\"Vertically repeated :\\\"\\n      \\\\pattern #3 #Y #0.5 \\\\flat\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pes\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"Two adjacent heads can be tied together with the \\\\pes and \\\\flexa infix commands for a rising and falling line of melody, respectively.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDashed\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDashPattern\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Custom dash patterns for phrasing slurs can be defined:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashPattern #0.7 #0.75\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDashPattern #0.5 #2.0\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\\n\\nDash pattern definitions for phrasing slurs have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see the snippets under Slurs.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDotted\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDown\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurHalfDashed\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurHalfDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurHalfSolid\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurHalfSolid\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurHalfDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurHalfSolid\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurNeutral\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurSolid\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurUp\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrygian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\pitchedTrill\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Trills that require an auxiliary note with an explicit pitch can be typeset with the \\\\pitchedTrill command. The first argument is the main note, and the second is the trilled note, printed as a stemless note head in parentheses.\\n\\n    \\\\pitchedTrill\\n    d2\\\\startTrillSpan fis\\n    d2\\n    c2\\\\stopTrillSpan\\n    r2\"\n  },\n  {\n    \"label\": \"\\\\portato\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\postscript\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Advanced graphic features include the ability to include external image files converted to the Encapsulated PostScript format (eps), or to directly embed graphics into the input file, using native PostScript code. In such a case, it may be useful to explicitly specify the size of the drawing, as demonstrated below:\\n\\n    c1^\\\\markup {\\n      \\\\combine\\n        \\\\epsfile #X #10 #\\\"./context-example.eps\\\"\\n        \\\\with-dimensions #'(0 . 6) #'(0 . 10)\\n        \\\\postscript #\\\"\\n          -2 3 translate\\n          2.7 2 scale\\n          newpath\\n          2 -1 moveto\\n          4 -2 4 1 1 arct\\n          4 2 3 3 1 arct\\n          0 4 0 3 1 arct\\n          0 0 1 -1 1 arct\\n          closepath\\n          stroke\\\"\\n      }\\n    c\\n\\nAn exhaustive list of graphics-specific commands can be found in Graphic.\"\n  },\n  {\n    \"label\": \"\\\\postscript\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"This inserts str directly into the output as a PostScript command string.\\n\\n    ringsps = #\\\"\\n      0.15 setlinewidth\\n      0.9 0.6 moveto\\n      0.4 0.6 0.5 0 361 arc\\n      stroke\\n      1.0 0.6 0.5 0 361 arc\\n      stroke\\n      \\\"\\n    rings = \\\\markup {\\n      \\\\with-dimensions #'(-0.2 . 1.6) #'(0 . 1.2)\\n      \\\\postscript #ringsps\\n    }\\n    \\\\relative c'' {\\n      c2^\\\\rings\\n      a2_\\\\rings\\n    }\"\n  },\n  {\n    \"label\": \"\\\\powerChords\",\n    \"detail\": \"Indicating power chords\",\n    \"documentation\": \"Power chords and their symbols can be engraved in chord mode or as chord constructs:\\n\\n    ChordsAndSymbols = {\\n      \\\\chordmode {\\n        \\\\powerChords\\n        e,,1:1.5\\n        a,,1:1.5.8\\n        \\\\set minimumFret = #8\\n        c,1:1.5\\n        f,1:1.5.8\\n      }\\n      \\\\set minimumFret = #5\\n      <a, e>1\\n      <g d' g'>1\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new ChordNames {\\n        \\\\ChordsAndSymbols\\n        }\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\ChordsAndSymbols\\n        }\\n        \\\\new TabStaff {\\n          \\\\ChordsAndSymbols\\n        }\\n      >>\\n    }\\n\\nPower chord symbols are automatically switched off as soon as one of the other common chord modifier is used:\\n\\n    mixedChords = \\\\chordmode {\\n      c,1\\n      \\\\powerChords\\n      b,,1:1.5\\n      fis,,1:1.5.8\\n      g,,1:m\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new ChordNames {\\n          \\\\mixedChords\\n        }\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\mixedChords\\n        }\\n        \\\\new TabStaff {\\n          \\\\mixedChords\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\pppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ppppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\prall\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\pralldown\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\prallmordent\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\prallprall\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\prallup\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\predefinedFretboardsOff\",\n    \"detail\": \"Automatic fret diagrams\",\n    \"documentation\": \"As no predefined diagrams are loaded by default, automatic calculation of fret diagrams is the default behavior. Once default diagrams are loaded, automatic calculation can be enabled and disabled with predefined commands:\\n\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            <c e g c' e'>\\n                            #guitar-tuning\\n                            #\\\"x;3-1-(;5-2;5-3;5-4;3-1-1-);\\\"\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 c c\\n        }\\n      }\\n      \\\\new FretBoards {\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOff\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOn\\n        <c e g c' e'>1\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n      }\\n    >>\\n\\nSometimes the fretboard calculator will be unable to find an acceptable diagram. This can often be remedied by manually assigning a note to a string. In many cases, only one note need be manually placed on a string; the rest of the notes will then be placed appropriately by the FretBoards context.\"\n  },\n  {\n    \"label\": \"\\\\predefinedFretboardsOn\",\n    \"detail\": \"Automatic fret diagrams\",\n    \"documentation\": \"As no predefined diagrams are loaded by default, automatic calculation of fret diagrams is the default behavior. Once default diagrams are loaded, automatic calculation can be enabled and disabled with predefined commands:\\n\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            <c e g c' e'>\\n                            #guitar-tuning\\n                            #\\\"x;3-1-(;5-2;5-3;5-4;3-1-1-);\\\"\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 c c\\n        }\\n      }\\n      \\\\new FretBoards {\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOff\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOn\\n        <c e g c' e'>1\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n      }\\n    >>\\n\\nSometimes the fretboard calculator will be unable to find an acceptable diagram. This can often be remedied by manually assigning a note to a string. In many cases, only one note need be manually placed on a string; the rest of the notes will then be placed appropriately by the FretBoards context.\"\n  },\n  {\n    \"label\": \"\\\\property-recursive\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Print out a warning when a header field markup contains some recursive markup definition.\"\n  },\n  {\n    \"label\": \"\\\\pt\",\n    \"detail\": \"5.4.3 Distances and measurements\",\n    \"documentation\": \"Distances in LilyPond are of two types: absolute and scaled.\\n\\nAbsolute distances are used for specifying margins, indents, and other page layout details, and are by default specified in millimeters. Distances may be specified in other units by following the quantity by \\\\mm, \\\\cm, \\\\in (inches), or \\\\pt (points, 1/72.27 of an inch). Page layout distances can also be specified in scalable units (see the following paragraph) by appending \\\\staff-space to the quantity. Page layout is described in detail in Page layout.\\n\\nScaled distances are always specified in units of the staff-space or, rarely, the half staff-space. The staff-space is the distance between two adjacent staff lines. The default value can be changed globally by setting the global staff size, or it can be overridden locally by changing the staff-space property of StaffSymbol. Scaled distances automatically scale with any change to the either the global staff size or the staff-space property of StaffSymbol, but fonts scale automatically only with changes to the global staff size. The global staff size thus enables the overall size of a rendered score to be easily varied. For the methods of setting the global staff size see Setting the staff size.\"\n  },\n  {\n    \"label\": \"\\\\pushToTag\",\n    \"detail\": \"Using tags\",\n    \"documentation\": \"The \\\\tag #'partA command marks a music expression with the name partA. Expressions tagged in this way can be selected or filtered out by name later, using either \\\\keepWithTag #'name or \\\\removeWithTag #'name. The result of applying these filters to tagged music is as follows:\\n\\nFilter\\tResult\\nTagged music preceded by \\\\keepWithTag #'name or \\\\keepWithTag #'(name1 name2…)\\tUntagged music and music tagged with any of the given tag names is included; music tagged with any other tag name is excluded.\\nTagged music preceded by \\\\removeWithTag #'name or \\\\removeWithTag #'(name1 name2…)\\tUntagged music and music not tagged with any of the given tag names is included; music tagged with any of the given tag names is excluded.\\nTagged music not preceded by either \\\\keepWithTag or \\\\removeWithTag\\tAll tagged and untagged music is included.\\n\\n\\nThe arguments of the \\\\tag, \\\\keepWithTag and \\\\removeWithTag commands should be a symbol (such as #'score or #'part), followed by a music expression.\\n\\nIn the following example, we see two versions of a piece of music, one showing trills with the usual notation, and one with trills explicitly expanded:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand { \\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\keepWithTag #'trills \\\\music\\n    }\\n    \\\\score {\\n      \\\\keepWithTag #'expand \\\\music\\n    }\\n\\nAlternatively, it is sometimes easier to exclude sections of music:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand {\\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\removeWithTag #'expand\\n      \\\\music\\n    }\\n    \\\\score {\\n      \\\\removeWithTag #'trills\\n      \\\\music\\n    }\\n\\nTagged filtering can be applied to articulations, texts, etc. by prepending\\n\\n    -\\\\tag #'your-tag\\n\\nto an articulation. For example, this would define a note with a conditional fingering indication and a note with a conditional annotation:\\n\\n    c1-\\\\tag #'finger ^4\\n    c1-\\\\tag #'warn ^\\\"Watch!\\\"\\n\\nMultiple tags may be placed on expressions with multiple \\\\tag entries, or by combining multiple tags into one symbol list:\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'a \\\\tag #'both { a4 a a a }\\n      \\\\tag #'(b both) { b4 b b b }\\n    }\\n    <<\\n    \\\\keepWithTag #'a \\\\music\\n    \\\\keepWithTag #'b \\\\music\\n    \\\\keepWithTag #'both \\\\music\\n    >>\\n\\nMultiple \\\\removeWithTag filters may be applied to a single music expression to remove several differently named tagged sections. Alternatively, you can use a single \\\\removeWithTag with a list of tags.\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'A { a4 a a a }\\n      \\\\tag #'B { b4 b b b }\\n      \\\\tag #'C { c4 c c c }\\n      \\\\tag #'D { d4 d d d }\\n    }\\n    \\\\new Voice {\\n      \\\\removeWithTag #'B\\n      \\\\removeWithTag #'C\\n      \\\\music\\n      \\\\removeWithTag #'(B C)\\n      \\\\music\\n    }\\n\\nTwo or more \\\\keepWithTag filters applied to a single music expression will cause all tagged sections to be removed, as the first filter will remove all tagged sections except the one named, and the second filter will remove even that tagged section. Usually you would rather want to use a single \\\\keepWithTag command with a list of multiple tags: this will only remove tagged sections not given in any of the tags.\\n\\nSometimes you want to splice some music at a particular place in an existing music expression. You can use \\\\pushToTag and \\\\appendToTag for adding material at the front or end of the elements of an existing music construct. Not every music construct has elements, but sequential and simultaneous music are safe bets:\\n\\n    test = { \\\\tag #'here { \\\\tag #'here <<c''>> } }\\n    {\\n      \\\\pushToTag #'here c'\\n      \\\\pushToTag #'here e'\\n      \\\\pushToTag #'here g' \\\\test\\n      \\\\appendToTag #'here c'\\n      \\\\appendToTag #'here e'\\n      \\\\appendToTag #'here g' \\\\test\\n    }\\n\\nBoth commands get a tag, the material to splice in at every occurence of the tag, and the tagged expression. The commands make sure to copy everything that they change so that the original \\\\test retains its meaning.\"\n  },\n  {\n    \"label\": \"\\\\put-adjacent\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put arg2 next to arg1, without moving arg1.\"\n  },\n  {\n    \"label\": \"\\\\quilisma\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\quilisma\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\quoteDuring\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\quoteDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\raise\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\raise\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Raise arg by the distance amount. A negative amount indicates lowering, see also \\\\lower.\\n\\nThe argument to \\\\raise is the vertical displacement amount, measured in (global) staff spaces. \\\\raise and \\\\super raise objects in relation to their surrounding markups.\\n\\nIf the text object itself is positioned above or below the staff, then \\\\raise cannot be used to move it, since the mechanism that positions it next to the staff cancels any shift made with \\\\raise. For vertical positioning, use the padding and/or extra-offset properties.\\n\\n    \\\\markup {\\n      C\\n      \\\\small\\n      \\\\bold\\n      \\\\raise #1.0\\n      9/7+\\n    }\"\n  },\n  {\n    \"label\": \"\\\\relative\",\n    \"detail\": \"Relative octave entry\",\n    \"documentation\": \"Absolute octave entry requires specifying the octave for every single note. Relative octave entry, in contrast, specifies each octave in relation to the last note: changing one note’s octave will affect all of the following notes.\\n\\nRelative note mode has to be entered explicitly using the \\\\relative command:\\n\\n    \\\\relative startpitch musicexpr\\n\\nIn relative mode, each note is assumed to be as close to the previous note as possible. This means that the octave of each pitch inside musicexpr is calculated as follows:\\n\\n - If no octave changing mark is used on a pitch, its octave is calculated so that the interval with the previous note is less than a fifth. This interval is determined without considering accidentals.\\n - An octave changing mark ' or , can be added to respectively raise or lower a pitch by an extra octave, relative to the pitch calculated without an octave mark.\\n - Multiple octave changing marks can be used. For example, '' and ,, will alter the pitch by two octaves.\\n - The pitch of the first note is relative to startpitch. startpitch is specified in absolute octave mode. Which choices are meaningful?\\nan octave of c\\nIdentifying middle C with c' is quite basic, so finding octaves of c tends to be straightforward. If your music starts with gis above c''', you’d write something like \\\\relative c''' { gis' … }\\n\\nan octave of the first note inside\\nWriting \\\\relative gis''' { gis … } makes it easy to determine the absolute pitch of the first note inside.\\n\\nno explicit starting pitch\\nThis (namely writing \\\\relative { gis''' … }) can be viewed as a compact version of the previous option: the first note inside is written in absolute pitch itself. This happens to be equivalent to choosing f as the reference pitch.\\n\\nThe documentation will usually employ the first option.\\n\\n\\n\\nHere is the relative mode shown in action:\\n\\n    \\\\relative c {\\n      \\\\clef bass\\n      c d e f\\n      g a b c\\n      d e f g\\n    }\\n\\nOctave changing marks are used for intervals greater than a fourth:\\n\\n    \\\\relative c'' {\\n      c g c f,\\n      c' a, e'' c\\n    }\\n\\nA note sequence without a single octave mark can nevertheless span large intervals:\\n\\n    \\\\relative c {\\n      c f b e\\n      a d g c\\n    }\\n\\nWhen \\\\relative blocks are nested, the innermost \\\\relative block applies.\\n\\n    \\\\relative c' {\\n      c d e f\\n      \\\\relative c'' {\\n        c d e f\\n      }\\n    }\\n\\n\\\\relative has no effect on \\\\chordmode blocks.\\n\\n    \\\\new Staff {\\n      \\\\relative c''' {\\n        \\\\chordmode { c1 }\\n      }\\n      \\\\chordmode { c1 }\\n    }\\n\\n\\\\relative is not allowed inside of \\\\chordmode blocks.\\n\\nMusic inside a \\\\transpose block is absolute unless a \\\\relative is included.\\n\\n    \\\\relative c' {\\n      d e\\n      \\\\transpose f g {\\n        d e\\n        \\\\relative c' {\\n          d e\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\relative\",\n    \"detail\": \"Changing staff automatically\",\n    \"documentation\": \"A \\\\relative section that is outside of \\\\autochange has no effect on the pitches of the music, so if necessary, put \\\\relative inside \\\\autochange.\\n\\nIf additional control is needed over the individual staves, they can be created manually with the names \\\"up\\\" and \\\"down\\\". The \\\\autochange command will then switch its voice between the existing staves.\\n\\nNote: If staves are created manually, they must be named \\\"up\\\" and \\\"down\\\".\\n\\n\\n\\nFor example, staves must be created manually in order to place a key signature in the lower staff:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"up\\\" {\\n        \\\\new Voice = \\\"melOne\\\" {\\n          \\\\key g \\\\major\\n          \\\\autochange \\\\relative c' {\\n            g8 b a c b d c e\\n            d8 r fis, g a2\\n          }\\n        }\\n      }\\n      \\\\new Staff = \\\"down\\\" {\\n        \\\\key g \\\\major\\n        \\\\clef bass\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\RemoveEmptyStaves\",\n    \"detail\": \"Hiding staves\",\n    \"documentation\": \"Staff lines can be hidden by removing the Staff_symbol_engraver from the Staff context. As an alternative, \\\\stopStaff may be used.\\n\\n    \\\\new Staff \\\\with {\\n      \\\\remove \\\"Staff_symbol_engraver\\\"\\n    }\\n    \\\\relative c''' { a8 f e16 d c b a2 }\\n\\nEmpty staves can be hidden by setting the \\\\Staff \\\\RemoveEmptyStaves command in the \\\\layout block. In orchestral scores, this style is known as ‘Frenched Score’. By default, this command hides and removes all empty staves in a score except for those in the first system.\\n\\nNote: A staff is considered empty when it contains only multi-measure rests, rests, skips, spacer rests, or a combination of these elements.\\n\\n\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n      }\\n    }\\n    \\\\relative c' <<\\n      \\\\new Staff {\\n        e4 f g a \\\\break\\n        b1 \\\\break\\n        a4 b c2\\n      }\\n      \\\\new Staff {\\n        c,4 d e f \\\\break\\n        R1 \\\\break\\n        f4 g c,2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\RemoveEmptyStaves\",\n    \"detail\": \"Hiding staves\",\n    \"documentation\": \"The \\\\VaticanaStaff \\\\RemoveEmptyStaves command may be used to hide empty staves in ancient music contexts. Similarly, \\\\RhythmicStaff \\\\RemoveEmptyStaves may be used to hide empty RhythmicStaff contexts.\"\n  },\n  {\n    \"label\": \"\\\\removeWithTag\",\n    \"detail\": \"Using tags\",\n    \"documentation\": \"The \\\\tag #'partA command marks a music expression with the name partA. Expressions tagged in this way can be selected or filtered out by name later, using either \\\\keepWithTag #'name or \\\\removeWithTag #'name. The result of applying these filters to tagged music is as follows:\\n\\nFilter\\tResult\\nTagged music preceded by \\\\keepWithTag #'name or \\\\keepWithTag #'(name1 name2…)\\tUntagged music and music tagged with any of the given tag names is included; music tagged with any other tag name is excluded.\\nTagged music preceded by \\\\removeWithTag #'name or \\\\removeWithTag #'(name1 name2…)\\tUntagged music and music not tagged with any of the given tag names is included; music tagged with any of the given tag names is excluded.\\nTagged music not preceded by either \\\\keepWithTag or \\\\removeWithTag\\tAll tagged and untagged music is included.\\n\\n\\nThe arguments of the \\\\tag, \\\\keepWithTag and \\\\removeWithTag commands should be a symbol (such as #'score or #'part), followed by a music expression.\\n\\nIn the following example, we see two versions of a piece of music, one showing trills with the usual notation, and one with trills explicitly expanded:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand { \\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\keepWithTag #'trills \\\\music\\n    }\\n    \\\\score {\\n      \\\\keepWithTag #'expand \\\\music\\n    }\\n\\nAlternatively, it is sometimes easier to exclude sections of music:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand {\\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\removeWithTag #'expand\\n      \\\\music\\n    }\\n    \\\\score {\\n      \\\\removeWithTag #'trills\\n      \\\\music\\n    }\\n\\nTagged filtering can be applied to articulations, texts, etc. by prepending\\n\\n    -\\\\tag #'your-tag\\n\\nto an articulation. For example, this would define a note with a conditional fingering indication and a note with a conditional annotation:\\n\\n    c1-\\\\tag #'finger ^4\\n    c1-\\\\tag #'warn ^\\\"Watch!\\\"\\n\\nMultiple tags may be placed on expressions with multiple \\\\tag entries, or by combining multiple tags into one symbol list:\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'a \\\\tag #'both { a4 a a a }\\n      \\\\tag #'(b both) { b4 b b b }\\n    }\\n    <<\\n    \\\\keepWithTag #'a \\\\music\\n    \\\\keepWithTag #'b \\\\music\\n    \\\\keepWithTag #'both \\\\music\\n    >>\\n\\nMultiple \\\\removeWithTag filters may be applied to a single music expression to remove several differently named tagged sections. Alternatively, you can use a single \\\\removeWithTag with a list of tags.\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'A { a4 a a a }\\n      \\\\tag #'B { b4 b b b }\\n      \\\\tag #'C { c4 c c c }\\n      \\\\tag #'D { d4 d d d }\\n    }\\n    \\\\new Voice {\\n      \\\\removeWithTag #'B\\n      \\\\removeWithTag #'C\\n      \\\\music\\n      \\\\removeWithTag #'(B C)\\n      \\\\music\\n    }\\n\\nTwo or more \\\\keepWithTag filters applied to a single music expression will cause all tagged sections to be removed, as the first filter will remove all tagged sections except the one named, and the second filter will remove even that tagged section. Usually you would rather want to use a single \\\\keepWithTag command with a list of multiple tags: this will only remove tagged sections not given in any of the tags.\\n\\nSometimes you want to splice some music at a particular place in an existing music expression. You can use \\\\pushToTag and \\\\appendToTag for adding material at the front or end of the elements of an existing music construct. Not every music construct has elements, but sequential and simultaneous music are safe bets:\\n\\n    test = { \\\\tag #'here { \\\\tag #'here <<c''>> } }\\n    {\\n      \\\\pushToTag #'here c'\\n      \\\\pushToTag #'here e'\\n      \\\\pushToTag #'here g' \\\\test\\n      \\\\appendToTag #'here c'\\n      \\\\appendToTag #'here e'\\n      \\\\appendToTag #'here g' \\\\test\\n    }\\n\\nBoth commands get a tag, the material to splice in at every occurence of the tag, and the tagged expression. The commands make sure to copy everything that they change so that the original \\\\test retains its meaning.\"\n  },\n  {\n    \"label\": \"\\\\repeat\",\n    \"detail\": \"1.4.1 Long repeats\",\n    \"documentation\": \"The syntax for a normal repeat is\\n\\n    \\\\repeat volta repeatcount musicexpr\\n\\nwhere musicexpr is a music expression.\\n\\nA single repeat without an alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f }\\n    c2 d\\n    \\\\repeat volta 2 { d4 e f g }\\n\\nAlternative endings can be produced using \\\\alternative. Each group of alternatives must be themselves, enclosed in a set of braces.\\n\\n    \\\\repeat volta repeatcount musicexpr\\n    \\\\alternative {\\n      { musicexpr }\\n    }\\n\\nwhere musicexpr is a music expression.\\n\\nIf there are more repeats than there are alternate endings, the earliest repeats are given the first alternative.\\n\\nA single repeat with one alternate ending:\\n\\n    \\\\repeat volta 2 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with one alternate ending:\\n\\n    \\\\repeat volta 4 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n    }\\n    c1\\n\\nMultiple repeats with more than one alternate ending:\\n\\n    \\\\repeat volta 3 { c4 d e f | }\\n    \\\\alternative {\\n      { c2 e | }\\n      { f2 g | }\\n      { a2 g | }\\n    }\\n    c1\\n\\nNote: If there are two or more alternatives, nothing should appear between the closing brace of one and the opening brace of the next in an \\\\alternative block, otherwise you will not get the expected number of endings.\\n\\n\\n\\nNote: If you include \\\\relative inside a \\\\repeat without explicitly instantiating the Voice context, extra (unwanted) staves will appear. See An extra staff appears.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\repeat percent\",\n    \"detail\": \"Percent repeats\",\n    \"documentation\": \"Repeated short patterns are printed once, and the repeated pattern is replaced with a special sign.\\n\\nThe syntax is\\n\\n    \\\\repeat percent number musicexpr\\n\\nwhere musicexpr is a music expression.\\n\\nPatterns that are shorter than one measure are replaced by slashes.\\n\\n    \\\\repeat percent 4 { c128 d e f }\\n    \\\\repeat percent 4 { c64 d e f }\\n    \\\\repeat percent 5 { c32 d e f }\\n    \\\\repeat percent 4 { c16 d e f }\\n    \\\\repeat percent 4 { c8 d }\\n    \\\\repeat percent 4 { c4 }\\n    \\\\repeat percent 2 { c2 }\\n\\nPatterns of one or two measures are replaced by percent-like symbols.\\n\\n    \\\\repeat percent 2 { c4 d e f }\\n    \\\\repeat percent 2 { c2 d }\\n    \\\\repeat percent 2 { c1 }\\n\\n    \\\\repeat percent 3 { c4 d e f | c2 g' }\\n\\nPatterns that are shorter than one measure but contain mixed durations use a double-percent symbol.\\n\\n    \\\\repeat percent 4 { c8. <d f>16 }\\n    \\\\repeat percent 2 { \\\\tuplet 3/2 { r8 c d } e4 }\"\n  },\n  {\n    \"label\": \"\\\\repeat tremolo\",\n    \"detail\": \"Tremolo repeats\",\n    \"documentation\": \"Tremolos can take two forms: alternation between two chords or two notes, and rapid repetition of a single note or chord. Tremolos consisting of an alternation are indicated by adding beams between the notes or chords being alternated, while tremolos consisting of the rapid repetition of a single note are indicated by adding beams or slashes to a single note.\\n\\nTo place tremolo marks between notes, use \\\\repeat with tremolo style:\\n\\n    \\\\repeat tremolo 8 { c16 d }\\n    \\\\repeat tremolo 6 { c16 d }\\n    \\\\repeat tremolo 2 { c16 d }\\n\\nThe \\\\repeat tremolo syntax expects exactly two notes within the braces, and the number of repetitions must correspond to a note value that can be expressed with plain or dotted notes. Thus, \\\\repeat tremolo 7 is valid and produces a double dotted note, but \\\\repeat tremolo 9 is not.\\n\\nThe duration of the tremolo equals the duration of the braced expression multiplied by the number of repeats: \\\\repeat tremolo 8 { c16 d16 } gives a whole note tremolo, notated as two whole notes joined by tremolo beams.\\n\\nThere are two ways to put tremolo marks on a single note. The \\\\repeat tremolo syntax is also used here, in which case the note should not be surrounded by braces:\\n\\n    \\\\repeat tremolo 4 c'16\"\n  },\n  {\n    \"label\": \"\\\\repeatTie\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"When a second alternative of a repeat starts with a tied note, you have to specify the repeated tie as follows:\\n\\n    \\\\repeat volta 2 { c g <c e>2~ }\\n    \\\\alternative {\\n      % First alternative: following note is tied normally\\n      { <c e>2. r4 }\\n      % Second alternative: following note has a repeated tie\\n      { <c e>2\\\\repeatTie d4 c } }\"\n  },\n  {\n    \"label\": \"\\\\repeatTie\",\n    \"detail\": \"Normal repeats\",\n    \"documentation\": \"Ties may be added to a second ending:\\n\\n    c1\\n    \\\\repeat volta 2 { c4 d e f~ }\\n    \\\\alternative {\\n      { f2 d }\\n      { f2\\\\repeatTie f, }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\repeatTie\",\n    \"detail\": \"Repeats with alternative endings\",\n    \"documentation\": \"When a note is tied over into two or more alternative endings a tie is used to carry the note into the first alternative ending and a \\\\repeatTie is used in the second and subsequent endings. This structure causes difficult alignment problems when lyrics are involved and increasing the length of the alternative sections so the tied notes are contained wholly within them may give a more acceptable result.\\n\\nThe tie creates a melisma into the first alternative, but not into the second and subsequent alternatives, so to align the lyrics correctly it is necessary to disable the automatic creation of melismata over the volta section and insert manual skips.\\n\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\time 2/4\\n          \\\\new Voice = \\\"melody\\\" {\\n            \\\\relative c'' {\\n              \\\\set melismaBusyProperties = #'()\\n              \\\\repeat volta 2 { b4 b ~}\\n              \\\\alternative { { b b } { b \\\\repeatTie c } }\\n              \\\\unset melismaBusyProperties\\n              c4 c\\n            }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            \\\\repeat volta 2 { Here's a __ }\\n            \\\\alternative {\\n              { \\\\skip 1 verse }\\n              { \\\\skip 1 sec }\\n            }\\n            ond one.\\n          }\\n        }\\n      >>\\n    }\\n\\nNote that if \\\\unfoldRepeats is used around a section containing \\\\repeatTie, the \\\\repeatTie should be removed to avoid both types of tie being printed.\\n\\nWhen the repeated section has different words a \\\\repeat cannot be used around the lyrics and \\\\skip commands need to be inserted manually, as before.\\n\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\time 2/4\\n          \\\\new Voice = \\\"melody\\\" {\\n            \\\\relative c'' {\\n              \\\\repeat volta 2 { b4 b ~}\\n              \\\\alternative { { b b } { b \\\\repeatTie c } }\\n              c4 c\\n            }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            Here's a __ verse.\\n            \\\\repeat unfold 2 { \\\\skip 1 }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            Here's one\\n            \\\\repeat unfold 2 { \\\\skip 1 }\\n            more to sing.\\n          }\\n        }\\n      >>\\n    }\\n\\nIf you wish to show extenders and hyphens into and out of alternative sections these must be inserted manually.\\n\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\time 2/4\\n          \\\\new Voice = \\\"melody\\\" {\\n            \\\\relative c'' {\\n              \\\\repeat volta 2 { b4 b ~}\\n              \\\\alternative { { b b } { b \\\\repeatTie c } }\\n              c4 c\\n            }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            Here's a __ verse.\\n            \\\\repeat unfold 2 { \\\\skip 1 }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            Here's \\\"a_\\\"\\n            \\\\skip 1\\n            \\\"_\\\" sec -- ond one.\\n          }\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\replace\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Used to automatically replace a string by another in the markup arg. Each pair of the alist replacements specifies what should be replaced. The key is the string to be replaced by the value string.\\n\\n    \\\\markup \\\\replace #'((\\\"thx\\\" . \\\"Thanks!\\\")) thx\"\n  },\n  {\n    \"label\": \"\\\\rest\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\rest\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"This produces a rest, with the duration for the rest type and augmentation dots. \\\"breve\\\", \\\"longa\\\" and \\\"maxima\\\" are valid input-strings.\\n\\nPrinting MultiMeasureRests could be enabled with \\\\override #'(multi-measure-rest . #t) If MultiMeasureRests are taken, the MultiMeasureRestNumber is printed above. This is enabled for all styles using default-glyphs. Could be disabled with \\\\override #'(multi-measure-rest-number . #f)\\n\\n    \\\\markup {\\n      \\\\rest #\\\"4..\\\"\\n      \\\\hspace #2\\n      \\\\rest #\\\"breve\\\"\\n      \\\\hspace #2\\n      \\\\override #'(multi-measure-rest . #t)\\n      {\\n      \\\\rest #\\\"7\\\"\\n      \\\\hspace #2\\n      \\\\override #'(multi-measure-rest-number . #f)\\n      \\\\rest #\\\"7\\\"\\n      }\\n    }\\n\\nUsed properties:\\n\\n - word-space (0.6)\\n - multi-measure-rest-number (#t)\\n - multi-measure-rest (#f)\\n - style (’())\"\n  },\n  {\n    \"label\": \"\\\\rest-by-number\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"A rest or multi-measure-rest symbol.\\n\\n    \\\\markup {\\n      \\\\rest-by-number #3 #2\\n      \\\\hspace #2\\n      \\\\rest-by-number #0 #1\\n      \\\\hspace #2\\n      \\\\override #'(multi-measure-rest . #t)\\n      \\\\rest-by-number #0 #0\\n    }\\n\\nUsed properties:\\n\\n - multi-measure-rest (#f)\\n - style (’())\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\retrograde\",\n    \"detail\": \"Retrograde\",\n    \"documentation\": \"A music expression can be reversed to produce its retrograde:\\n\\n    music = \\\\relative c' { c8. ees16( fis8. a16 b8.) gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\music\\n      \\\\retrograde \\\\music\\n    }\"\n  },\n  {\n    \"label\": \"\\\\reverseturn\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\revert\",\n    \"detail\": \"5.3.3 The \\\\override command\",\n    \"documentation\": \"The effects of \\\\override can be undone by \\\\revert.\\n\\nThe syntax for the \\\\revert command is\\n\\n    \\\\revert [context.]GrobName.property\\n\\nFor example,\\n\\n    c4\\n    \\\\override Voice.Stem.thickness = #3.0\\n    c4 c\\n    \\\\revert Voice.Stem.thickness\\n    c4\\n\\nThe effects of \\\\override and \\\\revert apply to all grobs in the affected context from the current time forward:\\n\\n    {\\n      <<\\n        {\\n          e4\\n          \\\\override Staff.Stem.thickness = #3.0\\n          e4 e e\\n        } \\\\\\\\ {\\n          c4 c c\\n          \\\\revert Staff.Stem.thickness\\n          c4\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\revertTimeSignatureSettings\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"Changed values of default time signature properties can be restored to the original values:\\n\\n    \\\\score{\\n      \\\\relative c' {\\n        \\\\repeat unfold 8 { c8 } |\\n        \\\\overrideTimeSignatureSettings\\n          4/4        % timeSignatureFraction\\n          1/4        % baseMomentFraction\\n          #'(3 1)    % beatStructure\\n          #'()       % beamExceptions\\n        \\\\time 4/4\\n        \\\\repeat unfold 8 { c8 } |\\n        \\\\revertTimeSignatureSettings 4/4\\n        \\\\time 4/4\\n        \\\\repeat unfold 8 { c8 } |\\n      }\\n    }\\n\\nDifferent values of default time signature properties can be established for different staves by moving the Timing_translator and the Default_bar_line_engraver from the Score context to the Staff context.\\n\\n    \\\\score {\\n      \\\\new StaffGroup <<\\n         \\\\new Staff {\\n            \\\\overrideTimeSignatureSettings\\n              4/4        % timeSignatureFraction\\n              1/4        % baseMomentFraction\\n              #'(3 1)    % beatStructure\\n              #'()       % beamExceptions\\n            \\\\time 4/4\\n            \\\\repeat unfold 8 {c''8}\\n         }\\n         \\\\new Staff {\\n            \\\\overrideTimeSignatureSettings\\n              4/4        % timeSignatureFraction\\n              1/4        % baseMomentFraction\\n              #'(1 3)    % beatStructure\\n              #'()       % beamExceptions\\n            \\\\time 4/4\\n            \\\\repeat unfold 8 {c''8}\\n         }\\n      >>\\n      \\\\layout {\\n        \\\\context {\\n          \\\\Score\\n          \\\\remove \\\"Timing_translator\\\"\\n          \\\\remove \\\"Default_bar_line_engraver\\\"\\n        }\\n        \\\\context {\\n          \\\\Staff\\n          \\\\consists \\\"Timing_translator\\\"\\n          \\\\consists \\\"Default_bar_line_engraver\\\"\\n        }\\n      }\\n    }\\n\\nA further method of changing these time-signature-related variables, which avoids reprinting the time signature at the time of the change, is shown in Setting automatic beam behavior.\"\n  },\n  {\n    \"label\": \"\\\\rfz\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\rheel\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\right-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\right-align\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Align arg on its right edge.\\n\\n    \\\\markup {\\n      \\\\column {\\n        one\\n        \\\\right-align\\n        two\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\right-brace\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"A feta brace in point size size, rotated 180 degrees.\\n\\n    \\\\markup {\\n      \\\\right-brace #45\\n      \\\\hspace #2\\n      \\\\right-brace #35\\n    }\"\n  },\n  {\n    \"label\": \"\\\\right-column\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Put args in a right-aligned column.\\n\\n    \\\\markup {\\n      \\\\right-column {\\n        one\\n        two\\n        three\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\rightHandFinger\",\n    \"detail\": \"Right-hand fingerings\",\n    \"documentation\": \"Right-hand fingerings p-i-m-a must be entered using \\\\rightHandFinger followed by a number.\\n\\nNote: If the number is entered in Scheme notation, remember to append a space before following it with a closing > or similar.\\n\\n\\n\\n    \\\\clef \\\"treble_8\\\"\\n    c4\\\\rightHandFinger #1\\n    e\\\\rightHandFinger #2\\n    g\\\\rightHandFinger #3\\n    c\\\\rightHandFinger #4\\n    <c,\\\\rightHandFinger #1 e\\\\rightHandFinger #2\\n     g\\\\rightHandFinger #3 c\\\\rightHandFinger #4 >1\\n\\nFor convenience, you can abbreviate \\\\rightHandFinger to something short, for example RH,\\n\\n    RH=#rightHandFinger\"\n  },\n  {\n    \"label\": \"\\\\roman\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font family to roman.\\n\\n    \\\\markup {\\n      \\\\sans \\\\bold {\\n        sans serif, bold\\n        \\\\hspace #2\\n        \\\\roman {\\n          text in roman font family\\n        }\\n        \\\\hspace #2\\n        return to sans\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\rotate\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Rotate object with ang degrees around its center.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\rotate #45\\n      \\\\line {\\n        rotated 45°\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\rounded-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\rounded-box\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Draw a box with rounded corners around arg. Looks at thickness, box-padding and font-size properties to determine line thickness and padding around the markup; the corner-radius property makes it possible to define another shape for the corners (default is 1).\\n\\n    c4^\\\\markup {\\n      \\\\rounded-box {\\n        Overtura\\n      }\\n    }\\n    c,8. c16 c4 r\\n\\nUsed properties:\\n\\n - box-padding (0.5)\\n - font-size (0)\\n - corner-radius (1)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\rtoe\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\sacredHarpHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\sacredHarpHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\sans\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Switch to the sans serif font family.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\sans {\\n        sans serif\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\scale\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Scale arg. factor-pair is a pair of numbers representing the scaling-factor in the X and Y axes. Negative values may be used to produce mirror images.\\n\\n    \\\\markup {\\n      \\\\line {\\n        \\\\scale #'(2 . 1)\\n        stretched\\n        \\\\scale #'(1 . -1)\\n        mirrored\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\scaleDurations\",\n    \"detail\": \"Scaling durations\",\n    \"documentation\": \"Longer stretches of music may be compressed by a fraction in the same way, as if every note, chord or rest had the fraction as a multiplier. This leaves the appearance of the music unchanged but the internal duration of the notes will be multiplied by the fraction num/den. Here is an example showing how music can be compressed and expanded:\\n\\n    \\\\time 2/4\\n    % Normal durations\\n    <c a>4 c8 a\\n    % Scale music by *2/3\\n    \\\\scaleDurations 2/3 {\\n      <c a f>4. c8 a f\\n    }\\n    % Scale music by *2\\n    \\\\scaleDurations 2/1 {\\n      <c' a>4 c8 b\\n    }\\n\\nOne application of this command is in polymetric notation, see Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\scaleDurations\",\n    \"detail\": \"Polymetric notation\",\n    \"documentation\": \"Polymetric notation is supported explicitly or by manually modifying the visible time signature symbol and/or scaling note durations.\"\n  },\n  {\n    \"label\": \"\\\\score\",\n    \"detail\": \"3.1.1 Structure of a score\",\n    \"documentation\": \"A \\\\score block must contain a single music expression delimited by curly brackets:\\n\\n    \\\\score {\\n      …\\n    }\\n\\nNote: There must be only one outer music expression in a score block, and it must be surrounded by curly brackets.\\n\\n\\n\\nThis single music expression may be of any size, and may contain other music expressions to any complexity. All of these examples are music expressions:\\n\\n    { c'4 c' c' c' }\\n\\n    {\\n      { c'4 c' c' c' }\\n      { d'4 d' d' d' }\\n    }\\n\\n    <<\\n      \\\\new Staff { c'4 c' c' c' }\\n      \\\\new Staff { d'4 d' d' d' }\\n    >>\\n\\n    {\\n      \\\\new GrandStaff <<\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { \\\\flute }\\n          \\\\new Staff { \\\\oboe }\\n        >>\\n        \\\\new StaffGroup <<\\n          \\\\new Staff { \\\\violinI }\\n          \\\\new Staff { \\\\violinII }\\n        >>\\n      >>\\n    }\\n\\nComments are one exception to this general rule. (For others see File structure.) Both single-line comments and comments delimited by %{ … %} may be placed anywhere within an input file. They may be placed inside or outside a \\\\score block, and inside or outside the single music expression within a \\\\score block.\\n\\nRemember that even in a file containing only a \\\\score block, it is implicitly enclosed in a \\\\book block. A \\\\book block in a source file produces at least one output file, and by default the name of the output file produced is derived from the name of the input file, so ‘fandangoforelephants.ly’ will produce ‘fandangoforelephants.pdf’.\\n\\n(For more details about \\\\book blocks, see Multiple scores in a book, Multiple output files from one input file File structure.)\"\n  },\n  {\n    \"label\": \"\\\\score\",\n    \"detail\": \"3.1.5 File structure\",\n    \"documentation\": \"A ‘.ly’ file may contain any number of toplevel expressions, where a toplevel expression is one of the following:\\n\\n - An output definition, such as \\\\paper, \\\\midi, and \\\\layout. Such a definition at the toplevel changes the default book-wide settings. If more than one such definition of the same type is entered at the top level the definitions are combined, but in conflicting situations the later definitions take precedence. For details of how this affects the \\\\layout block see The \\\\layout block.\\n - A direct scheme expression, such as #(set-default-paper-size \\\"a7\\\" 'landscape) or #(ly:set-option 'point-and-click #f).\\n - A \\\\header block. This sets the global (i.e. the top of file) header block. This is the block containing the default settings of titling fields like composer, title, etc. for all books within the file (see Titles explained).\\n - A \\\\score block. This score will be collected with other toplevel scores, and combined as a single \\\\book. This behavior can be changed by setting the variable toplevel-score-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\book block logically combines multiple movements (i.e., multiple \\\\score blocks) in one document. If there are a number of \\\\scores, one output file will be created for each \\\\book block, in which all corresponding movements are concatenated. The only reason to explicitly specify \\\\book blocks in a ‘.ly’ file is if you wish to create multiple output files from a single input file. One exception is within lilypond-book documents, where you explicitly have to add a \\\\book block if you want more than a single \\\\score or \\\\markup in the same example. This behavior can be changed by setting the variable toplevel-book-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n - A \\\\bookpart block. A book may be divided into several parts, using \\\\bookpart blocks, in order to ease the page breaking, or to use different \\\\paper settings in different parts.\\n - A compound music expression, such as\\n{ c'4 d' e'2 }\\nThis will add the piece in a \\\\score and format it in a single book together with all other toplevel \\\\scores and music expressions. In other words, a file containing only the above music expression will be translated into\\n\\n\\\\book {\\n  \\\\score {\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        { c'4 d' e'2 }\\n      }\\n    }\\n    \\\\layout { }\\n  }\\n  \\\\paper { }\\n  \\\\header { }\\n}\\nThis behavior can be changed by setting the variable toplevel-music-handler at toplevel. The default handler is defined in the init file ‘../scm/lily.scm’.\\n\\n\\n - A markup text, a verse for example\\n\\\\markup {\\n   2.  The first line verse two.\\n}\\nMarkup texts are rendered above, between or below the scores or music expressions, wherever they appear.\\n\\n\\n - A variable, such as\\nfoo = { c4 d e d }\\nThis can be used later on in the file by entering \\\\foo. The name of a variable should have alphabetic characters only; no numbers, underscores or dashes.\\n\\n\\n\\nThe following example shows three things that may be entered at toplevel\\n\\n    \\\\layout {\\n      % Don't justify the output\\n      ragged-right = ##t\\n    }\\n    \\\\header {\\n       title = \\\"Do-re-mi\\\"\\n    }\\n    { c'4 d' e2 }\\n\\nAt any point in a file, any of the following lexical instructions can be entered:\\n\\n - \\\\version\\n - \\\\include\\n - \\\\sourcefilename\\n - \\\\sourcefileline\\n - A single-line comment, introduced by a leading % sign.\\n - A multi-line comment delimited by %{ … %}.\"\n  },\n  {\n    \"label\": \"\\\\score\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Inline an image of music. The reference point (usually the middle staff line) of the lowest staff in the top system is placed on the baseline.\\n\\n    \\\\markup {\\n      \\\\score {\\n        \\\\new PianoStaff <<\\n          \\\\new Staff \\\\relative c' {\\n            \\\\key f \\\\major\\n            \\\\time 3/4\\n            \\\\mark \\\\markup { Allegro }\\n            f2\\\\p( a4)\\n            c2( a4)\\n            bes2( g'4)\\n            f8( e) e4 r\\n          }\\n          \\\\new Staff \\\\relative c {\\n            \\\\clef bass\\n            \\\\key f \\\\major\\n            \\\\time 3/4\\n            f8( a c a c a\\n            f c' es c es c)\\n            f,( bes d bes d bes)\\n            f( g bes g bes g)\\n          }\\n        >>\\n        \\\\layout {\\n          indent = 0.0\\\\cm\\n          \\\\context {\\n            \\\\Score\\n            \\\\override RehearsalMark\\n              #'break-align-symbols = #'(time-signature key-signature)\\n            \\\\override RehearsalMark\\n              #'self-alignment-X = #LEFT\\n          }\\n          \\\\context {\\n            \\\\Staff\\n            \\\\override TimeSignature\\n              #'break-align-anchor-alignment = #LEFT\\n          }\\n        }\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\segno\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\semiflat\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a semiflat symbol.\\n\\n    \\\\markup {\\n      \\\\semiflat\\n    }\"\n  },\n  {\n    \"label\": \"\\\\semiGermanChords\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\semisharp\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a semisharp symbol.\\n\\n    \\\\markup {\\n      \\\\semisharp\\n    }\"\n  },\n  {\n    \"label\": \"\\\\sesquiflat\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a 3/2 flat symbol.\\n\\n    \\\\markup {\\n      \\\\sesquiflat\\n    }\"\n  },\n  {\n    \"label\": \"\\\\sesquisharp\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a 3/2 sharp symbol.\\n\\n    \\\\markup {\\n      \\\\sesquisharp\\n    }\"\n  },\n  {\n    \"label\": \"\\\\set\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\set\",\n    \"detail\": \"5.3.2 The \\\\set command\",\n    \"documentation\": \"Each context has a set of properties, variables contained in that context. Context properties are changed with the \\\\set command, which has the following syntax:\\n\\n    \\\\set context.property = #value\\n\\nvalue is a Scheme object, which is why it must be preceded by the # character.\\n\\nContexts properties are usually named in studlyCaps. They mostly control the translation from music to notation, e.g. localKeySignature (for determining whether to print accidentals), or measurePosition (for determining when to print a bar line). Context properties can change value over time while interpreting a piece of music; measurePosition is an obvious example of this. Context properties are modified with \\\\set.\\n\\nFor example, multimeasure rests will be combined into a single bar if the context property skipBars is set to #t:\\n\\n    R1*2\\n    \\\\set Score.skipBars = ##t\\n    R1*2\\n\\nIf the context argument is left out, then the property will be set in the current bottom context (typically ChordNames, Voice, TabVoice, or Lyrics).\\n\\n    \\\\set Score.autoBeaming = ##f\\n    <<\\n      {\\n        e8 e e e\\n        \\\\set autoBeaming = ##t\\n        e8 e e e\\n      } \\\\\\\\ {\\n        c8 c c c c8 c c c\\n      }\\n    >>\\n\\nThe change is applied ‘on-the-fly’, during the music, so that the setting only affects the second group of eighth notes.\\n\\nNote that the bottom-most context does not always contain the property that you wish to change – for example, attempting to set the skipBars property of the default bottom context, in this case Voice, will have no effect, because skipBars is a property of the Score context.\\n\\n    R1*2\\n    \\\\set skipBars = ##t\\n    R1*2\\n\\nContexts are hierarchical, so if an enclosing context was specified, for example Staff, then the change would also apply to all Voices in the current staff.\"\n  },\n  {\n    \"label\": \"\\\\set\",\n    \"detail\": \"5.3.5 \\\\set vs. \\\\override\",\n    \"documentation\": \"Both \\\\set and \\\\override manipulate properties associated with contexts. In either case, properties heed the hierarchy of contexts: properties not set in a context itself show the values of the respective parent context.\\n\\nValues and lifetime of context properties are dynamic and only available when music is being interpreted, ‘iterated’. At the time of context creation, properties are initialized from the corresponding context definition and possible context modifications. Afterwards, changes are achieved with property-setting commands in the music itself.\\n\\nNow grob definitions are a special category of context properties. Since their structure, bookkeeping and use is different from ordinary context properties, they are accessed with a different set of commands, and treated separately in the documentation.\\n\\nAs opposed to plain context properties, grob definitions are subdivided into grob properties. A “grob” (graphical object) is usually created by an engraver at the time of interpreting a music expression and receives its initial properties from the current grob definition of the engraver’s context. The engraver (or other ‘backend’ parts of LilyPond) may subsequently add or change properties to the grob, but that does not affect the context’s grob definition.\\n\\nWhat we call ‘grob properties’ in the context of user-level tweaking are actually the properties of a context’s grob definition. In contrast to ordinary context properties, grob definitions have the bookkeeping required to keep track of its parts, the individual grob properties (and even subproperties of them) separately so that it is possible to define those parts in different contexts and have the overall grob definition at the time of grob creation be assembled from pieces provided in different contexts among the current context and its parents.\\n\\nGrob definitions are manipulated using \\\\override and \\\\revert and have a name starting with a capital letter (like ‘NoteHead’) whereas ordinary context properties are manipulated using \\\\set and \\\\unset and are named starting with a lowercase letter.\"\n  },\n  {\n    \"label\": \"\\\\sf\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\sff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\sfz\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\shape\",\n    \"detail\": \"Specifying displacements from current control points\",\n    \"documentation\": \"In this example the automatic placement of the tie is not optimum, and \\\\tieDown would not help.\\n\\n    <<\\n      { e1~ e }\\n    \\\\\\\\\\n      { r4 <g c,> <g c,> <g c,> }\\n    >>\\n\\nAdjusting the control points of the tie with \\\\shape allows the collisions to be avoided.\\n\\nThe syntax of \\\\shape is\\n\\n    [-]\\\\shape displacements item\\n\\nThis will reposition the control-points of item by the amounts given by displacements. The displacements argument is a list of number pairs or a list of such lists. Each element of a pair represents the displacement of one of the coordinates of a control-point. If item is a string, the result is \\\\once\\\\override for the specified grob type. If item is a music expression, the result is the same music expression with an appropriate tweak applied.\\n\\nIn other words, the \\\\shape function can act as either a \\\\once\\\\override command or a \\\\tweak command depending on whether the item argument is a grob name, like “Slur”, or a music expression, like “(”. The displacements argument specifies the displacements of the four control points as a list of four pairs of (dx . dy) values in units of staff-spaces (or a list of such lists if the curve has more than one segment).\\n\\nThe leading hyphen is required if and only if the \\\\tweak form is being used.\\n\\nSo, using the same example as above and the \\\\once\\\\override form of \\\\shape, this will raise the tie by half a staff-space:\\n\\n    <<\\n      {\\n        \\\\shape #'((0 . 0.5) (0 . 0.5) (0 . 0.5) (0 . 0.5)) Tie\\n        e1~ e\\n      }\\n    \\\\\\\\\\n      { r4 <g c,> <g c,> <g c,> }\\n    >>\\n\\nThis positioning of the tie is better, but maybe it should be raised more in the center. The following example does this, this time using the alternative \\\\tweak form:\\n\\n    <<\\n      {\\n        e1-\\\\shape #'((0 . 0.5) (0 . 1) (0 . 1) (0 . 0.5)) ~ e\\n      }\\n    \\\\\\\\\\n      { r4 <g c,> <g c,> <g c,> }\\n    >>\\n\\nChanges to the horizontal positions of the control points may be made in the same way, and two different curves starting at the same musical moment may also be shaped:\\n\\n    c8(\\\\( a) a'4 e c\\\\)\\n    \\\\shape #'((0.7 . -0.4) (0.5 . -0.4) (0.3 . -0.3) (0 . -0.2)) Slur\\n    \\\\shape #'((0 . 0) (0 . 0.5) (0 . 0.5) (0 . 0)) PhrasingSlur\\n    c8(\\\\( a) a'4 e c\\\\)\\n\\nThe \\\\shape function can also displace the control points of curves which stretch across line breaks. Each piece of the broken curve can be given its own list of offsets. If changes to a particular segment are not needed, the empty list can serve as a placeholder. In this example the line break makes the single slur look like two:\\n\\n    c4( f g c\\n    \\\\break\\n    d,4 c' f, c)\\n\\nChanging the shapes of the two halves of the slur makes it clearer that the slur continues over the line break:\\n\\n    % () may be used as a shorthand for ((0 . 0) (0 . 0) (0 . 0) (0 . 0))\\n    % if any of the segments does not need to be changed\\n    \\\\shape #'(\\n               (( 0 . 0) (0 . 0) (0 . 0) (0 . 1))\\n               ((0.5 . 1.5) (1 . 0) (0 . 0) (0 . -1.5))\\n             ) Slur\\n    c4( f g c\\n    \\\\break\\n    d,4 c' f, c)\\n\\nIf an S-shaped curve is required the control points must always be adjusted manually — LilyPond will never select such shapes automatically.\\n\\n    c8( e b-> f d' a e-> g)\\n    \\\\shape #'((0 . -1) (5.5 . -0.5) (-5.5 . -10.5) (0 . -5.5)) PhrasingSlur\\n    c8\\\\( e b-> f d' a e-> g\\\\)\"\n  },\n  {\n    \"label\": \"\\\\sharp\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Draw a sharp symbol.\\n\\n    \\\\markup {\\n      \\\\sharp\\n    }\"\n  },\n  {\n    \"label\": \"\\\\shiftOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOnn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOnnn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shortfermata\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\showKeySignature\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\showStaffSwitch\",\n    \"detail\": \"Staff-change lines\",\n    \"documentation\": \"Whenever a voice switches to another staff, a line connecting the notes can be printed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"one\\\" {\\n        \\\\showStaffSwitch\\n        c1\\n        \\\\change Staff = \\\"two\\\"\\n        b2 a\\n      }\\n      \\\\new Staff = \\\"two\\\" {\\n        \\\\clef bass\\n        s1*2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\signumcongruentiae\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\simple\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"A simple text string; \\\\markup { foo } is equivalent with \\\\markup { \\\\simple #\\\"foo\\\" }.\\n\\nNote: for creating standard text markup or defining new markup commands, the use of \\\\simple is unnecessary.\\n\\n    \\\\markup {\\n      \\\\simple #\\\"simple\\\"\\n      \\\\simple #\\\"text\\\"\\n      \\\\simple #\\\"strings\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\skip\",\n    \"detail\": \"Invisible rests\",\n    \"documentation\": \"An invisible rest (also called a ‘spacer rest’) can be entered like a note with the note name s:\\n\\n    c4 c s c\\n    s2 c\"\n  },\n  {\n    \"label\": \"\\\\skip\",\n    \"detail\": \"Repeats with alternative endings\",\n    \"documentation\": \"But when the repeated section has different words, a repeat construct cannot be used around the words and \\\\skip commands have to be inserted manually to skip over the notes in the alternative sections which do not apply.\\n\\nNote: do not use an underscore, _, to skip notes – an underscore indicates a melisma, causing the preceding syllable to be left-aligned.\\n\\nNote: The \\\\skip command must be followed by a number, but this number is ignored in lyrics which derive their durations from the notes in an associated melody through addlyrics or lyricsto. Each \\\\skip skips a single note of any value, irrespective of the value of the following number.\\n\\n\\n\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\time 2/4\\n          \\\\new Voice = \\\"melody\\\" {\\n            \\\\relative c'' {\\n              \\\\repeat volta 2 { b4 b }\\n              \\\\alternative { { b b } { b c } }\\n              c4 c\\n            }\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            The first time words.\\n            \\\\repeat unfold 2 { \\\\skip 1 }\\n            End here.\\n          }\\n        }\\n        \\\\new Lyrics {\\n          \\\\lyricsto \\\"melody\\\" {\\n            Sec -- ond\\n            \\\\repeat unfold 2 { \\\\skip 1 }\\n            time words.\\n          }\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\slashed-digit\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"A feta number, with slash. This is for use in the context of figured bass notation.\\n\\n    \\\\markup {\\n      \\\\slashed-digit #5\\n      \\\\hspace #2\\n      \\\\override #'(thickness . 3)\\n      \\\\slashed-digit #7\\n    }\\n\\nUsed properties:\\n\\n - thickness (1.6)\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\slashedGrace\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"Grace notes are musical ornaments, printed in a smaller font, that take up no additional logical time in a measure.\\n\\n    c4 \\\\grace b16 a4(\\n    \\\\grace { b16 c16 } a2)\\n\\nThere are three other types of grace notes possible; the acciaccatura – an unmeasured grace note indicated by a slurred note with a slashed stem – and the appoggiatura, which takes a fixed fraction of the main note it is attached to and prints without the slash. It is also possible to write a grace note with a slashed stem, like the acciaccatura but without the slur, so as to place it between notes that are slurred themselves, using the \\\\slashedGrace function.\\n\\n    \\\\acciaccatura d8 c4\\n    \\\\appoggiatura e8 d4\\n    \\\\acciaccatura { g16 f } e2\\n    \\\\slashedGrace a,8 g4\\n    \\\\slashedGrace b16 a4(\\n    \\\\slashedGrace b8 a2)\\n\\nThe placement of grace notes is synchronized between different staves. In the following example, there are two sixteenth grace notes for every eighth grace note\\n\\n    <<\\n      \\\\new Staff { e2 \\\\grace { c16 d e f } e2 }\\n      \\\\new Staff { c2 \\\\grace { g8 b } c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\slurDashed\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDashPattern\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Custom dash patterns for slurs can be defined:\\n\\n    c4( e g2)\\n    \\\\slurDashPattern #0.7 #0.75\\n    g4( e c2)\\n    \\\\slurDashPattern #0.5 #2.0\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDotted\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDown\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\slurHalfDashed\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4( e g2)\\n    \\\\slurHalfDashed\\n    g4( e c2)\\n    \\\\slurHalfSolid\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurHalfSolid\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4( e g2)\\n    \\\\slurHalfDashed\\n    g4( e c2)\\n    \\\\slurHalfSolid\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurNeutral\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\slurSolid\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurUp\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"\\\\slurUp, \\\\slurDown, \\\\slurNeutral, \\\\slurDashed, \\\\slurDotted, \\\\slurHalfDashed, \\\\slurHalfSolid, \\\\slurDashPattern, \\\\slurSolid.\"\n  },\n  {\n    \"label\": \"\\\\small\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\small\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\small\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to -1.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\small\\n      small\\n    }\"\n  },\n  {\n    \"label\": \"\\\\smallCaps\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Emit arg as small caps.\\n\\nNote: \\\\smallCaps does not support accented characters.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\smallCaps {\\n        Text in small caps\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\smaller\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\smaller\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\smaller\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Decrease the font size relative to the current setting.\\n\\n    \\\\markup {\\n      \\\\fontsize #3.5 {\\n        some large text\\n        \\\\hspace #2\\n        \\\\smaller {\\n          a bit smaller\\n        }\\n        \\\\hspace #2\\n        more large text\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\snappizzicato\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\sostenutoOff\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\sostenutoOn\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\southernHarmonyHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\southernHarmonyHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\sp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\spp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\staccatissimo\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\staccato\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\startGroup\",\n    \"detail\": \"Analysis brackets\",\n    \"documentation\": \"Brackets are used in musical analysis to indicate structure in musical pieces. Simple horizontal brackets are supported.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c2\\\\startGroup\\n      d\\\\stopGroup\\n    }\\n\\nAnalysis brackets may be nested.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c4\\\\startGroup\\\\startGroup\\n      d4\\\\stopGroup\\n      e4\\\\startGroup\\n      d4\\\\stopGroup\\\\stopGroup\\n    }\"\n  },\n  {\n    \"label\": \"\\\\startStaff\",\n    \"detail\": \"Staff symbol\",\n    \"documentation\": \"The \\\\stopStaff and \\\\startStaff commands can be used to stop or (re)start the staff lines respectively, from being printed at any point witin a score.\\n\\n    \\\\stopStaff f4 d \\\\startStaff g, e\\n    f'4 d \\\\stopStaff g, e\\n    f'4 d \\\\startStaff g, e\"\n  },\n  {\n    \"label\": \"\\\\startStaff\",\n    \"detail\": \"Ossia staves\",\n    \"documentation\": \"Ossia staves can be set by creating a new simultaneous staff in the appropriate location:\\n\\n    \\\\new Staff \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nHowever, the above example is not what is usually desired. To create ossia staves that are above the original staff, have no time signature or clef, and have a smaller font size, tweaks must be used. The Learning Manual describes a specific technique to achieve this goal, beginning with Nesting music expressions.\\n\\nThe following example uses the alignAboveContext property to align the ossia staff. This method is most appropriate when only a few ossia staves are needed.\\n\\n    \\\\new Staff = \\\"main\\\" \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff \\\\with {\\n          \\\\remove \\\"Time_signature_engraver\\\"\\n          alignAboveContext = #\\\"main\\\"\\n          fontSize = #-3\\n          \\\\override StaffSymbol.staff-space = #(magstep -3)\\n          \\\\override StaffSymbol.thickness = #(magstep -3)\\n          firstClef = ##f\\n        }\\n        { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nIf many isolated ossia staves are needed, creating an empty Staff context with a specific context id may be more appropriate; the ossia staves may then be created by calling this context and using \\\\startStaff and \\\\stopStaff at the desired locations. The benefits of this method are more apparent if the piece is longer than the following example.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      }\\n      { \\\\stopStaff s1*6 }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        <<\\n          { e4 f e2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff e4 g8 f e2 \\\\stopStaff\\n          }\\n        >>\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        <<\\n          { g4 a g2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff g4 e8 f g2 \\\\stopStaff\\n          }\\n        >>\\n        e4 d c2\\n      }\\n    >>\\n\\nUsing the \\\\Staff \\\\RemoveEmptyStaves command to create ossia staves may be used as an alternative. This method is most convenient when ossia staves occur immediately following a line break. For more information about \\\\Staff \\\\RemoveEmptyStaves, see Hiding staves.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      } \\\\relative c'' {\\n        R1*3\\n        c4 e8 d c2\\n      }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        e4 f e2\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        g4 a g2\\n        e4 d c2\\n      }\\n    >>\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n        \\\\override VerticalAxisGroup.remove-first = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\startTrillSpan\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"\\\\stdBass\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\stdBass name generates a standard bass accordion register symbol.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nThe default bass register definitions have been modeled after the article http://www.accordions.com/index/art/stradella.shtml originally appearing in Accord Magazine.\\n\\nThe underlying register model is\\n\\nThis kind of overlapping arrangement is common for Italian instruments though the exact location of the octave breaks differ.\\n\\nWhen not composing for a particular target instrument, using the five reed definitions makes more sense than using a four reed layout: in that manner, the ‘Master’ register is unambiguous. This is rather the rule in literature bothering about bass registrations at all.\\n\\nAvailable registrations are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\stdBassIV\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\stdBassIV name generates a standard bass accordion register symbol.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nThe main use is for four-reed standard bass instruments with reedbank layout\\n\\nNotable instruments are Morino models with MIII (the others are five-reed instead) and the Atlantic IV. Most of those models have three register switches. Some newer Morinos with MIII might have five or even seven.\\n\\nThe prevalent three-register layout uses the middle three switches ‘Tenor’, ‘Master’, ‘Soft Bass’. Note that the sound is quite darker than the same registrations of ‘c,’-based instruments.\\n\\nAvailable registrations are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\stdBassV\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\stdBassV name generates a standard bass accordion register symbol.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nThe main use is for five-reed standard bass instruments with reedbank layout\\n\\nThis tends to be the bass layout for Hohner’s Morino series without convertor or MIII manual.\\n\\nWith the exception of the rather new 7-register layout, the highest two chord reeds are usually sounded together. The Older instruments offer 5 or 3 bass registers. The Tango VM offers an additional ‘Solo Bass’ setting that mutes the chord reeds. The symbol on the register buttons of the Tango VM would actually match the physical five-octave layout reflected here, but it is not used in literature.\\n\\nComposers should likely prefer the five-reed versions of these symbols. The mismatch of a four-reed instrument with five-reed symbols is easier to resolve for the player than the other way round.\\n\\nAvailable registrations are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\stdBassVI\",\n    \"detail\": \"A.10.6 Accordion Registers\",\n    \"documentation\": \"\\\\stdBassVI name generates a standard bass accordion register symbol for six reed basses.\\n\\nTo make it available,\\n\\n    #(use-modules (scm accreg))\\n\\nis required near the top of your input file.\\n\\nThis is primarily the register layout for the Hohner “Gola” model. The layout is\\n\\nThe registers are effectively quite similar to that of \\\\stdBass. An additional bass reed at alto pitch is omitted for esthetical reasons from the ‘Master’ setting, so the symbols are almost the same except for the ‘Alto/Soprano’ register with bass notes at Alto pitch and chords at Soprano pitch.\\n\\nAvailable registrations are\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\stemDown\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stemNeutral\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stemUp\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stencil\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Use a stencil as markup.\\n\\n    \\\\markup {\\n      \\\\stencil #(make-circle-stencil 2 0 #t)\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stopGroup\",\n    \"detail\": \"Analysis brackets\",\n    \"documentation\": \"Brackets are used in musical analysis to indicate structure in musical pieces. Simple horizontal brackets are supported.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c2\\\\startGroup\\n      d\\\\stopGroup\\n    }\\n\\nAnalysis brackets may be nested.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c4\\\\startGroup\\\\startGroup\\n      d4\\\\stopGroup\\n      e4\\\\startGroup\\n      d4\\\\stopGroup\\\\stopGroup\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stopped\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Staff symbol\",\n    \"documentation\": \"The \\\\stopStaff and \\\\startStaff commands can be used to stop or (re)start the staff lines respectively, from being printed at any point witin a score.\\n\\n    \\\\stopStaff f4 d \\\\startStaff g, e\\n    f'4 d \\\\stopStaff g, e\\n    f'4 d \\\\startStaff g, e\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Ossia staves\",\n    \"documentation\": \"Ossia staves can be set by creating a new simultaneous staff in the appropriate location:\\n\\n    \\\\new Staff \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nHowever, the above example is not what is usually desired. To create ossia staves that are above the original staff, have no time signature or clef, and have a smaller font size, tweaks must be used. The Learning Manual describes a specific technique to achieve this goal, beginning with Nesting music expressions.\\n\\nThe following example uses the alignAboveContext property to align the ossia staff. This method is most appropriate when only a few ossia staves are needed.\\n\\n    \\\\new Staff = \\\"main\\\" \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff \\\\with {\\n          \\\\remove \\\"Time_signature_engraver\\\"\\n          alignAboveContext = #\\\"main\\\"\\n          fontSize = #-3\\n          \\\\override StaffSymbol.staff-space = #(magstep -3)\\n          \\\\override StaffSymbol.thickness = #(magstep -3)\\n          firstClef = ##f\\n        }\\n        { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nIf many isolated ossia staves are needed, creating an empty Staff context with a specific context id may be more appropriate; the ossia staves may then be created by calling this context and using \\\\startStaff and \\\\stopStaff at the desired locations. The benefits of this method are more apparent if the piece is longer than the following example.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      }\\n      { \\\\stopStaff s1*6 }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        <<\\n          { e4 f e2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff e4 g8 f e2 \\\\stopStaff\\n          }\\n        >>\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        <<\\n          { g4 a g2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff g4 e8 f g2 \\\\stopStaff\\n          }\\n        >>\\n        e4 d c2\\n      }\\n    >>\\n\\nUsing the \\\\Staff \\\\RemoveEmptyStaves command to create ossia staves may be used as an alternative. This method is most convenient when ossia staves occur immediately following a line break. For more information about \\\\Staff \\\\RemoveEmptyStaves, see Hiding staves.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      } \\\\relative c'' {\\n        R1*3\\n        c4 e8 d c2\\n      }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        e4 f e2\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        g4 a g2\\n        e4 d c2\\n      }\\n    >>\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n        \\\\override VerticalAxisGroup.remove-first = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Hiding staves\",\n    \"documentation\": \"Staff lines can be hidden by removing the Staff_symbol_engraver from the Staff context. As an alternative, \\\\stopStaff may be used.\\n\\n    \\\\new Staff \\\\with {\\n      \\\\remove \\\"Staff_symbol_engraver\\\"\\n    }\\n    \\\\relative c''' { a8 f e16 d c b a2 }\\n\\nEmpty staves can be hidden by setting the \\\\Staff \\\\RemoveEmptyStaves command in the \\\\layout block. In orchestral scores, this style is known as ‘Frenched Score’. By default, this command hides and removes all empty staves in a score except for those in the first system.\\n\\nNote: A staff is considered empty when it contains only multi-measure rests, rests, skips, spacer rests, or a combination of these elements.\\n\\n\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n      }\\n    }\\n    \\\\relative c' <<\\n      \\\\new Staff {\\n        e4 f g a \\\\break\\n        b1 \\\\break\\n        a4 b c2\\n      }\\n      \\\\new Staff {\\n        c,4 d e f \\\\break\\n        R1 \\\\break\\n        f4 g c,2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\stopTrillSpan\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"\\\\storePredefinedDiagram\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"In addition to fret diagrams, LilyPond stores an internal list of chord shapes. The chord shapes are fret diagrams that can be shifted along the neck to different positions to provide different chords. Chord shapes can be added to the internal list and then used to define predefined fret diagrams. Because they can be moved to various positions on the neck, chord shapes will normally not contain any open strings. Like fret diagrams, chord shapes can be entered as either fret-diagram-terse strings or fret-diagram-verbose marking lists.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    % Add a new chord shape\\n    \\\\addChordShape #'powerf #guitar-tuning #\\\"1-1;3-3;3-4;x;x;x;\\\"\\n    % add some new chords based on the power chord shape\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { f'' }\\n                            #guitar-tuning\\n                            #(chord-shape 'powerf guitar-tuning)\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { g'' }\\n                            #guitar-tuning\\n                            #(offset-fret 2 (chord-shape 'powerf guitar-tuning))\\n    mychords = \\\\chordmode{\\n      f1 f'' g g''\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\\n\\nThe graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a predefined fret diagram, the interface properties belong to FretBoards.FretBoard.\"\n  },\n  {\n    \"label\": \"\\\\stringTuning\",\n    \"detail\": \"Custom tablatures\",\n    \"documentation\": \"Any desired string tuning can be created. The \\\\stringTuning function can be used to define a string tuning which can be used to set stringTunings for the current context.\\n\\nIts argument is a chord construct defining the pitches of each string in the tuning. The chord construct must be in absolute octave mode, see Absolute octave entry. The string with the highest number (generally the lowest string) must come first in the chord. For example, we can define a string tuning for a four-string instrument with pitches of a'', d'', g', and c':\\n\\n    mynotes = {\\n      c'4 e' g' c'' |\\n      e''4 g'' b'' c'''\\n    }\\n    <<\\n      \\\\new Staff {\\n        \\\\clef treble\\n        \\\\mynotes\\n      }\\n      \\\\new TabStaff {\\n        \\\\set Staff.stringTunings = \\\\stringTuning <c' g' d'' a''>\\n        \\\\mynotes\\n      }\\n    >>\\n\\nThe stringTunings property is also used by FretBoards to calculate automatic fret diagrams.\\n\\nString tunings are used as part of the hash key for predefined fret diagrams (see Predefined fret diagrams).\\n\\nThe previous example could also be written as follows:\\n\\n    custom-tuning = \\\\stringTuning <c' g' d'' a''>\\n    mynotes = {\\n      c'4 e' g' c'' |\\n      e''4 g'' b'' c'''\\n    }\\n    <<\\n      \\\\new Staff {\\n        \\\\clef treble\\n        \\\\mynotes\\n      }\\n      \\\\new TabStaff {\\n        \\\\set TabStaff.stringTunings = #custom-tuning\\n        \\\\mynotes\\n      }\\n    >>\\n\\nInternally, a string tuning is a Scheme list of string pitches, one for each string, ordered by string number from 1 to N, where string 1 is at the top of the tablature staff and string N is at the bottom. This ordinarily results in ordering from highest pitch to lowest pitch, but some instruments (e.g. ukulele) do not have strings ordered by pitch.\\n\\nA string pitch in a string tuning list is a LilyPond pitch object. Pitch objects are created with the Scheme function ly:make-pitch (see Scheme functions).\\n\\n\\\\stringTuning creates such an object from chord input.\\n\\nLilyPond automatically calculates the number of lines in the TabStaff and the number of strings in an automatically calculated FretBoard as the number of elements in stringTunings.\\n\\nTo let all TabStaff contexts use the same custom tuning by default, you can use\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\TabStaff\\n        stringTunings = \\\\stringTuning <c' g' d'' a''>\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stropha\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\stropha\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\strut\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Create a box of the same height as the space in the current font.\"\n  },\n  {\n    \"label\": \"\\\\sub\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\sub\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set arg in subscript.\\n\\n    \\\\markup {\\n      \\\\concat {\\n        H\\n        \\\\sub {\\n          2\\n        }\\n        O\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\super\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\super\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set arg in superscript.\\n\\n    \\\\markup {\\n      E =\\n      \\\\concat {\\n        mc\\n        \\\\super\\n        2\\n      }\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\sustainOff\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\sustainOn\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\tabChordRepeats\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Chord constructs can be repeated by the chord repetition symbol q. In combination with tabulatures, its behavior of removing string and finger numbers alongside with other events is cumbersome, so you’ll want to run\\n\\n    \\\\chordRepeats #'(string-number-event fingering-event)\\n\\nexplicitly on music expressions in tabulature using Chord repetition. This particular command is so common that it is available as \\\\tabChordRepeats.\\n\\n    guitar = \\\\relative c' {\\n      r8 <gis-2 cis-3 b-0>~ q4 q8~ q q4\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        \\\\guitar\\n      }\\n      \\\\new TabStaff {\\n        \\\\tabChordRepeats \\\\guitar\\n      }\\n    >>\\n\\nTies over a line break are parenthesized by default. The same holds for the second alternative of a repeat.\\n\\n    ties = \\\\relative c' {\\n      \\\\repeat volta 2 {\\n        e2. f4~\\n        f2 g2~\\n      }\\n      \\\\alternative {\\n         { g4 f2. }\\n         { g4\\\\repeatTie c,2. }\\n      }\\n      b1~\\n      \\\\break\\n      b1\\n      \\\\bar \\\"|.\\\"\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new StaffGroup  <<\\n          \\\\new Staff {\\n            \\\\clef \\\"treble_8\\\"\\n            \\\\ties\\n          }\\n          \\\\new TabStaff {\\n            \\\\ties\\n          }\\n        >>\\n      >>\\n      \\\\layout {\\n      indent = #0\\n      ragged-right = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tabFullNotation\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"If all musical symbols used in traditional notation should also show up in tablature one has to apply the command \\\\tabFullNotation in a TabStaff-context. Please bear in mind that half notes are double-stemmed in tablature in order to distinguish them from quarter notes.\\n\\n    symbols = {\\n      \\\\time 3/4\\n      c4-.^\\\"Allegro\\\" d( e)\\n      f4-.\\\\f g a^\\\\fermata\\n      \\\\mark \\\\default\\n      c8_.\\\\<\\\\( c16 c~ c2\\\\!\\n      c'2.\\\\prall\\\\)\\n    }\\n    \\\\score {\\n      \\\\new TabStaff {\\n        \\\\tabFullNotation\\n        \\\\symbols\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\table-of-contents\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\table-of-contents, \\\\tocItem.\"\n  },\n  {\n    \"label\": \"\\\\table-of-contents\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\tag\",\n    \"detail\": \"Using tags\",\n    \"documentation\": \"The \\\\tag #'partA command marks a music expression with the name partA. Expressions tagged in this way can be selected or filtered out by name later, using either \\\\keepWithTag #'name or \\\\removeWithTag #'name. The result of applying these filters to tagged music is as follows:\\n\\nFilter\\tResult\\nTagged music preceded by \\\\keepWithTag #'name or \\\\keepWithTag #'(name1 name2…)\\tUntagged music and music tagged with any of the given tag names is included; music tagged with any other tag name is excluded.\\nTagged music preceded by \\\\removeWithTag #'name or \\\\removeWithTag #'(name1 name2…)\\tUntagged music and music not tagged with any of the given tag names is included; music tagged with any of the given tag names is excluded.\\nTagged music not preceded by either \\\\keepWithTag or \\\\removeWithTag\\tAll tagged and untagged music is included.\\n\\n\\nThe arguments of the \\\\tag, \\\\keepWithTag and \\\\removeWithTag commands should be a symbol (such as #'score or #'part), followed by a music expression.\\n\\nIn the following example, we see two versions of a piece of music, one showing trills with the usual notation, and one with trills explicitly expanded:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand { \\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\keepWithTag #'trills \\\\music\\n    }\\n    \\\\score {\\n      \\\\keepWithTag #'expand \\\\music\\n    }\\n\\nAlternatively, it is sometimes easier to exclude sections of music:\\n\\n    music = \\\\relative g' {\\n      g8. c32 d\\n      \\\\tag #'trills { d8.\\\\trill }\\n      \\\\tag #'expand {\\\\repeat unfold 3 { e32 d } }\\n      c32 d\\n     }\\n    \\\\score {\\n      \\\\removeWithTag #'expand\\n      \\\\music\\n    }\\n    \\\\score {\\n      \\\\removeWithTag #'trills\\n      \\\\music\\n    }\\n\\nTagged filtering can be applied to articulations, texts, etc. by prepending\\n\\n    -\\\\tag #'your-tag\\n\\nto an articulation. For example, this would define a note with a conditional fingering indication and a note with a conditional annotation:\\n\\n    c1-\\\\tag #'finger ^4\\n    c1-\\\\tag #'warn ^\\\"Watch!\\\"\\n\\nMultiple tags may be placed on expressions with multiple \\\\tag entries, or by combining multiple tags into one symbol list:\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'a \\\\tag #'both { a4 a a a }\\n      \\\\tag #'(b both) { b4 b b b }\\n    }\\n    <<\\n    \\\\keepWithTag #'a \\\\music\\n    \\\\keepWithTag #'b \\\\music\\n    \\\\keepWithTag #'both \\\\music\\n    >>\\n\\nMultiple \\\\removeWithTag filters may be applied to a single music expression to remove several differently named tagged sections. Alternatively, you can use a single \\\\removeWithTag with a list of tags.\\n\\n    music = \\\\relative c'' {\\n      \\\\tag #'A { a4 a a a }\\n      \\\\tag #'B { b4 b b b }\\n      \\\\tag #'C { c4 c c c }\\n      \\\\tag #'D { d4 d d d }\\n    }\\n    \\\\new Voice {\\n      \\\\removeWithTag #'B\\n      \\\\removeWithTag #'C\\n      \\\\music\\n      \\\\removeWithTag #'(B C)\\n      \\\\music\\n    }\\n\\nTwo or more \\\\keepWithTag filters applied to a single music expression will cause all tagged sections to be removed, as the first filter will remove all tagged sections except the one named, and the second filter will remove even that tagged section. Usually you would rather want to use a single \\\\keepWithTag command with a list of multiple tags: this will only remove tagged sections not given in any of the tags.\\n\\nSometimes you want to splice some music at a particular place in an existing music expression. You can use \\\\pushToTag and \\\\appendToTag for adding material at the front or end of the elements of an existing music construct. Not every music construct has elements, but sequential and simultaneous music are safe bets:\\n\\n    test = { \\\\tag #'here { \\\\tag #'here <<c''>> } }\\n    {\\n      \\\\pushToTag #'here c'\\n      \\\\pushToTag #'here e'\\n      \\\\pushToTag #'here g' \\\\test\\n      \\\\appendToTag #'here c'\\n      \\\\appendToTag #'here e'\\n      \\\\appendToTag #'here g' \\\\test\\n    }\\n\\nBoth commands get a tag, the material to splice in at every occurence of the tag, and the tagged expression. The commands make sure to copy everything that they change so that the original \\\\test retains its meaning.\"\n  },\n  {\n    \"label\": \"\\\\taor\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\teeny\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\teeny\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\teeny\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to -3.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\teeny\\n      teeny\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tempo\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"A basic metronome mark is simple to write:\\n\\n    \\\\tempo 4 = 120\\n    c2 d\\n    e4. d8 c2\\n\\nMetronome marks may also be printed as a range of two numbers:\\n\\n    \\\\tempo 4 = 40 - 46\\n    c4. e8 a4 g\\n    b,2 d4 r\\n\\nTempo indications with text can be used instead:\\n\\n    \\\\tempo \\\"Allegretto\\\"\\n    c4 e d c\\n    b4. a16 b c4 r4\\n\\nCombining a metronome mark and text will automatically place the metronome mark within parentheses:\\n\\n    \\\\tempo \\\"Allegro\\\" 4 = 160\\n    g4 c d e\\n    d4 b g2\\n\\nIn general, the text can be any markup object:\\n\\n    \\\\tempo \\\\markup { \\\\italic Faster } 4 = 132\\n    a8-. r8 b-. r gis-. r a-. r\\n\\nA parenthesized metronome mark with no textual indication may be written by including an empty string in the input:\\n\\n    \\\\tempo \\\"\\\" 8 = 96\\n    d4 g e c\"\n  },\n  {\n    \"label\": \"\\\\tenuto\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\text\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Use a text font instead of music symbol or music alphabet font.\\n\\n    \\\\markup {\\n      \\\\number {\\n        1, 2,\\n        \\\\text {\\n          three, four,\\n        }\\n        5\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\textLengthOff\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOff\",\n    \"detail\": \"Text scripts\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOn\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOn\",\n    \"detail\": \"Text scripts\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerDown\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerNeutral\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerUp\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\thumb\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\thumb\",\n    \"detail\": \"Fingering instructions\",\n    \"documentation\": \"A thumb-script can be added (e.g. cello music) to indicate that a note should be played with the thumb.\\n\\n    <a_\\\\thumb a'-3>2 <b_\\\\thumb b'-3>\"\n  },\n  {\n    \"label\": \"\\\\tied-lyric\",\n    \"detail\": \"A.10.4 Music\",\n    \"documentation\": \"Like simple-markup, but use tie characters for ‘~’ tilde symbols.\\n\\n    \\\\markup \\\\column {\\n      \\\\tied-lyric #\\\"Siam navi~all'onde~algenti Lasciate~in abbandono\\\"\\n      \\\\tied-lyric #\\\"Impetuosi venti I nostri~affetti sono\\\"\\n      \\\\tied-lyric #\\\"Ogni diletto~e scoglio Tutta la vita~e~un mar.\\\"\\n    }\\n\\nUsed properties:\\n\\n - word-space\"\n  },\n  {\n    \"label\": \"\\\\tieDashed\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieDotted\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieDown\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\tieNeutral\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\tieSolid\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieUp\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\time\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature is set as follows:\\n\\n    \\\\time 2/4 c2\\n    \\\\time 3/4 c2.\"\n  },\n  {\n    \"label\": \"\\\\time\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\tiny\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\tiny\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\tiny\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font size to -2.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\tiny\\n      tiny\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tocItem\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\translate\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\translate\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Translate arg relative to its surroundings. offset is a pair of numbers representing the displacement in the X and Y axis.\\n\\n    \\\\markup {\\n      *\\n      \\\\translate #'(2 . 3)\\n      \\\\line { translated two spaces right, three up }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\translate-scaled\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\translate-scaled\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Translate arg by offset, scaling the offset by the font-size.\\n\\n    \\\\markup {\\n      \\\\fontsize #5 {\\n        * \\\\translate #'(2 . 3) translate\\n        \\\\hspace #2\\n        * \\\\translate-scaled #'(2 . 3) translate-scaled\\n      }\\n    }\\n\\nUsed properties:\\n\\n - font-size (0)\"\n  },\n  {\n    \"label\": \"\\\\transparent\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Make arg transparent.\\n\\n    \\\\markup {\\n      \\\\transparent {\\n        invisible text\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\transpose\",\n    \"detail\": \"Transpose\",\n    \"documentation\": \"A music expression can be transposed with \\\\transpose. The syntax is\\n\\n    \\\\transpose frompitch topitch musicexpr\\n\\nThis means that musicexpr is transposed by the interval between the pitches frompitch and topitch: any note with pitch frompitch is changed to topitch and any other note is transposed by the same interval. Both pitches are entered in absolute mode.\\n\\nNote: Music inside a \\\\transpose block is absolute unless a \\\\relative is included in the block.\\n\\n\\n\\nConsider a piece written in the key of D-major. It can be transposed up to E-major; note that the key signature is automatically transposed as well.\\n\\n    \\\\transpose d e {\\n      \\\\relative c' {\\n        \\\\key d \\\\major\\n        d4 fis a d\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\transposedCueDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"Like \\\\quoteDuring, \\\\cueDuring takes instrument transpositions into account. Cue notes are produced at the pitches that would be written for the instrument receiving the cue to produce the sounding pitches of the source instrument.\\n\\nTo transpose cue notes differently, use \\\\transposedCueDuring. This command takes an extra argument to specify (in absolute mode) the printed pitch that you want to represent the sound of a concert middle C. This is useful for taking cues from an instrument in a completely different register.\\n\\n    piccoloNotes = \\\\relative c''' {\\n      \\\\clef \\\"treble^8\\\"\\n      R1\\n      c8 c c e g2\\n      c4 g g2\\n    }\\n    bassClarinetNotes = \\\\relative c' {\\n      \\\\key d \\\\major\\n      \\\\transposition bes,\\n      d4 r a r\\n      \\\\transposedCueDuring #\\\"piccolo\\\" #UP d { R1 }\\n      d4 r a r\\n    }\\n    \\\\addQuote \\\"piccolo\\\" { \\\\piccoloNotes }\\n    <<\\n      \\\\new Staff \\\\piccoloNotes\\n      \\\\new Staff \\\\bassClarinetNotes\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\transposition\",\n    \"detail\": \"Instrument transpositions\",\n    \"documentation\": \"When typesetting scores that involve transposing instruments, some parts can be typeset in a different pitch than the concert pitch. In these cases, the key of the transposing instrument should be specified; otherwise the MIDI output and cues in other parts will produce incorrect pitches. For more information about quotations, see Quoting other voices.\\n\\n    \\\\transposition pitch\\n\\nThe pitch to use for \\\\transposition should correspond to the real sound heard when a c' written on the staff is played by the transposing instrument. This pitch is entered in absolute mode, so an instrument that produces a real sound which is one tone higher than the printed music should use \\\\transposition d'. \\\\transposition should only be used if the pitches are not being entered in concert pitch.\\n\\nHere are a few notes for violin and B-flat clarinet where the parts have been entered using the notes and key as they appear in each part of the conductor’s score. The two instruments are playing in unison.\\n\\n    \\\\new GrandStaff <<\\n      \\\\new Staff = \\\"violin\\\" {\\n        \\\\relative c'' {\\n          \\\\set Staff.instrumentName = #\\\"Vln\\\"\\n          \\\\set Staff.midiInstrument = #\\\"violin\\\"\\n          % not strictly necessary, but a good reminder\\n          \\\\transposition c'\\n          \\\\key c \\\\major\\n          g4( c8) r c r c4\\n        }\\n      }\\n      \\\\new Staff = \\\"clarinet\\\" {\\n        \\\\relative c'' {\\n          \\\\set Staff.instrumentName = \\\\markup { Cl (B\\\\flat) }\\n          \\\\set Staff.midiInstrument = #\\\"clarinet\\\"\\n          \\\\transposition bes\\n          \\\\key d \\\\major\\n          a4( d8) r d r d4\\n        }\\n      }\\n    >>\\n\\nThe \\\\transposition may be changed during a piece. For example, a clarinetist may be required to switch from an A clarinet to a B-flat clarinet.\\n\\n    flute = \\\\relative c'' {\\n      \\\\key f \\\\major\\n      \\\\cueDuring #\\\"clarinet\\\" #DOWN {\\n        R1 _\\\\markup\\\\tiny \\\"clarinet\\\"\\n        c4 f e d\\n        R1 _\\\\markup\\\\tiny \\\"clarinet\\\"\\n      }\\n    }\\n    clarinet = \\\\relative c'' {\\n      \\\\key aes \\\\major\\n      \\\\transposition a\\n      aes4 bes c des\\n      R1^\\\\markup { muta in B\\\\flat }\\n      \\\\key g \\\\major\\n      \\\\transposition bes\\n      d2 g,\\n    }\\n    \\\\addQuote \\\"clarinet\\\" \\\\clarinet\\n    <<\\n      \\\\new Staff \\\\with { instrumentName = #\\\"Flute\\\" }\\n        \\\\flute\\n      \\\\new Staff \\\\with { instrumentName = #\\\"Cl (A)\\\" }\\n        \\\\clarinet\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\transposition\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\treCorde\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\triangle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\triangle\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"A triangle, either filled or empty.\\n\\n    \\\\markup {\\n      \\\\triangle ##t\\n      \\\\hspace #2\\n      \\\\triangle ##f\\n    }\\n\\nUsed properties:\\n\\n - baseline-skip (2)\\n - font-size (0)\\n - thickness (0.1)\"\n  },\n  {\n    \"label\": \"\\\\trill\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\trill\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"\\\\tuplet\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplets are made from a music expression with the \\\\tuplet command, multiplying the speed of the music expression by a fraction:\\n\\n    \\\\tuplet fraction { music }\\n\\nThe fraction’s numerator will be printed over or under the notes, optionally with a bracket. The most common tuplets are triplets: 3 notes sound within the duration normally allowed for 2:\\n\\n    a2 \\\\tuplet 3/2 { b4 b b }\\n    c4 c \\\\tuplet 3/2 { b4 a g }\"\n  },\n  {\n    \"label\": \"\\\\tuplet\",\n    \"detail\": \"Polymetric notation\",\n    \"documentation\": \"Polymetric notation is supported explicitly or by manually modifying the visible time signature symbol and/or scaling note durations.\"\n  },\n  {\n    \"label\": \"\\\\tupletDown\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"\\\\tupletNeutral\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"\\\\tupletUp\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"\\\\turn\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\tweak\",\n    \"detail\": \"5.3.4 The \\\\tweak command\",\n    \"documentation\": \"Changing grob properties with \\\\override causes the changes to apply to all of the given grobs in the context at the moment the change applies. Sometimes, however, it is desirable to have changes apply to just one grob, rather than to all grobs in the affected context. This is accomplished with the \\\\tweak command, which has the following syntax:\\n\\n    \\\\tweak [layout-object.]grob-property value\\n\\nSpecifying layout-object is optional. The \\\\tweak command applies to the music object that immediately follows value in the music stream.\\n\\nFor an introduction to the syntax and uses of the tweak command see Tweaking methods.\\n\\nWhen several similar items are placed at the same musical moment, the \\\\override command cannot be used to modify just one of them – this is where the \\\\tweak command must be used. Items which may appear more than once at the same musical moment include the following:\\n\\n - note heads of notes inside a chord\\n - articulation signs on a single note\\n - ties between notes in a chord\\n - tuplet brackets starting at the same time\"\n  },\n  {\n    \"label\": \"\\\\tweak\",\n    \"detail\": \"5.3.5 \\\\set vs. \\\\override\",\n    \"documentation\": \"The special commands \\\\tweak and \\\\overrideProperty change grob properties bypassing context properties completely. Instead they catch grobs as they are being created and then directly set properties on them when they originate from a tweaked music event or are of a particular kind, respectively.\"\n  },\n  {\n    \"label\": \"\\\\type\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\typewriter\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Use font-family typewriter for arg.\\n\\n    \\\\markup {\\n      default\\n      \\\\hspace #2\\n      \\\\typewriter\\n      typewriter\\n    }\"\n  },\n  {\n    \"label\": \"\\\\unaCorda\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\underline\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\underline\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Underline arg. Looks at thickness to determine line thickness, and offset to determine line y-offset.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\underline \\\"underlined\\\"\\n      \\\\override #'(offset . 5)\\n      \\\\override #'(thickness . 1)\\n      \\\\underline \\\"underlined\\\"\\n      \\\\override #'(offset . 1)\\n      \\\\override #'(thickness . 5)\\n      \\\\underline \\\"underlined\\\"\\n    }\\n\\nUsed properties:\\n\\n - offset (2)\\n - thickness (1)\"\n  },\n  {\n    \"label\": \"\\\\unfoldRepeats\",\n    \"detail\": \"3.5.4 Repeats in MIDI\",\n    \"documentation\": \"With a few minor additions, all types of repeats can be represented in the MIDI output. This is achieved by applying the \\\\unfoldRepeats music function. This function changes all repeats to unfold repeats.\\n\\n    \\\\unfoldRepeats {\\n      \\\\repeat tremolo 8 { c'32 e' }\\n      \\\\repeat percent 2 { c''8 d'' }\\n      \\\\repeat volta 2 { c'4 d' e' f' }\\n      \\\\alternative {\\n        { g' a' a' g' }\\n        { f' e' d' c' }\\n      }\\n    }\\n    \\\\bar \\\"|.\\\"\\n\\nIn scores containing multiple voices, unfolding of repeats in MIDI output will only occur correctly if each voice contains fully notated repeat indications.\\n\\nWhen creating a score file using \\\\unfoldRepeats for MIDI, it is necessary to make two \\\\score blocks: one for MIDI (with unfolded repeats) and one for notation (with volta, tremolo, and percent repeats). For example,\\n\\n    \\\\score {\\n      …music…\\n      \\\\layout { … }\\n    }\\n    \\\\score {\\n      \\\\unfoldRepeats …music…\\n      \\\\midi { … }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\unHideNotes\",\n    \"detail\": \"Hidden notes\",\n    \"documentation\": \"Hidden (or invisible or transparent) notes can be useful in preparing theory or composition exercises.\\n\\n    c4 d\\n    \\\\hideNotes\\n    e4 f\\n    \\\\unHideNotes\\n    g a\\n    \\\\hideNotes\\n    b\\n    \\\\unHideNotes\\n    c\\n\\nNote heads, stems, and flags, and rests are invisible. Beams are invisible if they start on a hidden note. Objects that are attached to invisible notes are still visible.\\n\\n    e8(\\\\p f g a)--\\n    \\\\hideNotes\\n    e8(\\\\p f g a)--\"\n  },\n  {\n    \"label\": \"\\\\unset\",\n    \"detail\": \"5.3.2 The \\\\set command\",\n    \"documentation\": \"The \\\\unset command:\\n\\n    \\\\unset context.property\\n\\nis used to remove the definition of property from context. This command removes the definition only if it is set in context. Properties that have been set in enclosing contexts will not be altered by an unset in an enclosed context:\\n\\n    \\\\set Score.autoBeaming = ##t\\n    <<\\n      {\\n        \\\\unset autoBeaming\\n        e8 e e e\\n        \\\\unset Score.autoBeaming\\n        e8 e e e\\n      } \\\\\\\\ {\\n        c8 c c c c8 c c c\\n      }\\n    >>\\n\\nLike \\\\set, the context argument does not have to be specified for a bottom context, so the two statements\\n\\n    \\\\set Voice.autoBeaming = ##t\\n    \\\\set autoBeaming = ##t\\n\\nare equivalent if the current bottom context is Voice.\"\n  },\n  {\n    \"label\": \"\\\\upbow\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\upbow\",\n    \"detail\": \"Bowing indications\",\n    \"documentation\": \"Bowing indications are created as articulations, which are described in Articulations and ornamentations.\\n\\nThe bowing commands, \\\\upbow and \\\\downbow, are used with slurs as follows:\\n\\n    c4(\\\\downbow d) e(\\\\upbow f)\\n\\nand the following example shows three ways in which an open A string on a violin might be indicated:\\n\\n    a4 \\\\open\\n    a^\\\\markup { \\\\teeny \\\"II\\\" }\\n    a2^\\\\markup { \\\\small \\\"sul A\\\" }\"\n  },\n  {\n    \"label\": \"\\\\upmordent\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\upprall\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\upright\",\n    \"detail\": \"A.10.1 Font\",\n    \"documentation\": \"Set font-shape to upright. This is the opposite of italic.\\n\\n    \\\\markup {\\n      \\\\italic {\\n        italic text\\n        \\\\hspace #2\\n        \\\\upright {\\n          upright text\\n        }\\n        \\\\hspace #2\\n        italic again\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\varcoda\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\vcenter\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Align arg to its Y center.\\n\\n    \\\\markup {\\n      one\\n      \\\\vcenter\\n      two\\n      three\\n    }\"\n  },\n  {\n    \"label\": \"\\\\verbatim-file\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Read the contents of file name, and include it verbatim.\\n\\n    \\\\markup {\\n      \\\\verbatim-file #\\\"simple.ly\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\verylongfermata\",\n    \"detail\": \"Articulations and ornamentations\",\n    \"documentation\": \"A variety of symbols that denote articulations, ornamentations, and other performance indications can be attached to a note using this syntax:\\n\\n    note\\\\name\\n\\nThe possible values for name are listed in List of articulations. For example:\\n\\n    c4\\\\staccato c\\\\mordent b2\\\\turn\\n    c1\\\\fermata\"\n  },\n  {\n    \"label\": \"\\\\virga\",\n    \"detail\": \"Gregorian square neume ligatures\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\virga\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\virgula\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\virgula, \\\\caesura, \\\\divisioMinima, \\\\divisioMaior, \\\\divisioMaxima, \\\\finalis.\"\n  },\n  {\n    \"label\": \"\\\\voiceFourStyle\",\n    \"detail\": \"Voice styles\",\n    \"documentation\": \"Voices may be given distinct colors and shapes, allowing them to be easily identified:\\n\\n    <<\\n      { \\\\voiceOneStyle d4 c2 b4 }\\n      \\\\\\\\\\n      { \\\\voiceTwoStyle e,2 e }\\n      \\\\\\\\\\n      { \\\\voiceThreeStyle b2. c4 }\\n      \\\\\\\\\\n      { \\\\voiceFourStyle g'2 g }\\n    >>\\n\\nThe \\\\voiceNeutralStyle command is used to revert to the standard presentation.\"\n  },\n  {\n    \"label\": \"\\\\voiceNeutralStyle\",\n    \"detail\": \"Voice styles\",\n    \"documentation\": \"Voices may be given distinct colors and shapes, allowing them to be easily identified:\\n\\n    <<\\n      { \\\\voiceOneStyle d4 c2 b4 }\\n      \\\\\\\\\\n      { \\\\voiceTwoStyle e,2 e }\\n      \\\\\\\\\\n      { \\\\voiceThreeStyle b2. c4 }\\n      \\\\\\\\\\n      { \\\\voiceFourStyle g'2 g }\\n    >>\\n\\nThe \\\\voiceNeutralStyle command is used to revert to the standard presentation.\"\n  },\n  {\n    \"label\": \"\\\\voiceOne\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\voiceOne ... \\\\voiceFour\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\voiceOneStyle\",\n    \"detail\": \"Voice styles\",\n    \"documentation\": \"Voices may be given distinct colors and shapes, allowing them to be easily identified:\\n\\n    <<\\n      { \\\\voiceOneStyle d4 c2 b4 }\\n      \\\\\\\\\\n      { \\\\voiceTwoStyle e,2 e }\\n      \\\\\\\\\\n      { \\\\voiceThreeStyle b2. c4 }\\n      \\\\\\\\\\n      { \\\\voiceFourStyle g'2 g }\\n    >>\\n\\nThe \\\\voiceNeutralStyle command is used to revert to the standard presentation.\"\n  },\n  {\n    \"label\": \"\\\\voiceThreeStyle\",\n    \"detail\": \"Voice styles\",\n    \"documentation\": \"Voices may be given distinct colors and shapes, allowing them to be easily identified:\\n\\n    <<\\n      { \\\\voiceOneStyle d4 c2 b4 }\\n      \\\\\\\\\\n      { \\\\voiceTwoStyle e,2 e }\\n      \\\\\\\\\\n      { \\\\voiceThreeStyle b2. c4 }\\n      \\\\\\\\\\n      { \\\\voiceFourStyle g'2 g }\\n    >>\\n\\nThe \\\\voiceNeutralStyle command is used to revert to the standard presentation.\"\n  },\n  {\n    \"label\": \"\\\\voiceTwoStyle\",\n    \"detail\": \"Voice styles\",\n    \"documentation\": \"Voices may be given distinct colors and shapes, allowing them to be easily identified:\\n\\n    <<\\n      { \\\\voiceOneStyle d4 c2 b4 }\\n      \\\\\\\\\\n      { \\\\voiceTwoStyle e,2 e }\\n      \\\\\\\\\\n      { \\\\voiceThreeStyle b2. c4 }\\n      \\\\\\\\\\n      { \\\\voiceFourStyle g'2 g }\\n    >>\\n\\nThe \\\\voiceNeutralStyle command is used to revert to the standard presentation.\"\n  },\n  {\n    \"label\": \"\\\\void\",\n    \"detail\": \"3.6.1 Displaying LilyPond notation\",\n    \"documentation\": \"Note that Lilypond does not just display the music expression, but also interprets it (since \\\\displayLilyMusic returns it in addition to displaying it). This is convenient since you can just insert \\\\displayLilyMusic into existing music in order to get information about it. If you don’t actually want Lilypond to interpret the displayed music as well as display it, use \\\\void in order to have it ignored:\\n\\n    {\\n      \\\\void \\\\displayLilyMusic \\\\transpose c a, { c4 e g a bes }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\vspace\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Create an invisible object taking up vertical space of amount multiplied by 3.\\n\\n    \\\\markup {\\n        \\\\center-column {\\n        one\\n        \\\\vspace #2\\n        two\\n        \\\\vspace #5\\n        three\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\walkerHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\walkerHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\whiteout\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Provide a white background for arg.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\filled-box #'(-1 . 10) #'(-3 . 4) #1\\n        \\\\whiteout whiteout\\n    }\"\n  },\n  {\n    \"label\": \"\\\\with\",\n    \"detail\": \"5.1.4 Modifying context plug-ins\",\n    \"documentation\": \"where the … should be the name of an engraver. Here is a simple example which removes Time_signature_engraver and Clef_engraver from a Staff context,\\n\\n    <<\\n      \\\\new Staff {\\n        f2 g\\n      }\\n      \\\\new Staff \\\\with {\\n         \\\\remove \\\"Time_signature_engraver\\\"\\n         \\\\remove \\\"Clef_engraver\\\"\\n      } {\\n        f2 g2\\n      }\\n    >>\\n\\nIn the second staff there are no time signature or clef symbols. This is a rather crude method of making objects disappear since it will affect the entire staff. This method also influences the spacing, which may or may not be desirable. More sophisticated methods of blanking objects are shown in Visibility and color of objects.\\n\\nThe next example shows a practical application. Bar lines and time signatures are normally synchronized across the score. This is done by the Timing_translator and Default_bar_line_engraver. This plug-in keeps an administration of time signature, location within the measure, etc. By moving these engraver from Score to Staff context, we can have a score where each staff has its own time signature.\"\n  },\n  {\n    \"label\": \"\\\\with\",\n    \"detail\": \"Changing just one specific context\",\n    \"documentation\": \"The context properties of just one specific context instance can be changed in a \\\\with block. All other context instances of the same type retain the default settings built into LilyPond and modified by any \\\\layout block within scope. The \\\\with block must be placed immediately after the \\\\new context-type command:\\n\\n    \\\\new Staff \\\\with { [context settings for this context instance only] }\\n    {\\n      …\\n    }\\n\\nSince such a ‘context modification’ is specified inside of music, it will affect all outputs (typesetting and Midi) as opposed to changes within an output definition.\\n\\nThe following types of settings may be specified:\\n\\n - An \\\\override command, but with the context name omitted\\n\\\\score {\\n  \\\\new Staff {\\n    \\\\new Voice \\\\with { \\\\override Stem.thickness = #4.0 }\\n    {\\n      \\\\relative c'' {\\n        a4^\\\"Thick stems\\\" a a a\\n        a4 a a a\\n      }\\n    }\\n  }\\n}\\n \\n\\n\\n - Directly setting a context property\\n\\\\score {\\n  <<\\n    \\\\new Staff {\\n      \\\\relative c'' {\\n        a4^\\\"Default font\\\" a a a\\n        a4 a a a\\n      }\\n    }\\n    \\\\new Staff \\\\with { fontSize = #-4 }\\n    {\\n      \\\\relative c'' {\\n        a4^\\\"Smaller font\\\" a a a\\n        a4 a a a\\n      }\\n    }\\n  >>\\n}\\n \\n\\n\\n - A predefined command such as \\\\dynamicUp\\n\\\\score {\\n  <<\\n    \\\\new Staff {\\n      \\\\new Voice {\\n        \\\\relative c'' {\\n          a4^\\\"Dynamics below\\\" a a a\\n          a4 a a\\\\ff a\\n        }\\n      }\\n    }\\n    \\\\new Staff \\\\with { \\\\accidentalStyle dodecaphonic }\\n    {\\n      \\\\new Voice \\\\with { \\\\dynamicUp }\\n      {\\n        \\\\relative c'' {\\n          a4^\\\"Dynamics above\\\" a a a\\n          a4 a a\\\\ff a\\n        }\\n      }\\n    }\\n  >>\\n}\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\with-color\",\n    \"detail\": \"Coloring objects\",\n    \"documentation\": \"Individual objects may be assigned colors. Valid color names are listed in the List of colors.\\n\\n    \\\\override NoteHead.color = #red\\n    c4 c\\n    \\\\override NoteHead.color = #(x11-color 'LimeGreen)\\n    d\\n    \\\\override Stem.color = #blue\\n    e\\n\\nThe full range of colors defined for X11 can be accessed by using the Scheme function x11-color. The function takes one argument; this can be a symbol in the form 'FooBar or a string in the form \\\"FooBar\\\". The first form is quicker to write and is more efficient. However, using the second form it is possible to access X11 colors by the multi-word form of its name.\\n\\nIf x11-color cannot make sense of the parameter then the color returned defaults to black.\\n\\n    \\\\override Staff.StaffSymbol.color = #(x11-color 'SlateBlue2)\\n    \\\\set Staff.instrumentName = \\\\markup {\\n      \\\\with-color #(x11-color 'navy) \\\"Clarinet\\\"\\n    }\\n    gis8 a\\n    \\\\override Beam.color = #(x11-color \\\"medium turquoise\\\")\\n    gis a\\n    \\\\override Accidental.color = #(x11-color 'DarkRed)\\n    gis a\\n    \\\\override NoteHead.color = #(x11-color \\\"LimeGreen\\\")\\n    gis a\\n    % this is deliberate nonsense; note that the stems remain black\\n    \\\\override Stem.color = #(x11-color 'Boggle)\\n    b2 cis\"\n  },\n  {\n    \"label\": \"\\\\with-color\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Draw arg in color specified by color.\\n\\n    \\\\markup {\\n      \\\\with-color #red\\n      red\\n      \\\\hspace #2\\n      \\\\with-color #green\\n      green\\n      \\\\hspace #2\\n      \\\\with-color #blue\\n      blue\\n    }\"\n  },\n  {\n    \"label\": \"\\\\with-dimensions\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Set the dimensions of arg to x and y.\"\n  },\n  {\n    \"label\": \"\\\\with-link\",\n    \"detail\": \"A.10.7 Other\",\n    \"documentation\": \"Add a link to the page holding label label around arg. This only works in the PDF backend.\\n\\n    \\\\markup {\\n      \\\\with-link #'label {\\n        \\\\italic { This links to the page containing the label... }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\with-url\",\n    \"detail\": \"A.10.3 Graphic\",\n    \"documentation\": \"Add a link to URL url around arg. This only works in the PDF backend.\\n\\n    \\\\markup {\\n      \\\\with-url #\\\"http://lilypond.org/\\\" {\\n        LilyPond ... \\\\italic {\\n          music notation for everyone\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\woodwind-diagram\",\n    \"detail\": \"A.10.5 Instrument Specific Markup\",\n    \"documentation\": \"Make a woodwind-instrument diagram. For example, say\\n\\n    \\\\markup \\\\woodwind-diagram\\n      #'oboe #'((lh . (d ees)) (cc . (five3qT1q)) (rh . (gis)))\\n\\nfor an oboe with the left-hand d key, left-hand ees key, and right-hand gis key depressed while the five-hole of the central column effectuates a trill between 1/4 and 3/4 closed.\\n\\nThe following instruments are supported:\\n\\n - - piccolo\\n - - flute\\n - - oboe\\n - - clarinet\\n - - bass-clarinet\\n - - saxophone\\n - - bassoon\\n - - contrabassoon\\n\\nTo see all of the callable keys for a given instrument, include the function (print-keys 'instrument) in your .ly file, where instrument is the instrument whose keys you want to print.\\n\\nCertain keys allow for special configurations. The entire gamut of configurations possible is as follows:\\n\\n - - 1q (1/4 covered)\\n - - 1h (1/2 covered)\\n - - 3q (3/4 covered)\\n - - R (ring depressed)\\n - - F (fully covered; the default if no state put)\\n\\nAdditionally, these configurations can be used in trills. So, for example, three3qTR effectuates a trill between 3/4 full and ring depressed on the three hole. As another example, threeRT effectuates a trill between R and open, whereas threeTR effectuates a trill between open and shut. To see all of the possibilities for all of the keys of a given instrument, invoke (print-keys-verbose 'instrument).\\n\\nLastly, substituting an empty list for the pressed-key alist will result in a diagram with all of the keys drawn but none filled, for example:\\n\\n    \\\\markup \\\\woodwind-diagram #'oboe #'()\\n\\nUsed properties:\\n\\n - graphical (#t)\\n - thickness (0.1)\\n - size (1)\"\n  },\n  {\n    \"label\": \"\\\\wordwrap\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Long text indications can also be automatically wrapped accordingly to the given line width. These will be either left-aligned or justified, as shown in the following example.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line  \\\\smallCaps { La vida breve }\\n        \\\\line \\\\bold { Acto I }\\n        \\\\wordwrap \\\\italic {\\n          (La escena representa el corral de una casa de\\n          gitanos en el Albaicín de Granada.  Al fondo una\\n          puerta por la que se ve el negro interior de\\n          una Fragua, iluminado por los rojos resplandores\\n          del fuego.)\\n        }\\n        \\\\hspace #0\\n        \\\\line \\\\bold { Acto II }\\n        \\\\override #'(line-width . 50)\\n        \\\\justify \\\\italic {\\n          (Calle de Granada.  Fachada de la casa de Carmela\\n          y su hermano Manuel con grandes ventanas abiertas\\n          a través de las que se ve el patio\\n          donde se celebra una alegre fiesta)\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\wordwrap\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Simple wordwrap. Use \\\\override #'(line-width . X) to set the line width, where X is the number of staff spaces.\\n\\n    \\\\markup {\\n      \\\\wordwrap {\\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\\n        do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\n        Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n        laboris nisi ut aliquip ex ea commodo consequat.\\n      }\\n    }\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width (#f)\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-field\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Wordwrap the data which has been assigned to symbol.\\n\\n    \\\\header {\\n      title = \\\"My title\\\"\\n      myText = \\\"Lorem ipsum dolor sit amet, consectetur adipisicing\\n        elit, sed do eiusmod tempor incididunt ut labore et dolore\\n        magna aliqua.  Ut enim ad minim veniam, quis nostrud\\n        exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n        consequat.\\\"\\n    }\\n    \\\\paper {\\n      bookTitleMarkup = \\\\markup {\\n        \\\\column {\\n          \\\\fill-line { \\\\fromproperty #'header:title }\\n          \\\\null\\n          \\\\wordwrap-field #'header:myText\\n        }\\n      }\\n    }\\n    \\\\markup {\\n      \\\\null\\n    }\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-internal\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Internal markup list command used to define \\\\justify and \\\\wordwrap.\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width (#f)\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-lines\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-lines\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Like \\\\wordwrap, but return a list of lines instead of a single markup. Use \\\\override-lines #'(line-width . X) to set the line width, where X is the number of staff spaces.\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width (#f)\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-string\",\n    \"detail\": \"A.10.2 Align\",\n    \"documentation\": \"Wordwrap a string. Paragraphs may be separated with double newlines.\\n\\n    \\\\markup {\\n      \\\\override #'(line-width . 40)\\n      \\\\wordwrap-string #\\\"Lorem ipsum dolor sit amet, consectetur\\n          adipisicing elit, sed do eiusmod tempor incididunt ut labore\\n          et dolore magna aliqua.\\n          Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n          laboris nisi ut aliquip ex ea commodo consequat.\\n          Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n          qui officia deserunt mollit anim id est laborum\\\"\\n    }\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width\\n - baseline-skip\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-string-internal\",\n    \"detail\": \"A.11 Text markup list commands\",\n    \"documentation\": \"Internal markup list command used to define \\\\justify-string and \\\\wordwrap-string.\\n\\nUsed properties:\\n\\n - text-direction (1)\\n - word-space\\n - line-width\"\n  },\n  {\n    \"label\": \"]\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"In some cases it may be necessary to override the automatic beaming algorithm. For example, the autobeamer will not put beams over rests or bar lines, and in choral scores the beaming is often set to follow the meter of the lyrics rather than the notes. Such beams can be specified manually by marking the begin and end point with [ and ].\\n\\n    r4 r8[ g' a r] r g[ | a] r\"\n  },\n  {\n    \"label\": \"^\",\n    \"detail\": \"Extended and altered chords\",\n    \"documentation\": \"Following any steps to be added, a series of steps to be removed is introduced in a modifier string with a prefix of ^. If more than one step is to be removed, the steps to be removed are separated by . following the initial ^.\\n\\n    \\\\chordmode {\\n      c1^3 c:7^5 c:9^3 c:9^3.5 c:13.11^3.7\\n    }\"\n  },\n  {\n    \"label\": \"_\",\n    \"detail\": \"Multiple syllables to one note\",\n    \"documentation\": \"In order to assign more than one syllable to a single note with spaces between the syllables, you can surround the phrase with quotes or use a _ character. Alternatively, you can use the tilde symbol (~) to get a lyric tie.\\n\\n    {\\n      { \\\\autoBeamOff\\n        r8 b c fis, fis c' b e,\\n      }\\n      \\\\addlyrics\\n      {\\n        \\\\override LyricHyphen.minimum-distance = #1.0 % Ensure hyphens are visible\\n        Che_in ques -- ta_e_in quel -- l'al -- tr'on -- da\\n      }\\n      \\\\addlyrics { \\\"Che in\\\" ques -- \\\"ta e in\\\" quel -- l'al -- tr'on -- da }\\n      \\\\addlyrics { Che~in ques -- ta~e~in quel -- l'al -- tr'on -- da }\\n    }\"\n  },\n  {\n    \"label\": \"|\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"Bar checks help detect errors in the entered durations. A bar check may be entered using the bar symbol, |, at any place where a bar line is expected to fall. If bar check lines are encountered at other places, a list of warnings is printed in the log file, showing the line numbers and lines in which the bar checks failed. In the next example, the second bar check will signal an error.\\n\\n    \\\\time 3/4 c2 e4 | g2 |\\n\\nBar checks can also be used in lyrics:\\n\\n    \\\\lyricmode {\\n      \\\\time 2/4\\n      Twin -- kle | Twin -- kle |\\n    }\\n\\nAn incorrect duration can result in a completely garbled score, especially if the score is polyphonic, so a good place to start correcting input is by scanning for failed bar checks and incorrect durations.\\n\\nIf successive bar checks are off by the same musical interval, only the first warning message is displayed. This allows the warning to focus on the source of the timing error.\"\n  },\n  {\n    \"label\": \"|\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"It is also possible to redefine the action taken when a bar check or pipe symbol, |, is encountered in the input, so that it does something other than a bar check. This is done by assigning a music expression to \\\"|\\\". In the following example | is set to insert a double bar line wherever it appears in the input, rather than checking for end of bar.\\n\\n    \\\"|\\\" = \\\\bar \\\"||\\\"\\n    {\\n      c'2 c' |\\n      c'2 c'\\n      c'2 | c'\\n      c'2 c'\\n    }\"\n  },\n  {\n    \"label\": \"~\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"A tie connects two adjacent note heads of the same pitch. The tie in effect extends the duration of a note.\\n\\nNote: Ties should not be confused with slurs, which indicate articulation, or phrasing slurs, which indicate musical phrasing. A tie is just a way of extending a note duration, similar to the augmentation dot.\\n\\n\\n\\nA tie is entered by appending a tilde symbol (~) to the first of each pair of notes being tied. This indicates that the note should be tied to the following note, which must be at the same pitch.\\n\\n    a2~ a4~ a16 r r8\\n\\nTies are used either when the note crosses a bar line, or when dots cannot be used to denote the rhythm. Ties should also be used when note values cross larger subdivisions of the measure:\\n\\n    \\\\relative c' {\\n      r8 c~ c2 r4 |\\n      r8^\\\"not\\\" c2~ c8 r4\\n    }\\n\\nIf you need to tie many notes across bar lines, it may be easier to use automatic note splitting, see Automatic note splitting. This mechanism automatically splits long notes, and ties them across bar lines.\"\n  },\n  {\n    \"label\": \"\\\\absolute\",\n    \"detail\": \"Absolute octave entry\",\n    \"documentation\": \"Music can be marked explicitly as being in absolute octave notation by preceding it with \\\\absolute:\\n\\n    \\\\absolute musicexpr\\n\\nwill be interpreted in absolute octave entry mode regardless of the context it appears in.\"\n  },\n  {\n    \"label\": \"\\\\absolute\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make music absolute. This does not actually change the music itself but rather hides it from surrounding \\\\relative commands.\"\n  },\n  {\n    \"label\": \"\\\\accepts\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\acciaccatura\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create an acciaccatura from the following music expression\"\n  },\n  {\n    \"label\": \"\\\\accidentalStyle\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set accidental style to symbol list style in the form ‘piano-cautionary’. If style has a form like ‘Staff.piano-cautionary’, the settings are applied to that context. Otherwise, the context defaults to ‘Staff’, except for piano styles, which use ‘GrandStaff’ as a context.\"\n  },\n  {\n    \"label\": \"\\\\addChordShape\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"In addition to fret diagrams, LilyPond stores an internal list of chord shapes. The chord shapes are fret diagrams that can be shifted along the neck to different positions to provide different chords. Chord shapes can be added to the internal list and then used to define predefined fret diagrams. Because they can be moved to various positions on the neck, chord shapes will normally not contain any open strings. Like fret diagrams, chord shapes can be entered as either fret-diagram-terse strings or fret-diagram-verbose marking lists.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    % Add a new chord shape\\n    \\\\addChordShape #'powerf #guitar-tuning #\\\"1-1;3-3;3-4;x;x;x;\\\"\\n    % add some new chords based on the power chord shape\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { f'' }\\n                            #guitar-tuning\\n                            #(chord-shape 'powerf guitar-tuning)\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { g'' }\\n                            #guitar-tuning\\n                            #(offset-fret 2 (chord-shape 'powerf guitar-tuning))\\n    mychords = \\\\chordmode{\\n      f1 f'' g g''\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\\n\\nThe graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a predefined fret diagram, the interface properties belong to FretBoards.FretBoard.\"\n  },\n  {\n    \"label\": \"\\\\addChordShape\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Add chord shape shape-definition to the chord-shape-table hash with the key (cons key-symbol tuning).\"\n  },\n  {\n    \"label\": \"\\\\addInstrumentDefinition\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"If an instrument switch is needed, \\\\addInstrumentDefinition may be used in combination with \\\\instrumentSwitch to create a detailed list of the necessary changes for the switch. The \\\\addInstrumentDefinition command has two arguments: an identifying string, and an association list of context properties and values to be used for the instrument. It must be placed in the toplevel scope. \\\\instrumentSwitch is used in the music expression to declare the instrument switch:\\n\\n    \\\\addInstrumentDefinition #\\\"contrabassoon\\\"\\n      #`((instrumentTransposition . ,(ly:make-pitch -1 0 0))\\n         (shortInstrumentName . \\\"Cbsn.\\\")\\n         (clefGlyph . \\\"clefs.F\\\")\\n         (middleCPosition . 6)\\n         (clefPosition . 2)\\n         (instrumentCueName . ,(make-bold-markup \\\"cbsn.\\\"))\\n         (midiInstrument . \\\"bassoon\\\"))\\n    \\\\new Staff \\\\with {\\n      instrumentName = #\\\"Bassoon\\\"\\n    }\\n    \\\\relative c' {\\n      \\\\clef tenor\\n      \\\\compressFullBarRests\\n      c2 g'\\n      R1*16\\n      \\\\instrumentSwitch \\\"contrabassoon\\\"\\n      c,,2 g \\\\break\\n      c,1 ~ | c1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\addInstrumentDefinition\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The \\\\killCues command removes cue notes from a music expression, so the same music expression can be used to produce the instrument part with cues and the score. The \\\\killCues command removes only the notes and events that were quoted by \\\\cueDuring. Other markup associated with cues, such as clef changes and a label identifying the source instrument, can be tagged for selective inclusion in the score; see Using tags.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\tag #'part {\\n        \\\\clef treble\\n        \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\tag #'part \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\fluteNotes\\n      }\\n      \\\\new Staff {\\n        \\\\removeWithTag #'part { \\\\killCues { \\\\bassoonNotes } }\\n      }\\n    >>\\n\\nAlternatively, Clef changes and instrument labels can be collected into an instrument definition for repeated use, using \\\\addInstrumentDefinition described in Instrument names.\"\n  },\n  {\n    \"label\": \"\\\\addInstrumentDefinition\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create instrument name with properties list.\"\n  },\n  {\n    \"label\": \"\\\\additionalPitchPrefix\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\addQuote\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\addQuote\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Define music as a quotable music expression named name\"\n  },\n  {\n    \"label\": \"\\\\aeolian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\afterGrace\",\n    \"detail\": \"Grace notes\",\n    \"documentation\": \"If you want to end a note with a grace, use the \\\\afterGrace command. It takes two arguments: the main note, and the grace notes following the main note.\\n\\n    c1 \\\\afterGrace d1 { c16[ d] } c1\\n\\nThis will put the grace notes after a space lasting 3/4 of the length of the main note. The default fraction 3/4 can be changed by setting afterGraceFraction. The following example shows the results from setting the space at the default, at 15/16, and finally at 1/2 of the main note.\\n\\n    <<\\n      \\\\new Staff {\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n      \\\\new Staff {\\n        #(define afterGraceFraction (cons 15 16))\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n      \\\\new Staff {\\n        #(define afterGraceFraction (cons 1 2))\\n        c1 \\\\afterGrace d1 { c16[ d] } c1\\n      }\\n    >>\\n\\nThe space between the main note and the grace note may also be specified using spacers. The following example places the grace note after a space lasting 7/8 of the main note.\\n\\n    \\\\new Voice {\\n      <<\\n        { d1^\\\\trill_( }\\n        { s2 s4. \\\\grace { c16 d } }\\n      >>\\n      c1)\\n    }\"\n  },\n  {\n    \"label\": \"\\\\afterGrace\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create grace note(s) after a main music expression.\"\n  },\n  {\n    \"label\": \"\\\\aikenHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\aikenHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\alias\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\alignAboveContext\",\n    \"detail\": \"5.1.7 Context layout order\",\n    \"documentation\": \"Sometimes a context is required to exist for just a brief period, a good example being the staff context for an ossia. This is usually achieved by introducing the context definition at the appropriate place in parallel with corresponding section of the main music. By default, the temporary context will be placed below all the existing contexts. To reposition it above the context called “main”, it should be defined like this:\\n\\n    \\\\new Staff \\\\with { alignAboveContext = #\\\"main\\\" } \\n\\nA similar situation arises when positioning a temporary lyrics context within a multi-staved layout such as a ChoirStaff, for example, when adding a second verse to a repeated section. By default the temporary lyrics context will be placed beneath the lower staves. By defining the temporary lyrics context with alignBelowContext it can be positioned correctly beneath the (named) lyrics context containing the first verse.\\n\\nExamples showing this repositioning of temporary contexts can be found elsewhere — see Nesting music expressions, Modifying single staves and Techniques specific to lyrics.\"\n  },\n  {\n    \"label\": \"\\\\alignBelowContext\",\n    \"detail\": \"Simple repeats\",\n    \"documentation\": \"However, if this construct is embedded within a multi-staved context such as a ChoirStaff the lyrics of the second and third verses will appear beneath the bottom staff.\\n\\nTo position them correctly use alignBelowContext:\\n\\n    \\\\score {\\n      <<\\n        \\\\new Staff {\\n          \\\\new Voice = \\\"melody\\\" {\\n            \\\\relative c'' {\\n    \\t  a4 a a a\\n    \\t  \\\\repeat volta 3 { b4 b b b }\\n              c4 c c c\\n    \\t}\\n          }\\n        }\\n        \\\\new Lyrics = \\\"firstVerse\\\" \\\\lyricsto \\\"melody\\\" {\\n          Not re -- peat -- ed.\\n          <<\\n            { The first time words.\\t}\\n    \\t\\\\new Lyrics = \\\"secondVerse\\\"\\n            \\\\with { alignBelowContext = #\\\"firstVerse\\\" } {\\n    \\t  \\\\set associatedVoice = \\\"melody\\\"\\n    \\t  Sec -- ond time words.\\n    \\t}\\n    \\t\\\\new Lyrics = \\\"thirdVerse\\\"\\n            \\\\with { alignBelowContext = #\\\"secondVerse\\\" } {\\n    \\t  \\\\set associatedVoice = \\\"melody\\\"\\n    \\t  The third time words.\\n    \\t}\\n          >>\\n          The end sec -- tion.\\n        }\\n        \\\\new Voice = \\\"harmony\\\" {\\n          \\\\relative c' {\\n            f4 f f f \\\\repeat volta 2 { g8 g g4 g2 } a4 a8. a16 a2\\n          }\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\alignBelowContext\",\n    \"detail\": \"5.1.7 Context layout order\",\n    \"documentation\": \"Sometimes a context is required to exist for just a brief period, a good example being the staff context for an ossia. This is usually achieved by introducing the context definition at the appropriate place in parallel with corresponding section of the main music. By default, the temporary context will be placed below all the existing contexts. To reposition it above the context called “main”, it should be defined like this:\\n\\n    \\\\new Staff \\\\with { alignAboveContext = #\\\"main\\\" } \\n\\nA similar situation arises when positioning a temporary lyrics context within a multi-staved layout such as a ChoirStaff, for example, when adding a second verse to a repeated section. By default the temporary lyrics context will be placed beneath the lower staves. By defining the temporary lyrics context with alignBelowContext it can be positioned correctly beneath the (named) lyrics context containing the first verse.\\n\\nExamples showing this repositioning of temporary contexts can be found elsewhere — see Nesting music expressions, Modifying single staves and Techniques specific to lyrics.\"\n  },\n  {\n    \"label\": \"\\\\allowPageTurn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Allow a page turn. May be used at toplevel (ie between scores or markups), or inside a score.\"\n  },\n  {\n    \"label\": \"\\\\allowVoltaHook\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"(undocumented; fixme)\"\n  },\n  {\n    \"label\": \"\\\\alterBroken\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Override property for pieces of broken spanner item with values arg. item may either be music in the form of a starting spanner event, or a symbol list in the form ‘Context.Grob’ or just ‘Grob’. Iff item is in the form of a spanner event, property may also have the form ‘Grob.property’ for specifying a directed tweak.\"\n  },\n  {\n    \"label\": \"\\\\annotate-spacing\",\n    \"detail\": \"4.6.1 Displaying spacing\",\n    \"documentation\": \"To graphically display the dimensions of vertical layout variables that may be altered for page formatting, set annotate-spacing in the \\\\paper block:\\n\\n    \\\\book {\\n      \\\\score { { c4 } }\\n      \\\\paper { annotate-spacing = ##t }\\n    }\\n\\nAll layout dimensions are displayed in staff-spaces, regardless of the units specified in the \\\\paper or \\\\layout block. In the above example, paper-height has a value of 59.75 staff-spaces, and the staff-size is 20 points (the default value). Note that:\\n\\n1 point\\t= (25.4/72.27) mm\\n1 staff-space\\t= (staff-size)/4 pts\\n= (staff-size)/4 * (25.4/72.27) mm\\n\\n\\nIn this case, one staff-space is approximately equal to 1.757mm. Thus the paper-height measurement of 59.75 staff-spaces is equivalent to 105 millimeters, the height of a6 paper in landscape orientation. The pairs (a,b) are intervals, where a is the lower edge and b the upper edge of the interval.\"\n  },\n  {\n    \"label\": \"\\\\appendToTag\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Append more to the elements of all music expressions in music that are tagged with tag.\"\n  },\n  {\n    \"label\": \"\\\\applyContext\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Modify context properties with Scheme procedure proc.\"\n  },\n  {\n    \"label\": \"\\\\applyMusic\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Apply procedure func to music.\"\n  },\n  {\n    \"label\": \"\\\\applyOutput\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Apply function proc to every layout object in context ctx\"\n  },\n  {\n    \"label\": \"\\\\appoggiatura\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create an appoggiatura from music\"\n  },\n  {\n    \"label\": \"\\\\arpeggio\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioArrowDown\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioArrowUp\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioBracket\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arpeggioNormal\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"An arpeggio on a chord (also known as a broken chord) is denoted by appending \\\\arpeggio to the chord construct:\\n\\n    <c e g c>1\\\\arpeggio\\n\\nDifferent types of arpeggios may be written. \\\\arpeggioNormal reverts to a normal arpeggio:\\n\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowUp\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioArrowDown\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\"\n  },\n  {\n    \"label\": \"\\\\arpeggioParenthesis\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arpeggioParenthesisDashed\",\n    \"detail\": \"Arpeggio\",\n    \"documentation\": \"Special bracketed arpeggio symbols can be created:\\n\\n    <c e g c>2\\n    \\\\arpeggioBracket\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesis\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioParenthesisDashed\\n    <c e g c>2\\\\arpeggio\\n    \\\\arpeggioNormal\\n    <c e g c>2\\\\arpeggio\\n\\nThe dash properties of the parenthesis arpeggio are controlled with the 'dash-details property, which is described at Slurs.\\n\\nArpeggios can be explicitly written out with ties. For more information, see Ties.\"\n  },\n  {\n    \"label\": \"\\\\arrow-head\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\assertBeamQuant\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Testing function: check whether the beam quants l and r are correct\"\n  },\n  {\n    \"label\": \"\\\\assertBeamSlope\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Testing function: check whether the slope of the beam is the same as comp\"\n  },\n  {\n    \"label\": \"\\\\aug\",\n    \"detail\": \"Common chords\",\n    \"documentation\": \"The table below shows the actions of the quality modifiers on triads and seventh chords. The default seventh step added to chords is a minor or flatted seventh, which makes the dominant seventh the basic seventh chord. All alterations are relative to the dominant seventh. A more complete table of modifier usage is found at Common chord modifiers.\\n\\nModifier\\tAction\\tExample\\nNone\\tThe default action; produces a major triad.\\t\\n \\n\\nm, m7\\tThe minor chord. This modifier lowers the 3rd.\\t\\n \\n\\ndim, dim7\\tThe diminished chord. This modifier lowers the 3rd, 5th and (if present) the 7th step.\\t\\n \\n\\naug\\tThe augmented chord. This modifier raises the 5th step.\\t\\n \\n\\nmaj, maj7\\tThe major 7th chord. This modifier adds a raised 7th step. The 7 following maj is optional. Do NOT use this modifier to create a major triad.\\t\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\auto-first-page-number\",\n    \"detail\": \"\\\\paper variables for page numbering\",\n    \"documentation\": \"The page breaking algorithm is affected by the first page number being odd or even. If set to true, the page breaking algorithm will decide whether to start with an odd or even number. This will result in the first page number remaining as is or being increased by one. Default: #f.\"\n  },\n  {\n    \"label\": \"\\\\autoBeaming\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\autoBeaming\",\n    \"detail\": \"Output definitions - blueprints for contexts\",\n    \"documentation\": \"Some settings affect several outputs: for example, if autoBeaming is turned off in some context, beams count as melismata for the purpose of matching music to lyrics as described in Automatic syllable durations. This matching is done both for printed output as well as for Midi. If changes made to autoBeaming within a context definition of a \\\\layout block are not repeated in the corresponding \\\\midi block, lyrics and music will get out of sync in Midi.\"\n  },\n  {\n    \"label\": \"\\\\autoBeamOff\",\n    \"detail\": \"Automatic beams\",\n    \"documentation\": \"If these automatic decisions are not satisfactory, beaming can be entered explicitly; see Manual beams. Beams must be entered manually if beams are to be extended over rests.\\n\\nIf automatic beaming is not required, it may be turned off with \\\\autoBeamOff and on with \\\\autoBeamOn:\\n\\n    c4 c8 c8. c16 c8. c16 c8\\n    \\\\autoBeamOff\\n    c4 c8 c8. c16 c8.\\n    \\\\autoBeamOn\\n    c16 c8\"\n  },\n  {\n    \"label\": \"\\\\autoBeamOn\",\n    \"detail\": \"Automatic beams\",\n    \"documentation\": \"If these automatic decisions are not satisfactory, beaming can be entered explicitly; see Manual beams. Beams must be entered manually if beams are to be extended over rests.\\n\\nIf automatic beaming is not required, it may be turned off with \\\\autoBeamOff and on with \\\\autoBeamOn:\\n\\n    c4 c8 c8. c16 c8. c16 c8\\n    \\\\autoBeamOff\\n    c4 c8 c8. c16 c8.\\n    \\\\autoBeamOn\\n    c16 c8\"\n  },\n  {\n    \"label\": \"\\\\autochange\",\n    \"detail\": \"Changing staff automatically\",\n    \"documentation\": \"Voices can be made to switch automatically between the top and the bottom staff. The syntax for this is\\n\\n    \\\\autochange …music…\\n\\nThis will create two staves inside the current staff group (usually a PianoStaff), called \\\"up\\\" and \\\"down\\\". The lower staff will be in the bass clef by default. The autochanger switches on the basis of the pitch (middle C is the turning point), and it looks ahead skipping over rests to switch in advance.\\n\\n    \\\\new PianoStaff {\\n      \\\\autochange {\\n        g4 a b c'\\n        d'4 r a g\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\autochange\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make voices that switch between staves automatically\"\n  },\n  {\n    \"label\": \"\\\\balloonGrobText\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonGrobText\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Attach text to grob-name at offset offset (use like \\\\once)\"\n  },\n  {\n    \"label\": \"\\\\balloonLengthOff\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonLengthOn\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonText\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\balloonText\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Attach text at offset (use like \\\\tweak)\"\n  },\n  {\n    \"label\": \"Balloon_engraver\",\n    \"detail\": \"Balloon help\",\n    \"documentation\": \"Elements of notation can be marked and named with the help of a square balloon. The primary purpose of this feature is to explain notation.\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\\n\\nThere are two music functions, balloonGrobText and balloonText; the former is used like \\\\once \\\\override to attach text to any grob, and the latter is used like \\\\tweak, typically within chords, to attach text to an individual note.\\n\\nBalloon text does not influence note spacing, but this can be altered:\\n\\n    \\\\new Voice \\\\with { \\\\consists \\\"Balloon_engraver\\\" }\\n    {\\n      \\\\balloonGrobText #'Stem #'(3 . 4) \\\\markup { \\\"I'm a Stem\\\" }\\n      a8\\n      \\\\balloonGrobText #'Rest #'(-4 . -4) \\\\markup { \\\"I'm a rest\\\" }\\n      r\\n      \\\\balloonLengthOn\\n      <c, g'-\\\\balloonText #'(-2 . -2) \\\\markup { \\\"I'm a note head\\\" } c>2.\\n    }\"\n  },\n  {\n    \"label\": \"\\\\banjo-c-tuning\",\n    \"detail\": \"Banjo tablatures\",\n    \"documentation\": \"A number of common tunings for the five-string banjo are predefined: banjo-c-tuning (gCGBD), banjo-modal-tuning (gDGCD), banjo-open-d-tuning (aDF#AD) and banjo-open-dm-tuning (aDFAD).\\n\\nThese may be converted to four-string tunings using the four-string-banjo function:\\n\\n    \\\\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)\"\n  },\n  {\n    \"label\": \"\\\\banjo-modal-tuning\",\n    \"detail\": \"Banjo tablatures\",\n    \"documentation\": \"A number of common tunings for the five-string banjo are predefined: banjo-c-tuning (gCGBD), banjo-modal-tuning (gDGCD), banjo-open-d-tuning (aDF#AD) and banjo-open-dm-tuning (aDFAD).\\n\\nThese may be converted to four-string tunings using the four-string-banjo function:\\n\\n    \\\\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)\"\n  },\n  {\n    \"label\": \"\\\\banjo-open-d-tuning\",\n    \"detail\": \"Banjo tablatures\",\n    \"documentation\": \"A number of common tunings for the five-string banjo are predefined: banjo-c-tuning (gCGBD), banjo-modal-tuning (gDGCD), banjo-open-d-tuning (aDF#AD) and banjo-open-dm-tuning (aDFAD).\\n\\nThese may be converted to four-string tunings using the four-string-banjo function:\\n\\n    \\\\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)\"\n  },\n  {\n    \"label\": \"\\\\banjo-open-dm-tuning\",\n    \"detail\": \"Banjo tablatures\",\n    \"documentation\": \"A number of common tunings for the five-string banjo are predefined: banjo-c-tuning (gCGBD), banjo-modal-tuning (gDGCD), banjo-open-d-tuning (aDF#AD) and banjo-open-dm-tuning (aDFAD).\\n\\nThese may be converted to four-string tunings using the four-string-banjo function:\\n\\n    \\\\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)\"\n  },\n  {\n    \"label\": \"\\\\bar\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"Bar lines delimit measures, and are also used to indicate repeats. Normally, simple bar lines are automatically inserted into the printed output at places based on the current time signature.\\n\\nThe simple bar lines inserted automatically can be changed to other types with the \\\\bar command. For example, a closing double bar line is usually placed at the end of a piece:\\n\\n    e4 d c2 \\\\bar \\\"|.\\\"\\n\\nIt is not invalid if the final note in a measure does not end on the automatically entered bar line: the note is assumed to carry over into the next measure. But if a long sequence of such carry-over measures appears the music can appear compressed or even flowing off the page. This is because automatic line breaks happen only at the end of complete measures, i.e., where all notes end before the end of a measure.\\n\\nNote: An incorrect duration can cause line breaks to be inhibited, leading to a line of highly compressed music or music which flows off the page.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\bar\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"The command ‘\\\\bar bartype’ is a shortcut for ‘\\\\set Timing.whichBar = bartype’. A bar line is created whenever the whichBar property is set.\\n\\nThe default bar type used for automatically inserted bar lines is \\\"|\\\". This may be changed at any time with ‘\\\\set Timing.defaultBarType = bartype’.\"\n  },\n  {\n    \"label\": \"\\\\bar\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert a bar line of type type\"\n  },\n  {\n    \"label\": \"\\\\barCheckSynchronize\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"Bar checks help detect errors in the entered durations. A bar check may be entered using the bar symbol, |, at any place where a bar line is expected to fall. If bar check lines are encountered at other places, a list of warnings is printed in the log file, showing the line numbers and lines in which the bar checks failed. In the next example, the second bar check will signal an error.\\n\\n    \\\\time 3/4 c2 e4 | g2 |\\n\\nBar checks can also be used in lyrics:\\n\\n    \\\\lyricmode {\\n      \\\\time 2/4\\n      Twin -- kle | Twin -- kle |\\n    }\\n\\nAn incorrect duration can result in a completely garbled score, especially if the score is polyphonic, so a good place to start correcting input is by scanning for failed bar checks and incorrect durations.\\n\\nIf successive bar checks are off by the same musical interval, only the first warning message is displayed. This allows the warning to focus on the source of the timing error.\"\n  },\n  {\n    \"label\": \"BarNumber\",\n    \"detail\": \"Bar numbers\",\n    \"documentation\": \"Bar numbers can be typeset at regular intervals instead of just at the beginning of every line. To do this the default behavior must be overridden to permit bar numbers to be printed at places other than the start of a line. This is controlled by the break-visibility property of BarNumber. This takes three values which may be set to #t or #f to specify whether the corresponding bar number is visible or not. The order of the three values is end of line visible, middle of line visible, beginning of line visible. In the following example bar numbers are printed at all possible places:\\n\\n    \\\\override Score.BarNumber.break-visibility = ##(#t #t #t)\\n    \\\\set Score.currentBarNumber = #11\\n    % Permit first bar number to be printed\\n    \\\\bar \\\"\\\"\\n    c1 | c | c | c\\n    \\\\break\\n    c1 | c | c | c\"\n  },\n  {\n    \"label\": \"\\\\barNumberCheck\",\n    \"detail\": \"Bar and bar number checks\",\n    \"documentation\": \"When copying large pieces of music, it can be helpful to check that the LilyPond bar number corresponds to the original that you are entering from. This can be checked with \\\\barNumberCheck, for example,\\n\\n\\\\barNumberCheck #123\\n\\n\\nwill print a warning if the currentBarNumber is not 123 when it is processed.\"\n  },\n  {\n    \"label\": \"\\\\barNumberCheck\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print a warning if the current bar number is not n.\"\n  },\n  {\n    \"label\": \"\\\\barNumberVisibility\",\n    \"detail\": \"Bar numbers\",\n    \"documentation\": \"Bar numbers can be typeset at regular intervals instead of just at the beginning of every line. To do this the default behavior must be overridden to permit bar numbers to be printed at places other than the start of a line. This is controlled by the break-visibility property of BarNumber. This takes three values which may be set to #t or #f to specify whether the corresponding bar number is visible or not. The order of the three values is end of line visible, middle of line visible, beginning of line visible. In the following example bar numbers are printed at all possible places:\\n\\n    \\\\override Score.BarNumber.break-visibility = ##(#t #t #t)\\n    \\\\set Score.currentBarNumber = #11\\n    % Permit first bar number to be printed\\n    \\\\bar \\\"\\\"\\n    c1 | c | c | c\\n    \\\\break\\n    c1 | c | c | c\"\n  },\n  {\n    \"label\": \"\\\\bartype\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"The command ‘\\\\bar bartype’ is a shortcut for ‘\\\\set Timing.whichBar = bartype’. A bar line is created whenever the whichBar property is set.\\n\\nThe default bar type used for automatically inserted bar lines is \\\"|\\\". This may be changed at any time with ‘\\\\set Timing.defaultBarType = bartype’.\"\n  },\n  {\n    \"label\": \"\\\\base-shortest-duration\",\n    \"detail\": \"4.5.1 Horizontal spacing overview\",\n    \"documentation\": \"Notes that are even shorter than the common shortest note are followed by a space that is proportional to their duration relative to the common shortest note. So if we were to add only a few 16th notes to the example above, they would be followed by half a NHW:\\n\\n    c2 c4. c8 | c4. c16[ c] c4. c8 | c8 c c4 c c\\n\\nIn the Essay on automated music engraving, it was explained that stem directions influence spacing (see Optical spacing). This is controlled with the stem-spacing-correction property in the NoteSpacing, object. These are generated for every Voice context. The StaffSpacing object (generated in Staff context) contains the same property for controlling the stem/bar line spacing. The following example shows these corrections, once with default settings, and once with exaggerated corrections:\\n\\nProportional notation is supported; see Proportional notation.\"\n  },\n  {\n    \"label\": \"\\\\baseMoment\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\beamExceptions\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\beatStructure\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\bendAfter\",\n    \"detail\": \"Falls and doits\",\n    \"documentation\": \"Falls and doits can be added to notes using the \\\\bendAfter command. The direction of the fall or doit is indicated with a plus or minus (up or down). The number indicates the pitch interval that the fall or doit will extend beyond the main note.\\n\\n    c2\\\\bendAfter #+4\\n    c2\\\\bendAfter #-4\\n    c2\\\\bendAfter #+6.5\\n    c2\\\\bendAfter #-6.5\\n    c2\\\\bendAfter #+8\\n    c2\\\\bendAfter #-8\"\n  },\n  {\n    \"label\": \"\\\\bendAfter\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create a fall or doit of pitch interval delta.\"\n  },\n  {\n    \"label\": \"\\\\binding-offset\",\n    \"detail\": \"\\\\paper variables for two-sided mode\",\n    \"documentation\": \"The amount inner-margin is increased to make sure nothing will be hidden by the binding. If the paper size is modified, this dimension’s default value is scaled accordingly. Works only with two-sided set to true.\"\n  },\n  {\n    \"label\": \"\\\\blank-after-score-page-penalty\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"The penalty for having a blank page after the end of one score and before the next. By default, this is smaller than blank-page-penalty, so that blank pages after scores are inserted in preference to blank pages within a score. Default: 2.\"\n  },\n  {\n    \"label\": \"\\\\blank-last-page-penalty\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"The penalty for ending the score on an even-numbered page. If blank-last-page-penalty is large and ly:page-turn-breaking is selected, then LilyPond will be less likely to produce a score in which the last page is even-numbered. Instead, it will adjust the spacing in order to use one page more or one page less. Default: 0.\"\n  },\n  {\n    \"label\": \"\\\\blank-page-penalty\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"The penalty for having a blank page in the middle of a score. If blank-page-penalty is large and ly:page-turn-breaking is selected, then LilyPond will be less likely to insert a page in the middle of a score. Instead, it will space out the music further to fill the blank page and the following one. Default: 5.\"\n  },\n  {\n    \"label\": \"\\\\bold\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\bookOutputName\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Direct output for the current book block to newfilename.\"\n  },\n  {\n    \"label\": \"\\\\bookOutputSuffix\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the output filename suffix for the current book block to newsuffix.\"\n  },\n  {\n    \"label\": \"\\\\bookTitleMarkup\",\n    \"detail\": \"Custom layout for titles\",\n    \"documentation\": \"\\\\markup commands in the \\\\header block are useful for simple text formatting, but they do not allow precise control over the placement of titles. To customize the placement of the text fields, change either or both of the following \\\\paper variables:\\n\\n - bookTitleMarkup\\n - scoreTitleMarkup\\n\\nThe placement of titles when using the default values of these \\\\markup variables is shown in the examples in Default layout of bookpart and score titles.\\n\\nThe default settings for scoreTitleMarkup as defined in ‘ly/titling-init.ly’ are:\\n\\n    scoreTitleMarkup = \\\\markup { \\\\column {\\n      \\\\on-the-fly \\\\print-all-headers { \\\\bookTitleMarkup \\\\hspace #1 }\\n      \\\\fill-line {\\n        \\\\fromproperty #'header:piece\\n        \\\\fromproperty #'header:opus\\n      }\\n    }\\n    }\\n\\nThis places the piece and opus text fields at opposite ends of the same line:\\n\\n    \\\\score {\\n      { s1 }\\n      \\\\header {\\n        piece = \\\"PRAELUDIUM I\\\"\\n        opus = \\\"BWV 846\\\"\\n      }\\n    }\\n\\nThis example redefines scoreTitleMarkup so that the piece text field is centered and in a large, bold font.\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\fontsize #4 \\\\bold \\\\fromproperty #'header:piece\\n            \\\\fromproperty #'header:opus\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"PRAELUDIUM I\\\"\\n          opus = \\\"BWV 846\\\"\\n        }\\n      }\\n    }\\n\\nText fields not normally effective in score \\\\header blocks can be printed in the Score Title area if print-all-headers is placed inside the \\\\paper block. A disadvantage of using this method is that text fields that are intended specifically for the Bookpart Title area need to be manually suppressed in every \\\\score block. See Titles explained.\\n\\nTo avoid this, add the desired text field to the scoreTitleMarkup definition. In the following example, the composer text field (normally associated with bookTitleMarkup) is added to scoreTitleMarkup, allowing each score to list a different composer:\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\fontsize #4 \\\\bold \\\\fromproperty #'header:piece\\n            \\\\fromproperty #'header:composer\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"MENUET\\\"\\n          composer = \\\"Christian Petzold\\\"\\n        }\\n      }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"RONDEAU\\\"\\n          composer = \\\"François Couperin\\\"\\n        }\\n      }\\n    }\\n\\nIt is also possible to create your own custom text fields, and refer to them in the markup definition.\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\override #`(direction . ,UP) {\\n              \\\\dir-column {\\n                \\\\center-align \\\\fontsize #-1 \\\\bold\\n                  \\\\fromproperty #'header:mycustomtext %% User-defined field\\n                \\\\center-align \\\\fontsize #4 \\\\bold\\n                  \\\\fromproperty #'header:piece\\n              }\\n            }\\n            \\\\fromproperty #'header:opus\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"FUGA I\\\"\\n          mycustomtext = \\\"A 4 VOCI\\\" %% User-defined field\\n          opus = \\\"BWV 846\\\"\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bottom-margin\",\n    \"detail\": \"4.1.3 Fixed vertical spacing \\\\paper variables\",\n    \"documentation\": \"The margin between the bottom of the printable area and the bottom of the page. If the paper size is modified, this dimension’s default value is scaled accordingly.\"\n  },\n  {\n    \"label\": \"\\\\box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"New dynamic marks\",\n    \"documentation\": \"In markup mode, editorial dynamics (within parentheses or square brackets) can be created. The syntax for markup mode is described in Formatting text.\\n\\n    roundF = \\\\markup {\\n        \\\\center-align \\\\concat { \\\\bold { \\\\italic ( }\\n               \\\\dynamic f \\\\bold { \\\\italic ) } } }\\n    boxF = \\\\markup { \\\\bracket { \\\\dynamic f } }\\n    \\\\relative c' {\\n      c1_\\\\roundF\\n      c1_\\\\boxF\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\bracket\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"There are three styles of pedal indications: text, bracket, and mixed. The sustain pedal and the una corda pedal use the text style by default while the sostenuto pedal uses mixed by default.\\n\\n    c4\\\\sustainOn g c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'mixed\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'bracket\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\n    \\\\bar \\\"|.\\\"\\n\\nThe placement of the pedal commands matches the physical movement of the sustain pedal during piano performance. Pedalling to the final bar line is indicated by omitting the final pedal off command.\\n\\nPedal indications may be placed in a Dynamics context, which aligns them on a horizontal line.\"\n  },\n  {\n    \"label\": \"\\\\breakable\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"Beams across line breaks\\n\\nLine breaks are normally forbidden when beams cross bar lines. This behavior can be changed as shown:\\n\\n    \\\\relative c'' {\\n      \\\\override Beam.breakable = ##t\\n      c8 c[ c] c[ c] c[ c] c[ \\\\break\\n      c8] c[ c] c[ c] c[ c] c\\n    }\\n\\nChanging beam knee gap\\n\\nKneed beams are inserted automatically when a large gap is detected between the note heads. This behavior can be tuned through the auto-knee-gap property. A kneed beam is drawn if the gap is larger than the value of auto-knee-gap plus the width of the beam object (which depends on the duration of the notes and the slope of the beam). By default auto-knee-gap is set to 5.5 staff spaces.\\n\\n    {\\n      f8 f''8 f8 f''8\\n      \\\\override Beam.auto-knee-gap = #6\\n      f8 f''8 f8 f''8\\n    }\"\n  },\n  {\n    \"label\": \"\\\\breathe\",\n    \"detail\": \"Breath marks\",\n    \"documentation\": \"Breath marks are entered using \\\\breathe:\\n\\n    c2. \\\\breathe d4\\n\\nA breath mark will end an automatic beam; to override this behavior, see Manual beams.\\n\\n    c8 \\\\breathe d e f g2\\n\\nMusical indicators for breath marks in ancient notation, divisiones, are supported. For details, see Divisiones.\"\n  },\n  {\n    \"label\": \"\\\\breathe\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert a breath mark.\"\n  },\n  {\n    \"label\": \"\\\\breve\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\breve\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cadenzaOff\",\n    \"detail\": \"Unmetered music\",\n    \"documentation\": \"In metered music bar lines are inserted and bar numbers are calculated automatically. In unmetered music (i.e. cadenzas), this is not desirable and can be ‘switched off’ using the command \\\\cadenzaOn, then ‘switched back on’ at the appropriate place using \\\\cadenzaOff.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nBar numbering is resumed at the end of the cadenza.\\n\\n    % Show all bar numbers\\n    \\\\override Score.BarNumber.break-visibility = #all-visible\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nInserting a \\\\bar command within a cadenza does not start a new measure, even if a bar line is printed. So any accidentals – which are usually assumed to remain in force until the end of the measure – will still be valid after the bar line printed by \\\\bar. If subsequent accidentals should be printed, forced accidentals or reminder accidentals need to be inserted manually, see Accidentals.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    cis4 d cis d\\n    \\\\bar \\\"|\\\"\\n    % First cis is printed without alteration even if it's after a \\\\bar\\n    cis4 d cis! d\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n\\nAutomatic beaming is disabled by \\\\cadenzaOn. Therefore, all beaming in cadenzas must be entered manually. See Manual beams.\\n\\n    \\\\repeat unfold 8 { c8 }\\n    \\\\cadenzaOn\\n    cis8 c c c c\\n    \\\\bar\\\"|\\\"\\n    c8 c c\\n    \\\\cadenzaOff\\n    \\\\repeat unfold 8 { c8 }\\n\\nThese predefined commands affect all staves in the score, even when placed in just one Voice context. To change this, move the Timing_translator from the Score context to the Staff context. See Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\cadenzaOn\",\n    \"detail\": \"Unmetered music\",\n    \"documentation\": \"In metered music bar lines are inserted and bar numbers are calculated automatically. In unmetered music (i.e. cadenzas), this is not desirable and can be ‘switched off’ using the command \\\\cadenzaOn, then ‘switched back on’ at the appropriate place using \\\\cadenzaOff.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nBar numbering is resumed at the end of the cadenza.\\n\\n    % Show all bar numbers\\n    \\\\override Score.BarNumber.break-visibility = #all-visible\\n    c4 d e d\\n    \\\\cadenzaOn\\n    c4 c d8[ d d] f4 g4.\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n    d4 e d c\\n\\nInserting a \\\\bar command within a cadenza does not start a new measure, even if a bar line is printed. So any accidentals – which are usually assumed to remain in force until the end of the measure – will still be valid after the bar line printed by \\\\bar. If subsequent accidentals should be printed, forced accidentals or reminder accidentals need to be inserted manually, see Accidentals.\\n\\n    c4 d e d\\n    \\\\cadenzaOn\\n    cis4 d cis d\\n    \\\\bar \\\"|\\\"\\n    % First cis is printed without alteration even if it's after a \\\\bar\\n    cis4 d cis! d\\n    \\\\cadenzaOff\\n    \\\\bar \\\"|\\\"\\n\\nAutomatic beaming is disabled by \\\\cadenzaOn. Therefore, all beaming in cadenzas must be entered manually. See Manual beams.\\n\\n    \\\\repeat unfold 8 { c8 }\\n    \\\\cadenzaOn\\n    cis8 c c c c\\n    \\\\bar\\\"|\\\"\\n    c8 c c\\n    \\\\cadenzaOff\\n    \\\\repeat unfold 8 { c8 }\\n\\nThese predefined commands affect all staves in the score, even when placed in just one Voice context. To change this, move the Timing_translator from the Score context to the Staff context. See Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\center-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\center-column\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"A markup object may include several lines of text. In the following example, each element or expression is placed on its own line, either left-aligned or centered:\\n\\n    \\\\markup {\\n      \\\\column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n      \\\\hspace #10\\n      \\\\center-column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\change\",\n    \"detail\": \"Changing staff manually\",\n    \"documentation\": \"Voices can be switched between staves manually, using the command\\n\\n    \\\\change Staff = staffname\\n\\nThe string staffname is the name of the staff. It switches the current voice from its current staff to the staff called staffname. Typical values for staffname are \\\"up\\\" and \\\"down\\\", or \\\"RH\\\" and \\\"LH\\\".\\n\\nThe staff to which the voice is being switched must exist at the time of the switch. If necessary, staves should be “kept alive”, see Keeping contexts alive.\\n\\nCross-staff notes are beamed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"up\\\" {\\n        <e' c'>8\\n        \\\\change Staff = \\\"down\\\"\\n        g8 fis g\\n        \\\\change Staff = \\\"up\\\"\\n        <g'' c''>8\\n        \\\\change Staff = \\\"down\\\"\\n        e8 dis e\\n        \\\\change Staff = \\\"up\\\"\\n      }\\n      \\\\new Staff = \\\"down\\\" {\\n        \\\\clef bass\\n        % keep staff alive\\n        s1\\n      }\\n    >>\\n\\nIf the beaming needs to be tweaked, make any changes to the stem directions first. The beam positions are then measured from the center of the staff that is closest to the beam. For a simple example of beam tweaking, see notation Fixing overlapping notation.\"\n  },\n  {\n    \"label\": \"\\\\check-consistency\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"If set to true, print a warning if left-margin, line-width, and right-margin do not exactly add up to paper-width, and replace each of these (except paper-width) with its default value (scaled to the paper size if necessary). If set to false, ignore any inconsistencies and allow systems to run off the edge of the page.\"\n  },\n  {\n    \"label\": \"\\\\chordChanges\",\n    \"detail\": \"Selected Snippets\",\n    \"documentation\": \"Showing chords at changes\\n\\nChord names can be displayed only at the start of lines and when the chord changes.\\n\\n    harmonies = \\\\chordmode {\\n      c1:m c:m \\\\break c:m c:m d\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\set chordChanges = ##t\\n        \\\\harmonies\\n      }\\n      \\\\new Staff {\\n        \\\\relative c' { \\\\harmonies }\\n      }\\n    >>\\n\\nSimple lead sheet\\n\\nWhen put together, chord names, a melody, and lyrics form a lead sheet:\\n\\n    <<\\n      \\\\chords { c2 g:sus4 f e }\\n      \\\\relative c'' {\\n        a4 e c8 e r4\\n        b2 c4( d)\\n      }\\n      \\\\addlyrics { One day this shall be free __ }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\chordmode\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"It is common that both chord names and fret diagrams are displayed together. This is achieved by putting a ChordNames context in parallel with a FretBoards context and giving both contexts the same music.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    mychords = \\\\chordmode{\\n      c1 f g\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\chordNameExceptions\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\chordNameLowercaseMinor\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"German songbooks may indicate minor chords as lowercase letters, without any m suffix. This can be obtained by setting the chordNameLowercaseMinor property:\\n\\n    \\\\chords {\\n      \\\\set chordNameLowercaseMinor = ##t\\n      c2 d:m e:m f\\n    }\\n\\nIf none of the existing settings give the desired output, the chord name display can be tuned through the following properties.\\n\\nchordRootNamer\\nThe chord name is usually printed as a letter for the root with an optional alteration. The transformation from pitch to letter is done by this function. Special note names (for example, the German ‘H’ for a B-chord) can be produced by storing a new function in this property.\\n\\nmajorSevenSymbol\\nThis property contains the markup object used to follow the output of chordRootNamer to identify a major 7 chord. Predefined options are whiteTriangleMarkup and blackTriangleMarkup.\\n\\nadditionalPitchPrefix\\nWhen the chord name contains additional pitches, they can optionally be prefixed with some text. The default is no prefix, in order to avoid too much visual clutter, but for small numbers of additional pitches this can be visually effective.\\n\\n\\\\new ChordNames {\\n  <c e g d'>    % add9\\n  \\\\set additionalPitchPrefix = #\\\"add\\\"\\n  <c e g d'>    % add9\\n}\\n \\n\\nchordNoteNamer\\nWhen the chord name contains additional pitches other than the root (e.g., an added bass note), this function is used to print the additional pitch. By default the pitch is printed using chordRootNamer. The chordNoteNamer property can be set to a specialized function to change this behavior. For example, the bass note can be printed in lower case.\\n\\nchordNameSeparator\\nDifferent parts of a chord name are normally separated by a small amount of horizontal space. By setting chordNameSeparator, you can use any desired markup for a separator. This does not affect the separator between a chord and its bass note; to customize that, use slashChordSeparator.\\n\\n\\\\chords {\\n  c4:7.9- c:7.9-/g\\n  \\\\set chordNameSeparator = \\\\markup { \\\"/\\\" }\\n  \\\\break\\n  c4:7.9- c:7.9-/g\\n}\\n \\n\\nslashChordSeparator\\nChords can be played over a bass note other than the conventional root of the chord. These are known as “inversions” or “slash chords”, because the default way of notating them is with a forward slash between the main chord and the bass note. Therefore the value of slashChordSeparator defaults to a forward slash, but you can change it to any markup you choose.\\n\\n\\\\chords {\\n  c4:7.9- c:7.9-/g\\n  \\\\set slashChordSeparator = \\\\markup { \\\" over \\\" }\\n  \\\\break\\n  c4:7.9- c:7.9-/g\\n}\\n \\n\\nchordNameExceptions\\nThis property is a list of pairs. The first item in each pair is a set of pitches used to identify the steps present in the chord. The second item is a markup that will follow the chordRootNamer output to create the chord name.\\n\\nminorChordModifier\\nMinor chords are often denoted via a ‘m’ suffix to the right of the root of the chord. However some idioms prefer other suffices, such as a minus sign.\\n\\n\\\\chords {\\n  c4:min f:min7\\n  \\\\set minorChordModifier = \\\\markup { \\\"-\\\" }\\n  \\\\break\\n  c4:min f:min7\\n}\\n \\n\\nchordPrefixSpacer\\nThe modifier for minor chords as determined by minorChordModifier is usually printed immediately to the right of the root of the chord. A spacer can be placed between the root and the modifier by setting chordPrefixSpacer. The spacer is not used when the root is altered.\\n\\n\"\n  },\n  {\n    \"label\": \"ChordNames\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"It is common that both chord names and fret diagrams are displayed together. This is achieved by putting a ChordNames context in parallel with a FretBoards context and giving both contexts the same music.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    mychords = \\\\chordmode{\\n      c1 f g\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\chordNameSeparator\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\chordNoteNamer\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\chordPrefixSpacer\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\chordRepeats\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Walk through music putting the notes of the previous chord into repeat chords, as well as an optional list of event-types such as #'(string-number-event).\"\n  },\n  {\n    \"label\": \"\\\\chordRootNamer\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\chords\",\n    \"detail\": \"Printing chord names\",\n    \"documentation\": \"\\\\chords { … } is a shortcut notation for \\\\new ChordNames { \\\\chordmode { … } }.\\n\\n    \\\\chords {\\n      c2 f4.:m g8:maj7\\n    }\\n\\n    \\\\new ChordNames {\\n      \\\\chordmode {\\n        c2 f4.:m g8:maj7\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\circle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\clef\",\n    \"detail\": \"Clef\",\n    \"documentation\": \"The clef may be altered. Middle C is shown in every example. The following clef names can (but do not need to) be enclosed in quotes.\\n\\n    \\\\clef treble\\n    c2 c\\n    \\\\clef alto\\n    c2 c\\n    \\\\clef tenor\\n    c2 c\\n    \\\\clef bass\\n    c2 c\\n\\nOther clefs include:\\n\\n    \\\\clef french\\n    c2 c\\n    \\\\clef soprano\\n    c2 c\\n    \\\\clef mezzosoprano\\n    c2 c\\n    \\\\clef baritone\\n    c2 c\\n    \\\\break\\n    \\\\clef varbaritone\\n    c2 c\\n    \\\\clef subbass\\n    c2 c\\n    \\\\clef percussion\\n    c2 c\\n    \\\\break\\n    \\\\clef G   % synonym for treble\\n    c2 c\\n    \\\\clef F   % synonym for bass\\n    c2 c\\n    \\\\clef C   % synonym for alto\\n    c2 c\"\n  },\n  {\n    \"label\": \"\\\\clef\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the current clef to type.\"\n  },\n  {\n    \"label\": \"\\\\color\",\n    \"detail\": \"Coloring objects\",\n    \"documentation\": \"Individual objects may be assigned colors. Valid color names are listed in the List of colors.\\n\\n    \\\\override NoteHead.color = #red\\n    c4 c\\n    \\\\override NoteHead.color = #(x11-color 'LimeGreen)\\n    d\\n    \\\\override Stem.color = #blue\\n    e\\n\\nThe full range of colors defined for X11 can be accessed by using the Scheme function x11-color. The function takes one argument; this can be a symbol in the form 'FooBar or a string in the form \\\"FooBar\\\". The first form is quicker to write and is more efficient. However, using the second form it is possible to access X11 colors by the multi-word form of its name.\\n\\nIf x11-color cannot make sense of the parameter then the color returned defaults to black.\\n\\n    \\\\override Staff.StaffSymbol.color = #(x11-color 'SlateBlue2)\\n    \\\\set Staff.instrumentName = \\\\markup {\\n      \\\\with-color #(x11-color 'navy) \\\"Clarinet\\\"\\n    }\\n    gis8 a\\n    \\\\override Beam.color = #(x11-color \\\"medium turquoise\\\")\\n    gis a\\n    \\\\override Accidental.color = #(x11-color 'DarkRed)\\n    gis a\\n    \\\\override NoteHead.color = #(x11-color \\\"LimeGreen\\\")\\n    gis a\\n    % this is deliberate nonsense; note that the stems remain black\\n    \\\\override Stem.color = #(x11-color 'Boggle)\\n    b2 cis\"\n  },\n  {\n    \"label\": \"\\\\column\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"A markup object may include several lines of text. In the following example, each element or expression is placed on its own line, either left-aligned or centered:\\n\\n    \\\\markup {\\n      \\\\column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n      \\\\hspace #10\\n      \\\\center-column {\\n        a\\n        \\\"b c\\\"\\n        \\\\line { d e f }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\combine\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\common-shortest-duration\",\n    \"detail\": \"4.5.1 Horizontal spacing overview\",\n    \"documentation\": \"Notes that are even shorter than the common shortest note are followed by a space that is proportional to their duration relative to the common shortest note. So if we were to add only a few 16th notes to the example above, they would be followed by half a NHW:\\n\\n    c2 c4. c8 | c4. c16[ c] c4. c8 | c8 c c4 c c\\n\\nIn the Essay on automated music engraving, it was explained that stem directions influence spacing (see Optical spacing). This is controlled with the stem-spacing-correction property in the NoteSpacing, object. These are generated for every Voice context. The StaffSpacing object (generated in Staff context) contains the same property for controlling the stem/bar line spacing. The following example shows these corrections, once with default settings, and once with exaggerated corrections:\\n\\nProportional notation is supported; see Proportional notation.\"\n  },\n  {\n    \"label\": \"Completion_heads_engraver\",\n    \"detail\": \"Automatic note splitting\",\n    \"documentation\": \"Long notes which overrun bar lines can be converted automatically to tied notes. This is done by replacing the Note_heads_engraver with the Completion_heads_engraver. Similarly, long rests which overrun bar lines are split automatically by replacing the Rest_engraver with the Completion_rest_engraver. In the following example, notes and rests crossing the bar lines are split, notes are also tied.\\n\\n    \\\\new Voice \\\\with {\\n      \\\\remove \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Completion_heads_engraver\\\"\\n      \\\\remove \\\"Rest_engraver\\\"\\n      \\\\consists \\\"Completion_rest_engraver\\\"\\n    }\\n    { c2. c8 d4 e f g a b c8 c2 b4 a g16 f4 e d c8. c2 r1*2 }\\n\\nThese engravers split all running notes and rests at the bar line, and inserts ties for notes. One of its uses is to debug complex scores: if the measures are not entirely filled, then the ties show exactly how much each measure is off.\"\n  },\n  {\n    \"label\": \"Completion_rest_engraver\",\n    \"detail\": \"Automatic note splitting\",\n    \"documentation\": \"Long notes which overrun bar lines can be converted automatically to tied notes. This is done by replacing the Note_heads_engraver with the Completion_heads_engraver. Similarly, long rests which overrun bar lines are split automatically by replacing the Rest_engraver with the Completion_rest_engraver. In the following example, notes and rests crossing the bar lines are split, notes are also tied.\\n\\n    \\\\new Voice \\\\with {\\n      \\\\remove \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Completion_heads_engraver\\\"\\n      \\\\remove \\\"Rest_engraver\\\"\\n      \\\\consists \\\"Completion_rest_engraver\\\"\\n    }\\n    { c2. c8 d4 e f g a b c8 c2 b4 a g16 f4 e d c8. c2 r1*2 }\\n\\nThese engravers split all running notes and rests at the bar line, and inserts ties for notes. One of its uses is to debug complex scores: if the measures are not entirely filled, then the ties show exactly how much each measure is off.\"\n  },\n  {\n    \"label\": \"\\\\compoundMeter\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create compound time signatures. The argument is a Scheme list of lists. Each list describes one fraction, with the last entry being the denominator, while the first entries describe the summands in the enumerator. If the time signature consists of just one fraction, the list can be given directly, i.e. not as a list containing a single list. For example, a time signature of (3+1)/8 + 2/4 would be created as \\\\compoundMeter #'((3 1 8) (2 4)), and a time signature of (3+2)/8 as \\\\compoundMeter #'((3 2 8)) or shorter \\\\compoundMeter #'(3 2 8).\"\n  },\n  {\n    \"label\": \"\\\\compressFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"By default a multi-measure rest is expanded in the printed score to show all the rest measures explicitly. Alternatively, a multi-measure rest can be shown as a single measure containing a multi-measure rest symbol, with the number of measures of rest printed above the measure:\\n\\n    % Default behavior\\n    \\\\time 3/4 r2. | R2.*2 |\\n    \\\\time 2/4 R2 |\\n    \\\\time 4/4\\n    % Rest measures contracted to single measure\\n    \\\\compressFullBarRests\\n    r1 | R1*17 | R1*4 |\\n    % Rest measures expanded\\n    \\\\expandFullBarRests\\n    \\\\time 3/4\\n    R2.*2 |\"\n  },\n  {\n    \"label\": \"\\\\compressFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\consists\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\controlpitch\",\n    \"detail\": \"Octave checks\",\n    \"documentation\": \"In relative mode, it is easy to forget an octave changing mark. Octave checks make such errors easier to find by displaying a warning and correcting the octave if a note is found in an unexpected octave.\\n\\nTo check the octave of a note, specify the absolute octave after the = symbol. This example will generate a warning (and change the pitch) because the second note is the absolute octave d'' instead of d' as indicated by the octave correction.\\n\\n    \\\\relative c'' {\\n      c2 d='4 d\\n      e2 f\\n    }\\n\\nThe octave of notes may also be checked with the \\\\octaveCheck controlpitch command. controlpitch is specified in absolute mode. This checks that the interval between the previous note and the controlpitch is within a fourth (i.e., the normal calculation of relative mode). If this check fails, a warning is printed, but the previous note is not changed. Future notes are relative to the controlpitch.\\n\\n    \\\\relative c'' {\\n      c2 d\\n      \\\\octaveCheck c'\\n      e2 f\\n    }\\n\\nCompare the two bars below. The first and third \\\\octaveCheck checks fail, but the second one does not fail.\\n\\n    \\\\relative c'' {\\n      c4 f g f\\n      c4\\n      \\\\octaveCheck c'\\n      f\\n      \\\\octaveCheck c'\\n      g\\n      \\\\octaveCheck c'\\n      f\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\cresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\crescHairpin\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\crescTextCresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\cross\",\n    \"detail\": \"Special note heads\",\n    \"documentation\": \"The appearance of note heads may be altered:\\n\\n    c4 b\\n    \\\\override NoteHead.style = #'cross\\n    c4 b\\n    \\\\revert NoteHead.style\\n    a b\\n    \\\\override NoteHead.style = #'harmonic\\n    a b\\n    \\\\revert NoteHead.style\\n    c4 d e f\\n\\nTo see all note head styles, see Note head styles.\\n\\nThe cross style is used to represent a variety of musical intentions. The following generic predefined commands modify the note head in both staff and tablature contexts and can be used to represent any musical meaning:\\n\\n    c4 b\\n    \\\\xNotesOn\\n     a b c4 b\\n    \\\\xNotesOff\\n    c4 d\\n\\nThe music function form of this predefined command may be used inside and outside chords to generate crossed note heads in both staff and tablature contexts:\\n\\n    c4 b\\n    \\\\xNote { e f }\\n    c b < g \\\\xNote c f > b\\n\\nAs synonyms for \\\\xNote, \\\\xNotesOn and \\\\xNotesOff, \\\\deadNote, \\\\deadNotesOn and \\\\deadNotesOff can be used. The term dead note is commonly used by guitarists.\\n\\nThere is also a similar shorthand for diamond shapes:\\n\\n    <c f\\\\harmonic>2 <d a'\\\\harmonic>4 <c g'\\\\harmonic> f\\\\harmonic\"\n  },\n  {\n    \"label\": \"\\\\crossStaff\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create cross-staff stems\"\n  },\n  {\n    \"label\": \"\\\\cueClef\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cueClef\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the current cue clef to type.\"\n  },\n  {\n    \"label\": \"\\\\cueClefUnset\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Unset the current cue clef.\"\n  },\n  {\n    \"label\": \"\\\\cueDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cueDuring\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert contents of quote what corresponding to main-music, in a CueVoice oriented by dir.\"\n  },\n  {\n    \"label\": \"\\\\cueDuringWithClef\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\cueDuringWithClef\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert contents of quote what corresponding to main-music, in a CueVoice oriented by dir.\"\n  },\n  {\n    \"label\": \"\\\\currentBarNumber\",\n    \"detail\": \"Bar numbers\",\n    \"documentation\": \"Bar numbers are typeset by default at the start of every line except the first line. The number itself is stored in the currentBarNumber property, which is normally updated automatically for every measure. It may also be set manually:\\n\\n    c1 c c c\\n    \\\\break\\n    \\\\set Score.currentBarNumber = #50\\n    c1 c c c\"\n  },\n  {\n    \"label\": \"\\\\currentBarNumber\",\n    \"detail\": \"Time administration\",\n    \"documentation\": \"Time is administered by the Timing_translator, which by default is to be found in the Score context. An alias, Timing, is added to the context in which the Timing_translator is placed. To ensure that the Timing alias is available, you may need to explicitly instantiate the containing context (such as Voice or Staff).\\n\\nThe following properties of Timing are used to keep track of timing within the score.\"\n  },\n  {\n    \"label\": \"\\\\deadNote\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print note with a cross-shaped note head.\"\n  },\n  {\n    \"label\": \"\\\\decr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"A crescendo mark is started with \\\\< and terminated with \\\\!, an absolute dynamic, or an additional crescendo or decrescendo mark. A decrescendo mark is started with \\\\> and is also terminated with \\\\!, an absolute dynamic, or another crescendo or decrescendo mark. \\\\cr and \\\\decr may be used instead of \\\\< and \\\\>. Hairpins are engraved by default using this notation.\\n\\n    c2\\\\< c\\\\!\\n    d2\\\\< d\\\\f\\n    e2\\\\< e\\\\>\\n    f2\\\\> f\\\\!\\n    e2\\\\> e\\\\mp\\n    d2\\\\> d\\\\>\\n    c1\\\\!\\n\\nA hairpin that is terminated with \\\\! will end at the right edge of the note that has the \\\\! assigned to it. In the case where it is terminated with the start of another crescendo or decrescendo mark, it will end at the centre of the note that has the next \\\\< or \\\\> assigned to it. The next hairpin will then start at the right edge of the same note instead of the usual left edge had it been terminated with \\\\! before.\\n\\n    c1\\\\< | c4 a c\\\\< a | c4 a c\\\\! a\\\\< | c4 a c a\\\\!\\n\\nHairpins that are terminated with absolute dynamic marks instead of \\\\! will also be engraved in a similar way. However, the length of the absolute dynamic itself can alter where the preceding hairpin ends.\\n\\n    c1\\\\< | c4 a c\\\\mf a | c1\\\\< | c4 a c\\\\ffff a\"\n  },\n  {\n    \"label\": \"\\\\decresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\default\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"There are many different conventions on how to typeset accidentals. LilyPond provides a function to specify which accidental style to use. This function is called as follows:\\n\\n    \\\\new Staff <<\\n      \\\\accidentalStyle voice\\n      { … }\\n    >>\\n\\nThe accidental style applies to the current Staff by default (with the exception of the styles piano and piano-cautionary, which are explained below). Optionally, the function can take a second argument that determines in which scope the style should be changed. For example, to use the same style in all staves of the current StaffGroup, use:\\n\\n    \\\\accidentalStyle StaffGroup.voice\\n\\nThe following accidental styles are supported. To demonstrate each style, we use the following example:\\n\\n    musicA = {\\n      <<\\n        \\\\relative c' {\\n          cis'8 fis, bes4 <a cis>8 f bis4 |\\n          cis2. <c, g'>4 |\\n        }\\n        \\\\\\\\\\n        \\\\relative c' {\\n          ais'2 cis, |\\n          fis8 b a4 cis2 |\\n        }\\n      >>\\n    }\\n    musicB = {\\n      \\\\clef bass\\n      \\\\new Voice {\\n        \\\\voiceTwo \\\\relative c' {\\n          <fis, a cis>8[ <fis a cis>\\n          \\\\change Staff = up\\n          cis' cis\\n          \\\\change Staff = down\\n          <fis, a> <fis a>]\\n          \\\\showStaffSwitch\\n          \\\\change Staff = up\\n          dis'4 |\\n          \\\\change Staff = down\\n          <fis, a cis>4 gis <f a d>2 |\\n        }\\n      }\\n    }\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\nNote that the last lines of this example can be replaced by the following, as long as the same accidental style should be used in both staves.\\n\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          %%% change the next line as desired:\\n          \\\\accidentalStyle Score.default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\ndefault\\nThis is the default typesetting behavior. It corresponds to eighteenth-century common practice: accidentals are remembered to the end of the measure in which they occur and only in their own octave. Thus, in the example below, no natural signs are printed before the b in the second measure or the last c:\\n\\n \\n\\nvoice\\nThe normal behavior is to remember the accidentals at Staff-level. In this style, however, accidentals are typeset individually for each voice. Apart from that, the rule is similar to default.\\n\\nAs a result, accidentals from one voice do not get canceled in other voices, which is often an unwanted result: in the following example, it is hard to determine whether the second a should be played natural or sharp. The voice option should therefore be used only if the voices are to be read solely by individual musicians. If the staff is to be used by one musician (e.g., a conductor or in a piano score) then modern or modern-cautionary should be used instead.\\n\\n \\n\\nmodern\\nThis rule corresponds to the common practice in the twentieth century. It omits some extra natural signs, which were traditionally prefixed to a sharp following a double sharp, or a flat following a double flat. The modern rule prints the same accidentals as default, with two additions that serve to avoid ambiguity: after temporary accidentals, cancellation marks are printed also in the following measure (for notes in the same octave) and, in the same measure, for notes in other octaves. Hence the naturals before the b and the c in the second measure of the upper staff:\\n\\n \\n\\nmodern-cautionary\\nThis rule is similar to modern, but the ‘extra’ accidentals (the ones not typeset by default) are typeset as cautionary accidentals. They are by default printed with parentheses, but they can also be printed in reduced size by defining the cautionary-style property of AccidentalSuggestion.\\n\\n \\n\\nmodern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice, but they are canceled across voices in the same Staff. Hence, the a in the last measure is canceled because the previous cancellation was in a different voice, and the d in the lower staff is canceled because of the accidental in a different voice in the previous measure:\\n\\n \\n\\nmodern-voice-cautionary\\nThis rule is the same as modern-voice, but with the extra accidentals (the ones not typeset by voice) typeset as cautionaries. Even though all accidentals typeset by default are typeset with this rule, some of them are typeset as cautionaries.\\n\\n \\n\\npiano\\nThis rule reflects twentieth-century practice for piano notation. Its behavior is very similar to modern style, but here accidentals also get canceled across the staves in the same GrandStaff or PianoStaff, hence all the cancellations of the final notes.\\n\\nThis accidental style applies to the current GrandStaff or PianoStaff by default.\\n\\n \\n\\npiano-cautionary\\nThis is the same as piano but with the extra accidentals typeset as cautionaries.\\n\\n \\n\\nneo-modern\\nThis rule reproduces a common practice in contemporary music: accidentals are printed like with modern, but they are printed again if the same note appears later in the same measure – except if the note is immediately repeated.\\n\\n \\n\\nneo-modern-cautionary\\nThis rule is similar to neo-modern, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\nneo-modern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice as with neo-modern, but they are canceled across voices in the same Staff.\\n\\n \\n\\nneo-modern-voice-cautionary\\nThis rule is similar to neo-modern-voice, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\ndodecaphonic\\nThis rule reflects a practice introduced by composers at the beginning of the 20th century, in an attempt to abolish the hierarchy between natural and non-natural notes. With this style, every note gets an accidental sign, including natural signs.\\n\\n \\n\\nteaching\\nThis rule is intended for students, and makes it easy to create scale sheets with automatically created cautionary accidentals. Accidentals are printed like with modern, but cautionary accidentals are added for all sharp or flat tones specified by the key signature, except if the note is immediately repeated.\\n\\n \\n\\nno-reset\\nThis is the same as default but with accidentals lasting ‘forever’ and not only within the same measure:\\n\\n \\n\\nforget\\nThis is the opposite of no-reset: Accidentals are not remembered at all – and hence all accidentals are typeset relative to the key signature, regardless of what came before in the music.\\n\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\default\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This is the default typesetting behavior. It corresponds to eighteenth-century common practice: accidentals are remembered to the end of the measure in which they occur and only in their own octave. Thus, in the example below, no natural signs are printed before the b in the second measure or the last c:\"\n  },\n  {\n    \"label\": \"\\\\default-staff-staff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\defaultBarType\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"The command ‘\\\\bar bartype’ is a shortcut for ‘\\\\set Timing.whichBar = bartype’. A bar line is created whenever the whichBar property is set.\\n\\nThe default bar type used for automatically inserted bar lines is \\\"|\\\". This may be changed at any time with ‘\\\\set Timing.defaultBarType = bartype’.\"\n  },\n  {\n    \"label\": \"\\\\defaultNoteHeads\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Revert to the default note head style.\"\n  },\n  {\n    \"label\": \"\\\\defaultTimeSignature\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature symbol that is used in 2/2 and 4/4 time can be changed to a numeric style:\\n\\n    % Default style\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Change to numeric style\\n    \\\\numericTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Revert to default style\\n    \\\\defaultTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n\\nMensural time signatures are covered in Mensural time signatures.\"\n  },\n  {\n    \"label\": \"\\\\defineBarLine\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"New bar line types can be defined with \\\\defineBarLine:\\n\\n    \\\\defineBarLine bartype #'(end begin span)\\n\\nThe \\\\defineBarline variables can include the ‘empty’ string \\\"\\\", which is equivalent to an invisible bar line being printed. Or they can be set to #f which prints no bar line at all.\\n\\nAfter the definiton, the new bar line can be used by \\\\bar bartype.\\n\\nThere are currently ten bar line elements available:\\n\\n    \\\\defineBarLine \\\":\\\" #'(\\\"\\\" \\\":\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"=\\\" #'(\\\"=\\\" \\\"\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"[\\\" #'(\\\"\\\" \\\"[\\\" \\\"\\\")\\n    \\\\defineBarLine \\\"]\\\" #'(\\\"]\\\" \\\"\\\" \\\"\\\")\\n    \\\\new Staff {\\n      s1 \\\\bar \\\"|\\\"\\n      s1 \\\\bar \\\".\\\"\\n      s1 \\\\bar \\\"!\\\"\\n      s1 \\\\bar \\\";\\\"\\n      s1 \\\\bar \\\":\\\"\\n      s1 \\\\bar \\\"k\\\"\\n      s1 \\\\bar \\\"S\\\"\\n      s1 \\\\bar \\\"=\\\"\\n      s1 \\\\bar \\\"[\\\"\\n      s1 \\\\bar \\\"]\\\"\\n      s1 \\\\bar \\\"\\\"\\n    }\\n\\nThe \\\"=\\\" bar line provides the double span bar line, used in combination with the segno sign. Do not use it as a standalone double thin bar line; here, \\\\bar \\\"||\\\" is preferred.\\n\\nThe \\\"-\\\" sign starts annotations to bar lines which are useful to distinguish those with identical appearance but different behavior at line breaks and/or different span bars. The part following the \\\"-\\\" sign is not used for building up the bar line.\\n\\n    \\\\defineBarLine \\\"||-dashedSpan\\\" #'(\\\"||\\\" \\\"\\\" \\\"!!\\\")\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        c1 \\\\bar \\\"||\\\"\\n        c1 \\\\bar \\\"||-dashedSpan\\\"\\n        c1\\n      }\\n      \\\\new Staff {\\n        c1\\n        c1\\n        c1\\n      }\\n    >>\\n\\nFurthermore, the space character \\\" \\\" serves as a placeholder for defining span bars correctly aligned to the main bar lines:\\n\\n    \\\\defineBarLine \\\":|.-wrong\\\" #'(\\\":|.\\\" \\\"\\\" \\\"|.\\\")\\n    \\\\defineBarLine \\\":|.-right\\\" #'(\\\":|.\\\" \\\"\\\" \\\" |.\\\")\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        c1 \\\\bar \\\":|.-wrong\\\"\\n        c1 \\\\bar \\\":|.-right\\\"\\n        c1\\n      }\\n      \\\\new Staff {\\n        c1\\n        c1\\n        c1\\n      }\\n    >>\\n\\nIf additional elements are needed, LilyPond provides a simple way to define them. For more informations on modifying or adding bar lines, see file ‘scm/bar-line.scm’.\\n\\nIn scores with many staves, a \\\\bar command in one staff is automatically applied to all staves. The resulting bar lines are connected between different staves of a StaffGroup, PianoStaff, or GrandStaff.\\n\\n    <<\\n      \\\\new StaffGroup <<\\n        \\\\new Staff {\\n          e4 d\\n          \\\\bar \\\"||\\\"\\n          f4 e\\n        }\\n        \\\\new Staff { \\\\clef bass c4 g e g }\\n      >>\\n      \\\\new Staff { \\\\clef bass c2 c2 }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\defineBarLine\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Define bar line settings for bar line bar. The list glyph-list must have three entries which define the appearance at the end of line, at the beginning of the next line, and the span bar, respectively.\"\n  },\n  {\n    \"label\": \"\\\\denies\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\dim\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual crescendo marks begin with \\\\cresc. Textual decrescendos begin with \\\\decresc or \\\\dim. Extender lines are engraved as required.\\n\\n    g8\\\\cresc a b c b c d e\\\\mf |\\n    f8\\\\decresc e d c e\\\\> d c b |\\n    a1\\\\dim ~ |\\n    a2. r4\\\\! |\"\n  },\n  {\n    \"label\": \"\\\\dim\",\n    \"detail\": \"Common chords\",\n    \"documentation\": \"The table below shows the actions of the quality modifiers on triads and seventh chords. The default seventh step added to chords is a minor or flatted seventh, which makes the dominant seventh the basic seventh chord. All alterations are relative to the dominant seventh. A more complete table of modifier usage is found at Common chord modifiers.\\n\\nModifier\\tAction\\tExample\\nNone\\tThe default action; produces a major triad.\\t\\n \\n\\nm, m7\\tThe minor chord. This modifier lowers the 3rd.\\t\\n \\n\\ndim, dim7\\tThe diminished chord. This modifier lowers the 3rd, 5th and (if present) the 7th step.\\t\\n \\n\\naug\\tThe augmented chord. This modifier raises the 5th step.\\t\\n \\n\\nmaj, maj7\\tThe major 7th chord. This modifier adds a raised 7th step. The 7 following maj is optional. Do NOT use this modifier to create a major triad.\\t\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\dimHairpin\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDecr\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDecresc\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\dimTextDim\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Textual marks for dynamic changes can also replace hairpins:\\n\\n    \\\\crescTextCresc\\n    c4\\\\< d e f\\\\! |\\n    \\\\dimTextDecresc\\n    g4\\\\> e d c\\\\! |\\n    \\\\dimTextDecr\\n    e4\\\\> d c b\\\\! |\\n    \\\\dimTextDim\\n    d4\\\\> c b a\\\\! |\\n    \\\\crescHairpin\\n    \\\\dimHairpin\\n    c4\\\\< d\\\\! e\\\\> d\\\\! |\\n\\nTo create new absolute dynamic marks or text that should be aligned with dynamics, see New dynamic marks.\"\n  },\n  {\n    \"label\": \"\\\\displayLilyMusic\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Display the LilyPond input representation of music to the console.\"\n  },\n  {\n    \"label\": \"\\\\displayMusic\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Display the internal representation of music to the console.\"\n  },\n  {\n    \"label\": \"\\\\displayScheme\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Display the internal representation of expr to the console.\"\n  },\n  {\n    \"label\": \"\\\\dodecaphonic\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule reflects a practice introduced by composers at the beginning of the 20th century, in an attempt to abolish the hierarchy between natural and non-natural notes. With this style, every note gets an accidental sign, including natural signs.\"\n  },\n  {\n    \"label\": \"\\\\dorian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\dotsDown\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\dotsNeutral\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\dotsUp\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Dots are normally moved up to avoid staff lines, except in polyphonic situations. Dots may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\draw-circle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\draw-line\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\drummode\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"DrumStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"\\\\dynamic\",\n    \"detail\": \"New dynamic marks\",\n    \"documentation\": \"In markup mode, editorial dynamics (within parentheses or square brackets) can be created. The syntax for markup mode is described in Formatting text.\\n\\n    roundF = \\\\markup {\\n        \\\\center-align \\\\concat { \\\\bold { \\\\italic ( }\\n               \\\\dynamic f \\\\bold { \\\\italic ) } } }\\n    boxF = \\\\markup { \\\\bracket { \\\\dynamic f } }\\n    \\\\relative c' {\\n      c1_\\\\roundF\\n      c1_\\\\boxF\\n    }\"\n  },\n  {\n    \"label\": \"\\\\dynamicDown\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"DynamicLineSpanner\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Vertical positioning of dynamics is handled by DynamicLineSpanner.\\n\\nA Dynamics context is available to engrave dynamics on their own horizontal line. Use spacer rests to indicate timing. (Notes in a Dynamics context will also take up musical time, but will not be engraved.) The Dynamics context can usefully contain some other items such as text scripts, text spanners, and piano pedal marks.\\n\\n    <<\\n      \\\\new Staff \\\\relative c' {\\n        c2 d4 e |\\n        c4 e e,2 |\\n        g'4 a g a |\\n        c1 |\\n      }\\n      \\\\new Dynamics {\\n        s1\\\\< |\\n        s1\\\\f |\\n        s2\\\\dim s2-\\\"rit.\\\" |\\n        s1\\\\p |\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\dynamicNeutral\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\dynamicUp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\easyHeadsOff\",\n    \"detail\": \"Easy notation note heads\",\n    \"documentation\": \"The ‘easy play’ note head includes a note name inside the head. It is used in music for beginners. To make the letters readable, it should be printed in a large font size. To print with a larger font, see Setting the staff size.\\n\\n    #(set-global-staff-size 26)\\n    \\\\relative c' {\\n      \\\\easyHeadsOn\\n      c2 e4 f\\n      g1\\n      \\\\easyHeadsOff\\n      c,1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\easyHeadsOn\",\n    \"detail\": \"Easy notation note heads\",\n    \"documentation\": \"The ‘easy play’ note head includes a note name inside the head. It is used in music for beginners. To make the letters readable, it should be printed in a large font size. To print with a larger font, see Setting the staff size.\\n\\n    #(set-global-staff-size 26)\\n    \\\\relative c' {\\n      \\\\easyHeadsOn\\n      c2 e4 f\\n      g1\\n      \\\\easyHeadsOff\\n      c,1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\endSpanners\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Terminate the next spanner prematurely after exactly one note without the need of a specific end spanner.\"\n  },\n  {\n    \"label\": \"\\\\epsfile\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Advanced graphic features include the ability to include external image files converted to the Encapsulated PostScript format (eps), or to directly embed graphics into the input file, using native PostScript code. In such a case, it may be useful to explicitly specify the size of the drawing, as demonstrated below:\\n\\n    c1^\\\\markup {\\n      \\\\combine\\n        \\\\epsfile #X #10 #\\\"./context-example.eps\\\"\\n        \\\\with-dimensions #'(0 . 6) #'(0 . 10)\\n        \\\\postscript #\\\"\\n          -2 3 translate\\n          2.7 2 scale\\n          newpath\\n          2 -1 moveto\\n          4 -2 4 1 1 arct\\n          4 2 3 3 1 arct\\n          0 4 0 3 1 arct\\n          0 0 1 -1 1 arct\\n          closepath\\n          stroke\\\"\\n      }\\n    c\\n\\nAn exhaustive list of graphics-specific commands can be found in Graphic.\"\n  },\n  {\n    \"label\": \"\\\\espressivo\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"The \\\\espressivo command can be used to indicate a crescendo and decrescendo on the same note. However, be warned that this is implemented as an articulation, not a dynamic.\\n\\n    c2 b4 a\\n    g1\\\\espressivo\"\n  },\n  {\n    \"label\": \"\\\\eventChords\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Compatibility function wrapping EventChord around isolated rhythmic events occuring since version 2.15.28, after expanding repeat chords ‘q’.\"\n  },\n  {\n    \"label\": \"\\\\expandFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"By default a multi-measure rest is expanded in the printed score to show all the rest measures explicitly. Alternatively, a multi-measure rest can be shown as a single measure containing a multi-measure rest symbol, with the number of measures of rest printed above the measure:\\n\\n    % Default behavior\\n    \\\\time 3/4 r2. | R2.*2 |\\n    \\\\time 2/4 R2 |\\n    \\\\time 4/4\\n    % Rest measures contracted to single measure\\n    \\\\compressFullBarRests\\n    r1 | R1*17 | R1*4 |\\n    % Rest measures expanded\\n    \\\\expandFullBarRests\\n    \\\\time 3/4\\n    R2.*2 |\"\n  },\n  {\n    \"label\": \"\\\\expandFullBarRests\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\extra-offset\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\f\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\featherDurations\",\n    \"detail\": \"Feathered beams\",\n    \"documentation\": \"Feathered beams are used to indicate that a small group of notes should be played at an increasing (or decreasing) tempo, without changing the overall tempo of the piece. The extent of the feathered beam must be indicated manually using [ and ], and the beam feathering is turned on by specifying a direction to the Beam property grow-direction.\\n\\nIf the placement of the notes and the sound in the MIDI output is to reflect the ritardando or accelerando indicated by the feathered beam the notes must be grouped as a music expression delimited by braces and preceded by a featherDurations command which specifies the ratio between the durations of the first and last notes in the group.\\n\\nThe square brackets show the extent of the beam and the braces show which notes are to have their durations modified. Normally these would delimit the same group of notes, but this is not required: the two commands are independent.\\n\\nIn the following example the eight 16th notes occupy exactly the same time as a half note, but the first note is one half as long as the last one, with the intermediate notes gradually lengthening. The first four 32nd notes gradually speed up, while the last four 32nd notes are at a constant tempo.\\n\\n    \\\\override Beam.grow-direction = #LEFT\\n    \\\\featherDurations #(ly:make-moment 2/1)\\n    { c16[ c c c c c c c] }\\n    \\\\override Beam.grow-direction = #RIGHT\\n    \\\\featherDurations #(ly:make-moment 2/3)\\n    { c32[ d e f] }\\n    % revert to non-feathered beams\\n    \\\\override Beam.grow-direction = #'()\\n    { g32[ a b c] }\\n\\nThe spacing in the printed output represents the note durations only approximately, but the MIDI output is exact.\"\n  },\n  {\n    \"label\": \"\\\\featherDurations\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Adjust durations of music in argument by rational factor.\"\n  },\n  {\n    \"label\": \"\\\\fermataMarkup\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"Markups can be added to multi-measure rests. The predefined command \\\\fermataMarkup is provided for adding fermatas.\\n\\n    \\\\compressFullBarRests\\n    \\\\time 3/4\\n    R2.*10^\\\\markup { \\\\italic \\\"ad lib.\\\" }\\n    R2.^\\\\fermataMarkup\\n\\nNote: Markups attached to a multi-measure rest are objects of type MultiMeasureRestText, not TextScript. Overrides must be directed to the correct object, or they will be ignored. See the following example:\\n\\n\\n\\n    % This fails, as the wrong object name is specified\\n    \\\\override TextScript.padding = #5\\n    R1^\\\"wrong\\\"\\n    % This is the correct object name to be specified\\n    \\\\override MultiMeasureRestText.padding = #5\\n    R1^\\\"right\\\"\\n\\nWhen a multi-measure rest immediately follows a \\\\partial setting, resulting bar-check warnings may not be displayed.\"\n  },\n  {\n    \"label\": \"\\\\fermataMarkup\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\ff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ffff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fffff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fill-line\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Similarly, a list of elements or expressions may be spread to fill the entire horizontal line width (if there is only one element, it will be centered on the page). These expressions can, in turn, include multi-line text or any other markup expression:\\n\\n    \\\\markup {\\n      \\\\fill-line {\\n        \\\\line { William S. Gilbert }\\n        \\\\center-column {\\n          \\\\huge \\\\smallCaps \\\"The Mikado\\\"\\n          or\\n          \\\\smallCaps \\\"The Town of Titipu\\\"\\n        }\\n        \\\\line { Sir Arthur Sullivan }\\n      }\\n    }\\n    \\\\markup {\\n      \\\\fill-line { 1885 }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\filled-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\finger\",\n    \"detail\": \"Fingering instructions\",\n    \"documentation\": \"Fingering instructions can be entered using ‘note-digit’:\\n\\n    c4-1 d-2 f-4 e-3\\n\\nMarkup texts or strings may be used for finger changes.\\n\\n    c4-1 d-2 f\\\\finger \\\\markup \\\\tied-lyric #\\\"4~3\\\" c\\\\finger \\\"2 - 3\\\"\"\n  },\n  {\n    \"label\": \"\\\\finger\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Apply finger as a fingering indication.\"\n  },\n  {\n    \"label\": \"\\\\first-page-number\",\n    \"detail\": \"\\\\paper variables for page numbering\",\n    \"documentation\": \"The value of the page number on the first page.\"\n  },\n  {\n    \"label\": \"\\\\followVoice\",\n    \"detail\": \"Staff-change lines\",\n    \"documentation\": \"Whenever a voice switches to another staff, a line connecting the notes can be printed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"one\\\" {\\n        \\\\showStaffSwitch\\n        c1\\n        \\\\change Staff = \\\"two\\\"\\n        b2 a\\n      }\\n      \\\\new Staff = \\\"two\\\" {\\n        \\\\clef bass\\n        s1*2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\font-interface\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"Font size changes are achieved by scaling the design size that is closest to the desired size. The standard font size (for font-size = #0) depends on the standard staff height. For a 20pt staff, a 10pt font is selected.\\n\\nThe font-size property can only be set on layout objects that use fonts. These are the ones supporting the font-interface layout interface.\"\n  },\n  {\n    \"label\": \"\\\\font-interface\",\n    \"detail\": \"Fonts explained\",\n    \"documentation\": \"Fonts are handled through several libraries. FontConfig is used to detect available fonts on the system; the selected fonts are rendered using Pango.\\n\\nMusic notation fonts can be described as a set of specific glyphs, ordered in several families. The following syntax allows various LilyPond feta non-text fonts to be used directly in markup mode:\\n\\n    a1^\\\\markup {\\n      \\\\vcenter {\\n        \\\\override #'(font-encoding . fetaBraces)\\n        \\\\lookup #\\\"brace120\\\"\\n        \\\\override #'(font-encoding . fetaText)\\n        \\\\column { 1 3 sf }\\n        \\\\override #'(font-encoding . fetaMusic)\\n        \\\\lookup #\\\"noteheads.s0petrucci\\\"\\n      }\\n    }\\n\\nHowever, all these glyphs except the braces of various sizes contained in fetaBraces are available using the simpler syntax described in Music notation inside markup.\\n\\nWhen using the glyphs contained in fetaBraces, the size of the brace is specified by the numerical part of the glyph name, in arbitrary units. Any integer from 0 to 575 inclusive may be specified, 0 giving the smallest brace. The optimum value must be determined by trial and error. These glyphs are all left braces; right braces may be obtained by rotation, see Rotating objects.\\n\\nThree families of text fonts are made available: the roman (serif) font, that defaults to New Century Schoolbook, the sans font and the monospaced typewriter font – these last two families are determined by the Pango installation.\\n\\nNote: There are no default fonts associated with the sans and typewriter font-families. An input file that specifies either of these can lead to different output on different computers. To ensure consistent output among multiple platforms, fonts must be specified by name, and those fonts must be available on any system that processes the file. See Single entry fonts and Entire document fonts.\\n\\n\\n\\nEach family may include different shapes and series. The following example demonstrates the ability to select alternate families, shapes, series and sizes. The value supplied to font-size is the required change from the default size.\\n\\n    \\\\override Score.RehearsalMark.font-family = #'typewriter\\n    \\\\mark \\\\markup \\\"Ouverture\\\"\\n    \\\\override Voice.TextScript.font-shape = #'italic\\n    \\\\override Voice.TextScript.font-series = #'bold\\n    d2.^\\\\markup \\\"Allegro\\\"\\n    \\\\override Voice.TextScript.font-size = #-3\\n    c4^smaller\\n\\nA similar syntax may be used in markup mode; however in this case it is preferable to use the simpler syntax explained in Selecting font and font size:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line {\\n          \\\\override #'(font-shape . italic)\\n          \\\\override #'(font-size . 4)\\n          Idomeneo,\\n        }\\n        \\\\line {\\n          \\\\override #'(font-family . typewriter)\\n          {\\n            \\\\override #'(font-series . bold)\\n            re\\n            di\\n          }\\n          \\\\override #'(font-family . sans)\\n          Creta\\n        }\\n      }\\n    }\\n\\nAlthough it is easy to switch between preconfigured fonts, it is also possible to use other fonts, as explained in the following sections: Single entry fonts and Entire document fonts.\"\n  },\n  {\n    \"label\": \"\\\\font-size\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\font-size\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"Font size changes are achieved by scaling the design size that is closest to the desired size. The standard font size (for font-size = #0) depends on the standard staff height. For a 20pt staff, a 10pt font is selected.\\n\\nThe font-size property can only be set on layout objects that use fonts. These are the ones supporting the font-interface layout interface.\"\n  },\n  {\n    \"label\": \"\\\\fontsize\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\fontSize\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\footnote\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make the markup footnote a footnote on item. The footnote is marked with a markup mark moved by offset with respect to the marked music.\\n\\nIf mark is not given or specified as \\\\default, it is replaced by an automatically generated sequence number. If item is a symbol list of form ‘Grob’ or ‘Context.Grob’, then grobs of that type will be marked at the current time step in the given context (default Bottom).\\n\\nIf item is music, the music will get a footnote attached to a grob immediately attached to the event, like \\\\tweak does. For attaching a footnote to an indirectly caused grob, write \\\\single\\\\footnote, use item to specify the grob, and follow it with the music to annotate.\\n\\nLike with \\\\tweak, if you use a footnote on a following post-event, the \\\\footnote command itself needs to be attached to the preceding note or rest as a post-event with -.\"\n  },\n  {\n    \"label\": \"\\\\forget\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This is the opposite of no-reset: Accidentals are not remembered at all – and hence all accidentals are typeset relative to the key signature, regardless of what came before in the music.\"\n  },\n  {\n    \"label\": \"\\\\four-string-banjo\",\n    \"detail\": \"Banjo tablatures\",\n    \"documentation\": \"A number of common tunings for the five-string banjo are predefined: banjo-c-tuning (gCGBD), banjo-modal-tuning (gDGCD), banjo-open-d-tuning (aDF#AD) and banjo-open-dm-tuning (aDFAD).\\n\\nThese may be converted to four-string tunings using the four-string-banjo function:\\n\\n    \\\\set TabStaff.stringTunings = #(four-string-banjo banjo-c-tuning)\"\n  },\n  {\n    \"label\": \"\\\\fp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The size of the fret diagram, and the number of frets in the diagram can be changed in the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n         \\\\chordmode {\\n           f1 g\\n         }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"s:1.5;c:6-1-1;6-1;5-3;4-3;3-2;2-1;1-1;\\\"\\n        }\\n        <g, b, d g b g'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"h:6;6-3;5-2;4-o;3-o;2-o;1-3;\\\"\\n        }\\n      }\\n    >>\\n\\nThe number of strings in a fret diagram can be changed to accommodate different instruments such as banjos and ukuleles with the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          a1\\n        }\\n      }\\n      \\\\new Staff {\\n        % An 'A' chord for ukulele\\n        a'1^\\\\markup {\\n          \\\\fret-diagram #\\\"w:4;4-2-2;3-1-1;2-o;1-o;\\\"\\n        }\\n      }\\n    >>\\n\\nFingering indications can be added, and the location of fingering labels can be controlled by the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"f:1;6-x;5-3-3;4-2-2;3-o;2-1-1;1-o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"f:2;6-x;5-x;4-o;3-2-2;2-3-3;1-1-1;\\\"\\n        }\\n      }\\n    >>\\n\\nDot radius and dot position can be controlled with the fret-diagram markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"d:0.35;6-x;5-3;4-2;3-o;2-1;1-o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram #\\\"p:0.2;6-x;5-x;4-o;3-2;2-3;1-1;\\\"\\n        }\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-interface\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a fret diagram markup, the interface properties belong to Voice.TextScript.\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-terse\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The fret-diagram-terse markup string omits string numbers; the string number is implied by the presence of semicolons. There is one semicolon for each string in the diagram. The first semicolon corresponds to the highest string number and the last semicolon corresponds to the first string. Mute strings, open strings, and fret numbers can be indicated.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;3;2;o;1;o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;x;o;2;3;1;\\\"\\n        }\\n      }\\n    >>\\n\\nBarre indicators can be included in the fret-diagram-terse markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          f1 g\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"1-(;3;3;2;1;1-);\\\"\\n        }\\n        <g, d g b d' g'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"3-(;5;5;4;3;3-);\\\"\\n        }\\n      }\\n    >>\\n\\nFingering indications can be included in the fret-diagram-terse markup string.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 d:m\\n        }\\n      }\\n      \\\\new Staff {\\n        \\\\override Voice.TextScript.fret-diagram-details.finger-code = #'below-string\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;3-3;2-2;o;1-1;o;\\\"\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-terse #\\\"x;x;o;2-2;3-3;1-1;\\\"\\n        }\\n      }\\n    >>\\n\\nOther fret diagram properties must be adjusted using \\\\override when using the fret-diagram-terse markup.\"\n  },\n  {\n    \"label\": \"\\\\fret-diagram-verbose\",\n    \"detail\": \"Fret diagram markups\",\n    \"documentation\": \"The fret-diagram-verbose markup string is in the format of a Scheme list. Each element of the list indicates an item to be placed on the fret diagram.\\n\\n    <<\\n        \\\\new ChordNames {\\n          \\\\chordmode {\\n            c1 d:m\\n          }\\n        }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (mute 6)\\n            (place-fret 5 3)\\n            (place-fret 4 2)\\n            (open 3)\\n            (place-fret 2 1)\\n            (open 1)\\n          )\\n        }\\n        <d a d' f'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (mute 6)\\n            (mute 5)\\n            (open 4)\\n            (place-fret 3 2)\\n            (place-fret 2 3)\\n            (place-fret 1 1)\\n          )\\n        }\\n      }\\n    >>\\n\\nFingering indications and barres can be included in a fret-diagram-verbose markup string. Unique to the fret-diagram-verbose interface is a capo indication that can be placed on the fret diagram. The capo indication is a thick bar that covers all strings. The fret with the capo will be the lowest fret in the fret diagram.\\n\\n    <<\\n        \\\\new ChordNames {\\n          \\\\chordmode {\\n            f1 g c\\n          }\\n        }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        \\\\override Voice.TextScript.fret-diagram-details.finger-code = #'below-string\\n        <f, c f a c' f'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (place-fret 6 1)\\n            (place-fret 5 3)\\n            (place-fret 4 3)\\n            (place-fret 3 2)\\n            (place-fret 2 1)\\n            (place-fret 1 1)\\n            (barre 6 1 1)\\n          )\\n        }\\n        <g, b, d g b g'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (place-fret 6 3 2)\\n            (place-fret 5 2 1)\\n            (open 4)\\n            (open 3)\\n            (open 2)\\n            (place-fret 1 3 3)\\n          )\\n        }\\n        <c g c' e' g'>1^\\\\markup {\\n          \\\\fret-diagram-verbose #'(\\n            (capo 3)\\n            (mute 6)\\n            (place-fret 4 5 1)\\n            (place-fret 3 5 2)\\n            (place-fret 2 5 3)\\n          )\\n        }\\n      }\\n    >>\\n\\nAll other fret diagram properties must be adjusted using \\\\override when using the fret-diagram-verbose markup.\"\n  },\n  {\n    \"label\": \"FretBoards\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"Fret diagrams can be displayed using the FretBoards context. By default, the FretBoards context will display fret diagrams that are stored in a lookup table:\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    \\\\new FretBoards {\\n      \\\\chordmode {\\n        c1 d\\n      }\\n    }\\n\\nThe default predefined fret diagrams are contained in the file ‘predefined-guitar-fretboards.ly’. Fret diagrams are stored based on the pitches of a chord and the value of stringTunings that is currently in use. ‘predefined-guitar-fretboards.ly’ contains predefined fret diagrams only for guitar-tuning. Predefined fret diagrams can be added for other instruments or other tunings by following the examples found in ‘predefined-guitar-fretboards.ly’.\\n\\nFret diagrams for the ukulele are contained in the file \\n‘predefined-ukulele-fretboards.ly’.\\n\\n    \\\\include \\\"predefined-ukulele-fretboards.ly\\\"\\n    myChords = \\\\chordmode { a1 a:m a:aug }\\n    \\\\new ChordNames {\\n      \\\\myChords\\n    }\\n    \\\\new FretBoards {\\n      \\\\set Staff.stringTunings = #ukulele-tuning\\n      \\\\myChords\\n    }\\n\\nFret diagrams for the mandolin are contained in the file \\n‘predefined-mandolin-fretboards.ly’.\\n\\n    \\\\include \\\"predefined-mandolin-fretboards.ly\\\"\\n    myChords = \\\\chordmode { c1 c:m7.5- c:aug }\\n    \\\\new ChordNames {\\n      \\\\myChords\\n    }\\n    \\\\new FretBoards {\\n      \\\\set Staff.stringTunings = #mandolin-tuning\\n      \\\\myChords\\n    }\\n\\nChord pitches can be entered either as simultaneous music or using chord mode (see Chord mode overview).\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    \\\\new FretBoards {\\n      \\\\chordmode { c1 }\\n      <c' e' g'>1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\funkHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\funkHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\general-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\glissando\",\n    \"detail\": \"Glissando\",\n    \"documentation\": \"A glissando is created by appending \\\\glissando to a note:\\n\\n    g2\\\\glissando g'\\n    c2\\\\glissando c,\\n    \\\\afterGrace f,1\\\\glissando f'16\\n\\nA glissando can connect notes across staves:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"right\\\" {\\n        e'''2\\\\glissando\\n        \\\\change Staff = \\\"left\\\"\\n        a,,4\\\\glissando\\n        \\\\change Staff = \\\"right\\\"\\n        b''8 r |\\n      }\\n      \\\\new Staff = \\\"left\\\" {\\n        \\\\clef bass\\n        s1\\n      }\\n    >>\\n\\nA glissando can connect notes in chords. If anything other than a direct one-to-one pairing of the notes in the two chords is required the connections between the notes are defined by setting \\\\glissandoMap, where the notes of a chord are assumed to be numbered from zero in the order in which they appear in the input ‘.ly’ file.\\n\\n    <c, e>1\\\\glissando g' |\\n    <c, e>1\\\\glissando |\\n    <g' b> |\\n    \\\\break\\n    \\\\set glissandoMap = #'((0 . 1) (1 . 0))\\n    <c, g'>1\\\\glissando |\\n    <d a'> |\\n    \\\\set glissandoMap = #'((0 . 0) (0 . 1) (0 . 2))\\n    c1\\\\glissando |\\n    <d f a> |\\n    \\\\set glissandoMap = #'((2 . 0) (1 . 0) (0 . 1))\\n    <f d a'>1\\\\glissando |\\n    <c c'> |\\n\\nDifferent styles of glissandi can be created. For details, see Line styles.\"\n  },\n  {\n    \"label\": \"\\\\grace\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert music as grace notes.\"\n  },\n  {\n    \"label\": \"GregorianTranscriptionStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"\\\\gridInterval\",\n    \"detail\": \"Grid lines\",\n    \"documentation\": \"Vertical lines can be drawn between staves synchronized with the notes.\\n\\nThe Grid_point_engraver must be used to create the end points of the lines, while the Grid_line_span_engraver must be used to actually draw the lines. By default this centers grid lines horizontally below and to the left side of each note head. Grid lines extend from the middle lines of each staff. The gridInterval must specify the duration between the grid lines.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\consists \\\"Grid_point_engraver\\\"\\n        gridInterval = #(ly:make-moment 1/4)\\n      }\\n      \\\\context {\\n        \\\\Score\\n        \\\\consists \\\"Grid_line_span_engraver\\\"\\n      }\\n    }\\n    \\\\score {\\n      \\\\new ChoirStaff <<\\n        \\\\new Staff \\\\relative c'' {\\n          \\\\stemUp\\n          c4. d8 e8 f g4\\n        }\\n        \\\\new Staff \\\\relative c {\\n          \\\\clef bass\\n          \\\\stemDown\\n          c4 g' f e\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"Grid_line_span_engraver\",\n    \"detail\": \"Grid lines\",\n    \"documentation\": \"Vertical lines can be drawn between staves synchronized with the notes.\\n\\nThe Grid_point_engraver must be used to create the end points of the lines, while the Grid_line_span_engraver must be used to actually draw the lines. By default this centers grid lines horizontally below and to the left side of each note head. Grid lines extend from the middle lines of each staff. The gridInterval must specify the duration between the grid lines.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\consists \\\"Grid_point_engraver\\\"\\n        gridInterval = #(ly:make-moment 1/4)\\n      }\\n      \\\\context {\\n        \\\\Score\\n        \\\\consists \\\"Grid_line_span_engraver\\\"\\n      }\\n    }\\n    \\\\score {\\n      \\\\new ChoirStaff <<\\n        \\\\new Staff \\\\relative c'' {\\n          \\\\stemUp\\n          c4. d8 e8 f g4\\n        }\\n        \\\\new Staff \\\\relative c {\\n          \\\\clef bass\\n          \\\\stemDown\\n          c4 g' f e\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"Grid_point_engraver\",\n    \"detail\": \"Grid lines\",\n    \"documentation\": \"Vertical lines can be drawn between staves synchronized with the notes.\\n\\nThe Grid_point_engraver must be used to create the end points of the lines, while the Grid_line_span_engraver must be used to actually draw the lines. By default this centers grid lines horizontally below and to the left side of each note head. Grid lines extend from the middle lines of each staff. The gridInterval must specify the duration between the grid lines.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\consists \\\"Grid_point_engraver\\\"\\n        gridInterval = #(ly:make-moment 1/4)\\n      }\\n      \\\\context {\\n        \\\\Score\\n        \\\\consists \\\"Grid_line_span_engraver\\\"\\n      }\\n    }\\n    \\\\score {\\n      \\\\new ChoirStaff <<\\n        \\\\new Staff \\\\relative c'' {\\n          \\\\stemUp\\n          c4. d8 e8 f g4\\n        }\\n        \\\\new Staff \\\\relative c {\\n          \\\\clef bass\\n          \\\\stemDown\\n          c4 g' f e\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\grobdescriptions\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create a context modification from descriptions, a list in the format of all-grob-descriptions.\"\n  },\n  {\n    \"label\": \"\\\\grow-direction\",\n    \"detail\": \"Feathered beams\",\n    \"documentation\": \"Feathered beams are used to indicate that a small group of notes should be played at an increasing (or decreasing) tempo, without changing the overall tempo of the piece. The extent of the feathered beam must be indicated manually using [ and ], and the beam feathering is turned on by specifying a direction to the Beam property grow-direction.\\n\\nIf the placement of the notes and the sound in the MIDI output is to reflect the ritardando or accelerando indicated by the feathered beam the notes must be grouped as a music expression delimited by braces and preceded by a featherDurations command which specifies the ratio between the durations of the first and last notes in the group.\\n\\nThe square brackets show the extent of the beam and the braces show which notes are to have their durations modified. Normally these would delimit the same group of notes, but this is not required: the two commands are independent.\\n\\nIn the following example the eight 16th notes occupy exactly the same time as a half note, but the first note is one half as long as the last one, with the intermediate notes gradually lengthening. The first four 32nd notes gradually speed up, while the last four 32nd notes are at a constant tempo.\\n\\n    \\\\override Beam.grow-direction = #LEFT\\n    \\\\featherDurations #(ly:make-moment 2/1)\\n    { c16[ c c c c c c c] }\\n    \\\\override Beam.grow-direction = #RIGHT\\n    \\\\featherDurations #(ly:make-moment 2/3)\\n    { c32[ d e f] }\\n    % revert to non-feathered beams\\n    \\\\override Beam.grow-direction = #'()\\n    { g32[ a b c] }\\n\\nThe spacing in the printed output represents the note durations only approximately, but the MIDI output is exact.\"\n  },\n  {\n    \"label\": \"\\\\halign\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Horizontal alignment may be fine-tuned using a numeric value:\\n\\n    a1-\\\\markup { \\\\halign #-1 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #0 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #0.5 poco }\\n    e'\\n    a,-\\\\markup { \\\\halign #2 poco }\\n\\nSome objects may have alignment procedures of their own, and therefore are not affected by these commands. It is possible to move such markup objects as a whole, as shown for instance in Text marks.\"\n  },\n  {\n    \"label\": \"\\\\harmonicByFret\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Convert music into mixed harmonics; the resulting notes resemble harmonics played on a fretted instrument by touching the strings at fret.\"\n  },\n  {\n    \"label\": \"\\\\harmonicByRatio\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Convert music into mixed harmonics; the resulting notes resemble harmonics played on a fretted instrument by touching the strings at the point given through ratio.\"\n  },\n  {\n    \"label\": \"\\\\harmonicNote\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print note with a diamond-shaped note head.\"\n  },\n  {\n    \"label\": \"\\\\harmonicsOn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the default note head style to a diamond-shaped style.\"\n  },\n  {\n    \"label\": \"\\\\hbracket\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\hide\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set item’s ‘transparent’ property to #t, making it invisible while still retaining its dimensions.\\n\\nIf item is a symbol list of form GrobName or Context.GrobName, the result is an override for the grob name specified by it. If item is a music expression, the result is the same music expression with an appropriate tweak applied to it.\"\n  },\n  {\n    \"label\": \"\\\\hideKeySignature\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\hideNotes\",\n    \"detail\": \"Hidden notes\",\n    \"documentation\": \"Hidden (or invisible or transparent) notes can be useful in preparing theory or composition exercises.\\n\\n    c4 d\\n    \\\\hideNotes\\n    e4 f\\n    \\\\unHideNotes\\n    g a\\n    \\\\hideNotes\\n    b\\n    \\\\unHideNotes\\n    c\\n\\nNote heads, stems, and flags, and rests are invisible. Beams are invisible if they start on a hidden note. Objects that are attached to invisible notes are still visible.\\n\\n    e8(\\\\p f g a)--\\n    \\\\hideNotes\\n    e8(\\\\p f g a)--\"\n  },\n  {\n    \"label\": \"\\\\hideStaffSwitch\",\n    \"detail\": \"Staff-change lines\",\n    \"documentation\": \"Whenever a voice switches to another staff, a line connecting the notes can be printed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"one\\\" {\\n        \\\\showStaffSwitch\\n        c1\\n        \\\\change Staff = \\\"two\\\"\\n        b2 a\\n      }\\n      \\\\new Staff = \\\"two\\\" {\\n        \\\\clef bass\\n        s1*2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\horizontal-shift\",\n    \"detail\": \"\\\\paper variables for shifts and indents\",\n    \"documentation\": \"The amount that all systems (including titles and system separators) are shifted to the right. Default: 0.0\\\\mm.\"\n  },\n  {\n    \"label\": \"Horizontal_bracket_engraver\",\n    \"detail\": \"Analysis brackets\",\n    \"documentation\": \"Brackets are used in musical analysis to indicate structure in musical pieces. Simple horizontal brackets are supported.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c2\\\\startGroup\\n      d\\\\stopGroup\\n    }\\n\\nAnalysis brackets may be nested.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c4\\\\startGroup\\\\startGroup\\n      d4\\\\stopGroup\\n      e4\\\\startGroup\\n      d4\\\\stopGroup\\\\stopGroup\\n    }\"\n  },\n  {\n    \"label\": \"\\\\huge\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\huge\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\improvisationOff\",\n    \"detail\": \"Improvisation\",\n    \"documentation\": \"Improvisation is sometimes denoted with slashed note heads, where the performer may choose any pitch but should play the specified rhythm. Such note heads can be created:\\n\\n    \\\\new Voice \\\\with {\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n    } {\\n      e8 e g a a16( bes) a8 g\\n      \\\\improvisationOn\\n      e8 ~\\n      e2 ~ e8 f4 f8 ~\\n      f2\\n      \\\\improvisationOff\\n      a16( bes) a8 g e\\n    }\"\n  },\n  {\n    \"label\": \"\\\\improvisationOff\",\n    \"detail\": \"Showing melody rhythms\",\n    \"documentation\": \"Guitar chord charts often show the strumming rhythms. This can be done with the Pitch_squash_engraver and \\\\improvisationOn.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 f g c\\n        }\\n      }\\n      \\\\new Voice \\\\with {\\n        \\\\consists \\\"Pitch_squash_engraver\\\"\\n      } \\\\relative c'' {\\n        \\\\improvisationOn\\n        c4 c8 c c4 c8 c\\n        f4 f8 f f4 f8 f\\n        g4 g8 g g4 g8 g\\n        c4 c8 c c4 c8 c\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\improvisationOn\",\n    \"detail\": \"Improvisation\",\n    \"documentation\": \"Improvisation is sometimes denoted with slashed note heads, where the performer may choose any pitch but should play the specified rhythm. Such note heads can be created:\\n\\n    \\\\new Voice \\\\with {\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n    } {\\n      e8 e g a a16( bes) a8 g\\n      \\\\improvisationOn\\n      e8 ~\\n      e2 ~ e8 f4 f8 ~\\n      f2\\n      \\\\improvisationOff\\n      a16( bes) a8 g e\\n    }\"\n  },\n  {\n    \"label\": \"\\\\improvisationOn\",\n    \"detail\": \"Showing melody rhythms\",\n    \"documentation\": \"Guitar chord charts often show the strumming rhythms. This can be done with the Pitch_squash_engraver and \\\\improvisationOn.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 f g c\\n        }\\n      }\\n      \\\\new Voice \\\\with {\\n        \\\\consists \\\"Pitch_squash_engraver\\\"\\n      } \\\\relative c'' {\\n        \\\\improvisationOn\\n        c4 c8 c c4 c8 c\\n        f4 f8 f f4 f8 f\\n        g4 g8 g g4 g8 g\\n        c4 c8 c c4 c8 c\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\indent\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"However, if the instrument names are longer, the instrument names in a staff group may not be centered unless the indent and short-indent settings are increased. For details about these settings, see \\\\paper variables for shifts and indents.\\n\\n    \\\\relative c'' {\\n      <<\\n        \\\\new Staff \\\\with {\\n          instrumentName = #\\\"Alto Flute in G\\\"\\n          shortInstrumentName = #\\\"Flt.\\\"\\n        }\\n        {\\n          f2 g4 f \\\\break\\n          g4 f g2\\n        }\\n        \\\\new Staff \\\\with {\\n          instrumentName = #\\\"Clarinet\\\"\\n          shortInstrumentName = #\\\"Clar.\\\"\\n        }\\n        {\\n          c,4 b c2 \\\\break\\n          c2 b4 c\\n        }\\n      >>\\n    }\\n    \\\\layout {\\n      indent = 3.0\\\\cm\\n      short-indent = 1.5\\\\cm\\n    }\"\n  },\n  {\n    \"label\": \"\\\\indent\",\n    \"detail\": \"\\\\paper variables for shifts and indents\",\n    \"documentation\": \"The level of indentation for the first system in a score. If the paper size is modified, this dimension’s default value is scaled accordingly. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\indent\",\n    \"detail\": \"4.5.4 Line length\",\n    \"documentation\": \"The most basic settings influencing the spacing are indent and line-width. They are set in the \\\\layout block. They control the indentation of the first line of music, and the lengths of the lines.\\n\\nIf ragged-right is set to true in the \\\\layout block, then systems ends at their natural horizontal length, instead of being spread horizontally to fill the whole line. This is useful for short fragments, and for checking how tight the natural spacing is. The normal default setting is false, but if the score has only one system the default value is true.\"\n  },\n  {\n    \"label\": \"\\\\inner-margin\",\n    \"detail\": \"\\\\paper variables for two-sided mode\",\n    \"documentation\": \"The margin all pages have at the inner side if they are part of a book. If the paper size is modified, this dimension’s default value is scaled accordingly. Works only with two-sided set to true.\"\n  },\n  {\n    \"label\": \"\\\\inStaffSegno\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Put the segno variant ’varsegno’ at this position into the staff, compatible with the repeat command.\"\n  },\n  {\n    \"label\": \"\\\\instrumentSwitch\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"If an instrument switch is needed, \\\\addInstrumentDefinition may be used in combination with \\\\instrumentSwitch to create a detailed list of the necessary changes for the switch. The \\\\addInstrumentDefinition command has two arguments: an identifying string, and an association list of context properties and values to be used for the instrument. It must be placed in the toplevel scope. \\\\instrumentSwitch is used in the music expression to declare the instrument switch:\\n\\n    \\\\addInstrumentDefinition #\\\"contrabassoon\\\"\\n      #`((instrumentTransposition . ,(ly:make-pitch -1 0 0))\\n         (shortInstrumentName . \\\"Cbsn.\\\")\\n         (clefGlyph . \\\"clefs.F\\\")\\n         (middleCPosition . 6)\\n         (clefPosition . 2)\\n         (instrumentCueName . ,(make-bold-markup \\\"cbsn.\\\"))\\n         (midiInstrument . \\\"bassoon\\\"))\\n    \\\\new Staff \\\\with {\\n      instrumentName = #\\\"Bassoon\\\"\\n    }\\n    \\\\relative c' {\\n      \\\\clef tenor\\n      \\\\compressFullBarRests\\n      c2 g'\\n      R1*16\\n      \\\\instrumentSwitch \\\"contrabassoon\\\"\\n      c,,2 g \\\\break\\n      c,1 ~ | c1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\instrumentSwitch\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Switch instrument to name, which must be predefined with \\\\addInstrumentDefinition.\"\n  },\n  {\n    \"label\": \"\\\\inversion\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Invert music about around and transpose from around to to.\"\n  },\n  {\n    \"label\": \"\\\\ionian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\italic\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\justified-lines\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"\\\\justify\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Long text indications can also be automatically wrapped accordingly to the given line width. These will be either left-aligned or justified, as shown in the following example.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line  \\\\smallCaps { La vida breve }\\n        \\\\line \\\\bold { Acto I }\\n        \\\\wordwrap \\\\italic {\\n          (La escena representa el corral de una casa de\\n          gitanos en el Albaicín de Granada.  Al fondo una\\n          puerta por la que se ve el negro interior de\\n          una Fragua, iluminado por los rojos resplandores\\n          del fuego.)\\n        }\\n        \\\\hspace #0\\n        \\\\line \\\\bold { Acto II }\\n        \\\\override #'(line-width . 50)\\n        \\\\justify \\\\italic {\\n          (Calle de Granada.  Fachada de la casa de Carmela\\n          y su hermano Manuel con grandes ventanas abiertas\\n          a través de las que se ve el patio\\n          donde se celebra una alegre fiesta)\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\keepWithTag\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Include only elements of music that are either untagged or tagged with one of the tags in tag. tag may be either a single symbol or a list of symbols.\"\n  },\n  {\n    \"label\": \"\\\\key\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"The key signature indicates the tonality in which a piece is played. It is denoted by a set of alterations (flats or sharps) at the start of the staff. The key signature may be altered:\\n\\n    \\\\key pitch mode\"\n  },\n  {\n    \"label\": \"\\\\key\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\key\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set key to tonic and scale pitch-alist. If both are null, just generate KeyChangeEvent.\"\n  },\n  {\n    \"label\": \"\\\\killCues\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The \\\\killCues command removes cue notes from a music expression, so the same music expression can be used to produce the instrument part with cues and the score. The \\\\killCues command removes only the notes and events that were quoted by \\\\cueDuring. Other markup associated with cues, such as clef changes and a label identifying the source instrument, can be tagged for selective inclusion in the score; see Using tags.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\tag #'part {\\n        \\\\clef treble\\n        \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\tag #'part \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff {\\n        \\\\fluteNotes\\n      }\\n      \\\\new Staff {\\n        \\\\removeWithTag #'part { \\\\killCues { \\\\bassoonNotes } }\\n      }\\n    >>\\n\\nAlternatively, Clef changes and instrument labels can be collected into an instrument definition for repeated use, using \\\\addInstrumentDefinition described in Instrument names.\"\n  },\n  {\n    \"label\": \"\\\\killCues\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Remove cue notes from music.\"\n  },\n  {\n    \"label\": \"\\\\label\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create label as a bookmarking label.\"\n  },\n  {\n    \"label\": \"\\\\laissezVibrer\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"L.v. ties (laissez vibrer) indicate that notes must not be damped at the end. It is used in notation for piano, harp and other string and percussion instruments. They can be entered as follows:\\n\\n    <c f g>1\\\\laissezVibrer\"\n  },\n  {\n    \"label\": \"\\\\language\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set note names for language language.\"\n  },\n  {\n    \"label\": \"\\\\languageRestore\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Restore a previously-saved pitchnames alist.\"\n  },\n  {\n    \"label\": \"\\\\languageSaveAndChange\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Store the previous pitchnames alist, and set a new one.\"\n  },\n  {\n    \"label\": \"\\\\large\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\large\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\larger\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\larger\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\last-bottom-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance from the last system or top-level markup on a page to the bottom of the printable area (i.e. the top of the bottom margin).\"\n  },\n  {\n    \"label\": \"\\\\layout file\",\n    \"detail\": \"4.2.2 Setting the staff size\",\n    \"documentation\": \"The default staff size is set to 20 points. This may be changed in two ways:\\n\\nTo set the staff size globally for all scores in a file (or in a book block, to be precise), use set-global-staff-size.\\n\\n    #(set-global-staff-size 14)\\n\\nThis sets the global default size to 14pt staff height and scales all fonts accordingly.\\n\\nTo set the staff size individually for each score, use\\n\\n    \\\\score{\\n      …\\n      \\\\layout {\\n        #(layout-set-staff-size 15)\\n      }\\n    }\\n\\nThe Feta font provides musical symbols at eight different sizes. Each font is tuned for a different staff size: at a smaller size the font becomes heavier, to match the relatively heavier staff lines. The recommended font sizes are listed in the following table:\\n\\n    font name\\n    staff height (pt)\\n    staff height (mm)\\n    use\\n    feta11\\n    11.22\\n    3.9\\n    pocket scores\\n    feta13\\n    12.60\\n    4.4\\n    feta14\\n    14.14\\n    5.0\\n    feta16\\n    15.87\\n    5.6\\n    feta18\\n    17.82\\n    6.3\\n    song books\\n    feta20\\n    20\\n    7.0\\n    standard parts\\n    feta23\\n    22.45\\n    7.9\\n    feta26\\n    25.2\\n    8.9\\n\\nThese fonts are available in any sizes. The context property fontSize and the layout property staff-space (in StaffSymbol) can be used to tune the size for individual staves. The sizes of individual staves are relative to the global size.\"\n  },\n  {\n    \"label\": \"\\\\left-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\left-margin\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"The margin between the left edge of the page and the start of the staff lines in unindented systems. If the paper size is modified, this dimension’s default value is scaled accordingly. If left-margin is unset, and both line-width and right-margin are set, then left-margin is set to (paper-width - line-width - right-margin). If only line-width is set, then both margins are set to ((paper-width - line-width) / 2), and the systems are consequently centered on the page. Also see check-consistency.\"\n  },\n  {\n    \"label\": \"\\\\line-width\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"The horizontal extent of the staff lines in unindented, non-ragged systems, equal to (paper-width - left-margin - right-margin) when unset. If line-width is set, and both left-margin and right-margin are unset, then the margins will be updated to center the systems on the page automatically. Also see check-consistency. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\line-width\",\n    \"detail\": \"4.5.4 Line length\",\n    \"documentation\": \"The most basic settings influencing the spacing are indent and line-width. They are set in the \\\\layout block. They control the indentation of the first line of music, and the lengths of the lines.\\n\\nIf ragged-right is set to true in the \\\\layout block, then systems ends at their natural horizontal length, instead of being spread horizontally to fill the whole line. This is useful for short fragments, and for checking how tight the natural spacing is. The normal default setting is false, but if the score has only one system the default value is true.\"\n  },\n  {\n    \"label\": \"\\\\locrian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\longa\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\longa\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\lower\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\ly:minimal-breaking\",\n    \"detail\": \"4.3.5 Minimal page breaking\",\n    \"documentation\": \"The ly:minimal-breaking function performs minimal computations to calculate the page breaking: it fills a page with as many systems as possible before moving to the next one. Thus, it may be preferred for scores with many pages, where the other page breaking functions could be too slow or memory demanding, or a lot of texts. It is enabled using:\\n\\n    \\\\paper {\\n      page-breaking = #ly:minimal-breaking\\n    }\"\n  },\n  {\n    \"label\": \"\\\\ly:one-line-breaking\",\n    \"detail\": \"4.3.6 One-line page breaking\",\n    \"documentation\": \"The ly:one-line-breaking function is a special-purpose page breaking algorithm that puts each score on its own page, and on a single line. This page breaking function does not typeset titles or margins; only the score will be displayed.\\n\\nThe page width will be adjusted so that the longest score fits on one line. In particular, paper-width, line-width and indent variables in the \\\\paper block will be ignored, although left-margin and right-margin will still be honored. The height of the page will be left unmodified.\"\n  },\n  {\n    \"label\": \"\\\\ly:optimal-breaking\",\n    \"detail\": \"4.3.3 Optimal page breaking\",\n    \"documentation\": \"The ly:optimal-breaking function is LilyPond’s default method of determining page breaks. It attempts to find a page breaking that minimizes cramping and stretching, both horizontally and vertically. Unlike ly:page-turn-breaking, it has no concept of page turns.\"\n  },\n  {\n    \"label\": \"\\\\ly:page-turn-breaking\",\n    \"detail\": \"4.3.4 Optimal page turning\",\n    \"documentation\": \"Often it is necessary to find a page breaking configuration so that there is a rest at the end of every second page. This way, the musician can turn the page without having to miss notes. The ly:page-turn-breaking function attempts to find a page breaking minimizing cramping and stretching, but with the additional restriction that it is only allowed to introduce page turns in specified places.\\n\\nThere are two steps to using this page breaking function. First, you must enable it in the \\\\paper block, as explained in Page breaking. Then you must tell the function where you would like to allow page breaks.\\n\\nThere are two ways to achieve the second step. First, you can specify each potential page turn manually, by inserting \\\\allowPageTurn into your input file at the appropriate places.\\n\\nIf this is too tedious, you can add a Page_turn_engraver to a Staff or Voice context. The Page_turn_engraver will scan the context for sections without notes (note that it does not scan for rests; it scans for the absence of notes. This is so that single-staff polyphony with rests in one of the parts does not throw off the Page_turn_engraver). When it finds a sufficiently long section without notes, the Page_turn_engraver will insert an \\\\allowPageTurn at the final bar line in that section, unless there is a ‘special’ bar line (such as a double bar), in which case the \\\\allowPageTurn will be inserted at the final ‘special’ bar line in the section.\"\n  },\n  {\n    \"label\": \"\\\\lydian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\m\",\n    \"detail\": \"Common chords\",\n    \"documentation\": \"The table below shows the actions of the quality modifiers on triads and seventh chords. The default seventh step added to chords is a minor or flatted seventh, which makes the dominant seventh the basic seventh chord. All alterations are relative to the dominant seventh. A more complete table of modifier usage is found at Common chord modifiers.\\n\\nModifier\\tAction\\tExample\\nNone\\tThe default action; produces a major triad.\\t\\n \\n\\nm, m7\\tThe minor chord. This modifier lowers the 3rd.\\t\\n \\n\\ndim, dim7\\tThe diminished chord. This modifier lowers the 3rd, 5th and (if present) the 7th step.\\t\\n \\n\\naug\\tThe augmented chord. This modifier raises the 5th step.\\t\\n \\n\\nmaj, maj7\\tThe major 7th chord. This modifier adds a raised 7th step. The 7 following maj is optional. Do NOT use this modifier to create a major triad.\\t\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\magnify\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\magstep\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\magstep\",\n    \"detail\": \"5.4.3 Distances and measurements\",\n    \"documentation\": \"If just a section of a score needs to be rendered to a different scale, for example an ossia section or a footnote, the global staff size cannot simply be changed as this would affect the entire score. In such cases the change in size is made by overriding both the staff-space property of StaffSymbol and the size of the fonts. A Scheme function, magstep, is available to convert from a font size change to the equivalent change in staff-space. For an explanation and an example of its use, see Length and thickness of objects.\"\n  },\n  {\n    \"label\": \"\\\\maj\",\n    \"detail\": \"Common chords\",\n    \"documentation\": \"The table below shows the actions of the quality modifiers on triads and seventh chords. The default seventh step added to chords is a minor or flatted seventh, which makes the dominant seventh the basic seventh chord. All alterations are relative to the dominant seventh. A more complete table of modifier usage is found at Common chord modifiers.\\n\\nModifier\\tAction\\tExample\\nNone\\tThe default action; produces a major triad.\\t\\n \\n\\nm, m7\\tThe minor chord. This modifier lowers the 3rd.\\t\\n \\n\\ndim, dim7\\tThe diminished chord. This modifier lowers the 3rd, 5th and (if present) the 7th step.\\t\\n \\n\\naug\\tThe augmented chord. This modifier raises the 5th step.\\t\\n \\n\\nmaj, maj7\\tThe major 7th chord. This modifier adds a raised 7th step. The 7 following maj is optional. Do NOT use this modifier to create a major triad.\\t\\n \\n\\n\"\n  },\n  {\n    \"label\": \"\\\\major\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\major seven symbols\",\n    \"detail\": \"Predefined commands\",\n    \"documentation\": \"\\\\whiteTriangleMarkup, \\\\blackTriangleMarkup, \\\\germanChords, \\\\semiGermanChords, \\\\italianChords, \\\\frenchChords.\"\n  },\n  {\n    \"label\": \"\\\\majorSevenSymbol\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\make-dynamic-script\",\n    \"detail\": \"New dynamic marks\",\n    \"documentation\": \"Simple, centered dynamic marks are easily created with the make-dynamic-script function.\\n\\n    sfzp = #(make-dynamic-script \\\"sfzp\\\")\\n    \\\\relative c' {\\n      c4 c c\\\\sfzp c\\n    }\\n\\nIn general, make-dynamic-script takes any markup object as its argument. The dynamic font only contains the characters f,m,p,r,s and z, so if a dynamic mark that includes plain text or punctuation symbols is desired, markup commands that reverts font family and font encoding to normal text should be used, for example \\\\normal-text. The interest of using make-dynamic-script instead of an ordinary markup is ensuring the vertical alignment of markup objects and hairpins that are attached to the same note head.\\n\\n    roundF = \\\\markup { \\\\center-align \\\\concat {\\n               \\\\normal-text { \\\\bold { \\\\italic ( } }\\n               \\\\dynamic f\\n               \\\\normal-text { \\\\bold { \\\\italic ) } } } }\\n    boxF = \\\\markup { \\\\bracket { \\\\dynamic f } }\\n    mfEspress = \\\\markup { \\\\center-align \\\\line {\\n                  \\\\hspace #3.7 mf \\\\normal-text \\\\italic espress. } }\\n    roundFdynamic = #(make-dynamic-script roundF)\\n    boxFdynamic = #(make-dynamic-script boxF)\\n    mfEspressDynamic = #(make-dynamic-script mfEspress)\\n    \\\\relative c' {\\n      c4_\\\\roundFdynamic\\\\< d e f\\n      g,1~_\\\\boxFdynamic\\\\>\\n      g1\\n      g'1~\\\\mfEspressDynamic\\n      g1\\n    }\\n\\nThe Scheme form of markup mode may be used instead. Its syntax is explained in Markup construction in Scheme.\\n\\n    moltoF = #(make-dynamic-script\\n                (markup #:normal-text \\\"molto\\\"\\n                        #:dynamic \\\"f\\\"))\\n    \\\\relative c' {\\n      <d e>16 <d e>\\n      <d e>2..\\\\moltoF\\n    }\\n\\nTo left-align the dynamic text rather than centering it on a note use a \\\\tweak:\\n\\n    moltoF = \\\\tweak DynamicText.self-alignment-X #LEFT\\n             #(make-dynamic-script\\n                (markup #:normal-text \\\"molto\\\"\\n                        #:dynamic \\\"f\\\"))\\n    \\\\relative c' {\\n      <d e>16 <d e>\\n      <d e>2..\\\\moltoF <d e>1\\n    }\\n\\nFont settings in markup mode are described in Selecting font and font size.\"\n  },\n  {\n    \"label\": \"\\\\make-pango-font-tree\",\n    \"detail\": \"Entire document fonts\",\n    \"documentation\": \"Notation Reference: Fonts explained, Single entry fonts, Selecting font and font size, Font.\"\n  },\n  {\n    \"label\": \"\\\\makeClusters\",\n    \"detail\": \"Clusters\",\n    \"documentation\": \"A cluster indicates a continuous range of pitches to be played. They can be denoted as the envelope of a set of notes. They are entered by applying the function \\\\makeClusters to a sequence of chords, e.g.,\\n\\n    \\\\makeClusters { <g b>2 <c g'> }\\n\\nOrdinary notes and clusters can be put together in the same staff, even simultaneously. In such a case no attempt is made to automatically avoid collisions between ordinary notes and clusters.\"\n  },\n  {\n    \"label\": \"\\\\makeClusters\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Display chords in arg as clusters.\"\n  },\n  {\n    \"label\": \"\\\\makeDefaultStringTuning\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"This defines a string tuning symbol via a list of pitches. The symbol also gets registered in defaultStringTunings for documentation purposes.\"\n  },\n  {\n    \"label\": \"\\\\mark\",\n    \"detail\": \"Rehearsal marks\",\n    \"documentation\": \"To print a rehearsal mark, use the \\\\mark command.\\n\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n\\nThe mark is incremented automatically if you use \\\\mark \\\\default, but you can also use an integer argument to set the mark manually. The value to use is stored in the property rehearsalMark.\\n\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark #8\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n\\nThe letter ‘I’ is skipped in accordance with engraving traditions. If you wish to include the letter ‘I’, then use one of the following commands, depending on which style of rehearsal mark you want (letters only, letters in a hollow box, or letters in a hollow circle).\\n\\n    \\\\set Score.markFormatter = #format-mark-alphabet\\n    \\\\set Score.markFormatter = #format-mark-box-alphabet\\n    \\\\set Score.markFormatter = #format-mark-circle-alphabet\\n\\n    \\\\set Score.markFormatter = #format-mark-box-alphabet\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark #8\\n    c1 \\\\mark \\\\default\\n    c1 \\\\mark \\\\default\"\n  },\n  {\n    \"label\": \"\\\\mark\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"Various text elements may be added to a score using the syntax described in Rehearsal marks:\\n\\n    c4\\n    \\\\mark \\\"Allegro\\\"\\n    c c c\\n\\nThis syntax makes it possible to put any text on a bar line; more complex text formatting may be added using a \\\\markup block, as described in Formatting text:\\n\\n    <c e>1\\n    \\\\mark \\\\markup { \\\\italic { colla parte } }\\n    <d f>2 <e g>\\n    <c f aes>1\\n\\nThis syntax also allows to print special signs, like coda, segno or fermata, by specifying the appropriate symbol name as explained in Music notation inside markup:\\n\\n    <bes f>2 <aes d>\\n    \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    <e g>1\\n\\nSuch objects are only typeset above the top staff of the score; depending on whether they are specified at the end or the middle of a bar, they can be placed above the bar line or between notes. When specified at a line break, the mark will be printed at the beginning of the next line.\\n\\n    \\\\mark \\\"Allegro\\\"\\n    c1 c\\n    \\\\mark \\\"assai\\\" \\\\break\\n    c  c\"\n  },\n  {\n    \"label\": \"\\\\mark\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make the music for the \\\\mark command.\"\n  },\n  {\n    \"label\": \"\\\\markLengthOff\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"In a part for an instrument with long periods of rests, tempo indications sometimes follow each other closely. The command \\\\markLengthOn provides extra horizontal space to prevent tempo indications from overlapping, and \\\\markLengthOff restores the default behavior of ignoring tempo marks for horizontal spacing.\\n\\n    \\\\compressFullBarRests\\n    \\\\markLengthOn\\n    \\\\tempo \\\"Molto vivace\\\"\\n    R1*12\\n    \\\\tempo \\\"Meno mosso\\\"\\n    R1*16\\n    \\\\markLengthOff\\n    \\\\tempo \\\"Tranquillo\\\"\\n    R1*20\"\n  },\n  {\n    \"label\": \"\\\\markLengthOff\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"\\\\markLengthOn, \\\\markLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\markLengthOn\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"In a part for an instrument with long periods of rests, tempo indications sometimes follow each other closely. The command \\\\markLengthOn provides extra horizontal space to prevent tempo indications from overlapping, and \\\\markLengthOff restores the default behavior of ignoring tempo marks for horizontal spacing.\\n\\n    \\\\compressFullBarRests\\n    \\\\markLengthOn\\n    \\\\tempo \\\"Molto vivace\\\"\\n    R1*12\\n    \\\\tempo \\\"Meno mosso\\\"\\n    R1*16\\n    \\\\markLengthOff\\n    \\\\tempo \\\"Tranquillo\\\"\\n    R1*20\"\n  },\n  {\n    \"label\": \"\\\\markLengthOn\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"\\\\markLengthOn, \\\\markLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Text marks\",\n    \"documentation\": \"Various text elements may be added to a score using the syntax described in Rehearsal marks:\\n\\n    c4\\n    \\\\mark \\\"Allegro\\\"\\n    c c c\\n\\nThis syntax makes it possible to put any text on a bar line; more complex text formatting may be added using a \\\\markup block, as described in Formatting text:\\n\\n    <c e>1\\n    \\\\mark \\\\markup { \\\\italic { colla parte } }\\n    <d f>2 <e g>\\n    <c f aes>1\\n\\nThis syntax also allows to print special signs, like coda, segno or fermata, by specifying the appropriate symbol name as explained in Music notation inside markup:\\n\\n    <bes f>2 <aes d>\\n    \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    <e g>1\\n\\nSuch objects are only typeset above the top staff of the score; depending on whether they are specified at the end or the middle of a bar, they can be placed above the bar line or between notes. When specified at a line break, the mark will be printed at the beginning of the next line.\\n\\n    \\\\mark \\\"Allegro\\\"\\n    c1 c\\n    \\\\mark \\\"assai\\\" \\\\break\\n    c  c\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"A \\\\markup block can exist by itself, outside of any \\\\score block, as a “top-level expression”. This syntax is described in File structure.\\n\\n    \\\\markup {\\n      Tomorrow, and tomorrow, and tomorrow...\\n    }\\n\\nThis allows printing text separately from the music, which is particularly useful when the input file contains several music pieces, as described in Multiple scores in a book.\\n\\n    \\\\score {\\n      c'1\\n    }\\n    \\\\markup {\\n      Tomorrow, and tomorrow, and tomorrow...\\n    }\\n    \\\\score {\\n      c'1\\n    }\\n\\nSeparate text blocks can be spread over multiple pages, making it possible to print text documents or books entirely within LilyPond. This feature, and the specific syntax it requires, are described in Multi-page markup.\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"\\\\markup, \\\\markuplist.\"\n  },\n  {\n    \"label\": \"\\\\markup\",\n    \"detail\": \"Text markup introduction\",\n    \"documentation\": \"A \\\\markup block is used to typeset text with an extensible syntax called “markup mode”.\"\n  },\n  {\n    \"label\": \"\\\\markup-markup-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance between two (title or top-level) markups.\"\n  },\n  {\n    \"label\": \"\\\\markup-system-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance between a (title or top-level) markup and the system that follows it.\"\n  },\n  {\n    \"label\": \"\\\\markuplist\",\n    \"detail\": \"Separate text\",\n    \"documentation\": \"\\\\markup, \\\\markuplist.\"\n  },\n  {\n    \"label\": \"\\\\markuplist\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"\\\\max-systems-per-page\",\n    \"detail\": \"\\\\paper variables for line breaking\",\n    \"documentation\": \"The maximum number of systems that will be placed on a page. This is currently supported only by the ly:optimal-breaking algorithm. Default: unset.\"\n  },\n  {\n    \"label\": \"\\\\maxima\",\n    \"detail\": \"Durations\",\n    \"documentation\": \"Durations are designated by numbers and dots. Durations are entered as their reciprocal values. For example, a quarter note is entered using a 4 (since it is a 1/4 note), and a half note is entered using a 2 (since it is a 1/2 note). For notes longer than a whole you must use the \\\\longa (a double breve) and \\\\breve commands. Durations as short as 128th notes may be specified. Shorter values are possible, but only as beamed notes.\\n\\n    \\\\time 8/1\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nHere are the same durations with automatic beaming turned off.\\n\\n    \\\\time 8/1\\n    \\\\autoBeamOff\\n    c\\\\longa c\\\\breve c1 c2\\n    c4 c8 c16 c32 c64 c128 c128\\n\\nA note with the duration of a quadruple breve may be entered with \\\\maxima, but this is supported only within ancient music notation. For details, see Ancient notation.\"\n  },\n  {\n    \"label\": \"\\\\maxima\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\measureLength\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\measureLength\",\n    \"detail\": \"Time administration\",\n    \"documentation\": \"Time is administered by the Timing_translator, which by default is to be found in the Score context. An alias, Timing, is added to the context in which the Timing_translator is placed. To ensure that the Timing alias is available, you may need to explicitly instantiate the containing context (such as Voice or Staff).\\n\\nThe following properties of Timing are used to keep track of timing within the score.\"\n  },\n  {\n    \"label\": \"\\\\measurePosition\",\n    \"detail\": \"Upbeats\",\n    \"documentation\": \"Partial or pick-up measures, such as an anacrusis or an upbeat, are entered using the \\\\partial command,\\n\\n    \\\\partial duration\\n\\nwhere duration is the remaining length of the partial measure before the start of the next full measure.\\n\\n    \\\\time 3/4\\n    \\\\partial 8\\n    e8 | a4 c8 b c4 |\\n\\nThe duration can be any value less than a full measure:\\n\\n    \\\\time 3/4\\n    \\\\partial 4.\\n    r4 e8 | a4 c8 b c4 |\\n\\n\\\\partial duration can also be written as:\\n\\n    \\\\set Timing.measurePosition -duration\\n\\nSo the first example above could be written:\\n\\n    \\\\time 3/4\\n    \\\\set Timing.measurePosition = #(ly:make-moment -1/8)\\n    e8 | a4 c8 b c4 |\\n\\nThe property measurePosition contains a rational number, which is usually positive and indicates how much of the measure has passed at this point. The \\\\partial duration command sets it to a negative number, when it has a different meaning: it then says that the current (first) bar will be preceded by a bar 0 (the partial bar) with a duration given by duration.\"\n  },\n  {\n    \"label\": \"\\\\measurePosition\",\n    \"detail\": \"Time administration\",\n    \"documentation\": \"Time is administered by the Timing_translator, which by default is to be found in the Score context. An alias, Timing, is added to the context in which the Timing_translator is placed. To ensure that the Timing alias is available, you may need to explicitly instantiate the containing context (such as Voice or Staff).\\n\\nThe following properties of Timing are used to keep track of timing within the score.\"\n  },\n  {\n    \"label\": \"MensuralStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyDottedOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyDottedOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyHeadedOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mergeDifferentlyHeadedOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\mf\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\min-systems-per-page\",\n    \"detail\": \"\\\\paper variables for line breaking\",\n    \"documentation\": \"The minimum number of systems that will be placed on a page. This may cause pages to be overfilled if it is made too large. This is currently supported only by the ly:optimal-breaking algorithm. Default: unset.\"\n  },\n  {\n    \"label\": \"\\\\minimum-Y-extent\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\minimumFret\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"By default pitches are assigned to the lowest playing position on the fret-board (first position). Open strings are automatically preferred. If you would like a certain pitch to be played on a specific string you can add a string number indication to the pitch name. If you don’t want to have string number indications appear in traditional notation, you can override the respective stencil. Usually it will be more comfortable to define the playing position by using the value of minimumFret. The default value for minimumFret is 0.\\n\\nEven when minimumFret is set, open strings are used whenever possible. This behaviour can be changed by setting restrainOpenStrings to #t.\\n\\n    \\\\layout { \\\\omit Voice.StringNumber }\\n    \\\\new StaffGroup <<\\n       \\\\new Staff \\\\relative c {\\n         \\\\clef \\\"treble_8\\\"\\n         \\\\time 2/4\\n         c16 d e f g4\\n         c,16\\\\5 d\\\\5 e\\\\4 f\\\\4 g4\\\\4\\n         c,16 d e f g4\\n       }\\n       \\\\new TabStaff \\\\relative c {\\n         c16 d e f g4\\n         c,16\\\\5 d\\\\5 e\\\\4 f\\\\4 g4\\\\4\\n         \\\\set TabStaff.minimumFret = #5\\n         \\\\set TabStaff.restrainOpenStrings = ##t\\n         c,16 d e f g4\\n       }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\minimumFret\",\n    \"detail\": \"Automatic fret diagrams\",\n    \"documentation\": \"The minimum fret to be used in calculating strings and frets for the FretBoard context can be set with the minimumFret property.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          d1:m d:m\\n        }\\n      }\\n      \\\\new FretBoards {\\n        <d a d' f'>1\\n        \\\\set FretBoards.minimumFret = #5\\n        <d a d' f'>1\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <d a d' f'>1\\n        <d a d' f'>1\\n      }\\n    >>\\n\\nThe strings and frets for the FretBoards context depend on the stringTunings property, which has the same meaning as in the TabStaff context. See Custom tablatures for information on the stringTunings property.\\n\\nThe graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a FretBoards fret diagram, the interface properties belong to FretBoards.FretBoard.\"\n  },\n  {\n    \"label\": \"\\\\minimumPageTurnLength\",\n    \"detail\": \"4.3.4 Optimal page turning\",\n    \"documentation\": \"The Page_turn_engraver reads the context property minimumPageTurnLength to determine how long a note-free section must be before a page turn is considered. The default value for minimumPageTurnLength is (ly:make-moment 1/1). If you want to disable page turns, you can set it to something very large.\\n\\n    \\\\new Staff \\\\with { \\\\consists \\\"Page_turn_engraver\\\" }\\n    {\\n      a4 b c d |\\n      R1 | % a page turn will be allowed here\\n      a4 b c d |\\n      \\\\set Staff.minimumPageTurnLength = #(ly:make-moment 5/2)\\n      R1 | % a page turn will not be allowed here\\n      a4 b r2 |\\n      R1*2 | % a page turn will be allowed here\\n      a1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\minimumRepeatLengthForPageTurn\",\n    \"detail\": \"4.3.4 Optimal page turning\",\n    \"documentation\": \"The Page_turn_engraver detects volta repeats. It will only allow a page turn during the repeat if there is enough time at the beginning and end of the repeat to turn the page back. The Page_turn_engraver can also disable page turns if the repeat is very short. If you set the context property minimumRepeatLengthForPageTurn then the Page_turn_engraver will only allow turns in repeats whose duration is longer than this value.\\n\\nThe page turning commands, \\\\pageTurn, \\\\noPageTurn and \\\\allowPageTurn, may also be used at top-level, between scores and top-level markups.\"\n  },\n  {\n    \"label\": \"\\\\minor\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\minorChordModifier\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\mixed\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"There are three styles of pedal indications: text, bracket, and mixed. The sustain pedal and the una corda pedal use the text style by default while the sostenuto pedal uses mixed by default.\\n\\n    c4\\\\sustainOn g c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'mixed\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'bracket\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\n    \\\\bar \\\"|.\\\"\\n\\nThe placement of the pedal commands matches the physical movement of the sustain pedal during piano performance. Pedalling to the final bar line is indicated by omitting the final pedal off command.\\n\\nPedal indications may be placed in a Dynamics context, which aligns them on a horizontal line.\"\n  },\n  {\n    \"label\": \"\\\\mixolydian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\modalInversion\",\n    \"detail\": \"Modal inversion\",\n    \"documentation\": \"A motif can be inverted within a given scale around a given pivot note and transposed in a single operation with:\\n\\n    \\\\modalInversion around-pitch to-pitch scale motif\\n\\nThe notes of motif are placed the same number of scale degrees from the around-pitch note within the scale, but in the opposite direction, and the result is then shifted within the scale by the number of scale degrees given by the interval between to-pitch and around-pitch.\\n\\nSo to simply invert around a note in the scale use the same value for around-pitch and to-pitch:\\n\\n    octatonicScale = \\\\relative c' { ees f fis gis a b c d }\\n    motif = \\\\relative c' { c8. ees16 fis8. a16 b8. gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalInversion fis' fis' \\\\octatonicScale \\\\motif\\n    }\\n\\nTo invert around a pivot between two notes in the scale, invert around one of the notes and then transpose by one scale degree. The two notes specified can be interpreted as bracketing the pivot point:\\n\\n    scale = \\\\relative c' { c g' }\\n    motive = \\\\relative c' { c c g' c, }\\n    \\\\new Staff {\\n      \\\\motive\\n      \\\\modalInversion c' g' \\\\scale \\\\motive\\n    }\\n\\nThe combined operation of inversion and retrograde produce the retrograde-inversion:\\n\\n    octatonicScale = \\\\relative c' { ees f fis gis a b c d }\\n    motif = \\\\relative c' { c8. ees16 fis8. a16 b8. gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\retrograde \\\\modalInversion c' c' \\\\octatonicScale \\\\motif\\n    }\"\n  },\n  {\n    \"label\": \"\\\\modalInversion\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Invert music about around using scale and transpose from around to to.\"\n  },\n  {\n    \"label\": \"\\\\modalTranspose\",\n    \"detail\": \"Modal transposition\",\n    \"documentation\": \"A motif can be transposed within a given scale with:\\n\\n    \\\\modalTranspose from-pitch to-pitch scale motif\\n\\nThe notes of motif are shifted within the scale by the number of scale degrees given by the interval between to-pitch and from-pitch:\\n\\n    diatonicScale = \\\\relative c' { c d e f g a b }\\n    motif = \\\\relative c' { c8 d e f g a b c }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalTranspose c f \\\\diatonicScale \\\\motif\\n      \\\\modalTranspose c b, \\\\diatonicScale \\\\motif\\n    }\\n\\nAn ascending scale of any length and with any intervals may be specified:\\n\\n    pentatonicScale = \\\\relative c' { ges aes bes des ees }\\n    motif = \\\\relative c' { ees8 des ges,4 <ges' bes,> <ges bes,> }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\modalTranspose ges ees' \\\\pentatonicScale \\\\motif\\n    }\\n\\nWhen used with a chromatic scale \\\\modalTranspose has a similar effect to \\\\transpose, but with the ability to specify the names of the notes to be used:\\n\\n    chromaticScale = \\\\relative c' { c cis d dis e f fis g gis a ais b }\\n    motif = \\\\relative c' { c8 d e f g a b c }\\n    \\\\new Staff {\\n      \\\\motif\\n      \\\\transpose c f \\\\motif\\n      \\\\modalTranspose c f \\\\chromaticScale \\\\motif\\n    }\"\n  },\n  {\n    \"label\": \"\\\\modalTranspose\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Transpose music from pitch from to pitch to using scale.\"\n  },\n  {\n    \"label\": \"\\\\modern\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule corresponds to the common practice in the twentieth century. It omits some extra natural signs, which were traditionally prefixed to a sharp following a double sharp, or a flat following a double flat. The modern rule prints the same accidentals as default, with two additions that serve to avoid ambiguity: after temporary accidentals, cancellation marks are printed also in the following measure (for notes in the same octave) and, in the same measure, for notes in other octaves. Hence the naturals before the b and the c in the second measure of the upper staff:\"\n  },\n  {\n    \"label\": \"\\\\modern-cautionary\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is similar to modern, but the ‘extra’ accidentals (the ones not typeset by default) are typeset as cautionary accidentals. They are by default printed with parentheses, but they can also be printed in reduced size by defining the cautionary-style property of AccidentalSuggestion.\"\n  },\n  {\n    \"label\": \"\\\\modern-voice\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice, but they are canceled across voices in the same Staff. Hence, the a in the last measure is canceled because the previous cancellation was in a different voice, and the d in the lower staff is canceled because of the accidental in a different voice in the previous measure:\"\n  },\n  {\n    \"label\": \"\\\\modern-voice-cautionary\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\mp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"MultiMeasureRestText\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"Markups can be added to multi-measure rests. The predefined command \\\\fermataMarkup is provided for adding fermatas.\\n\\n    \\\\compressFullBarRests\\n    \\\\time 3/4\\n    R2.*10^\\\\markup { \\\\italic \\\"ad lib.\\\" }\\n    R2.^\\\\fermataMarkup\\n\\nNote: Markups attached to a multi-measure rest are objects of type MultiMeasureRestText, not TextScript. Overrides must be directed to the correct object, or they will be ignored. See the following example:\\n\\n\\n\\n    % This fails, as the wrong object name is specified\\n    \\\\override TextScript.padding = #5\\n    R1^\\\"wrong\\\"\\n    % This is the correct object name to be specified\\n    \\\\override MultiMeasureRestText.padding = #5\\n    R1^\\\"right\\\"\\n\\nWhen a multi-measure rest immediately follows a \\\\partial setting, resulting bar-check warnings may not be displayed.\"\n  },\n  {\n    \"label\": \"\\\\musicglyph\",\n    \"detail\": \"Rehearsal marks\",\n    \"documentation\": \"Music glyphs (such as the segno sign) may be printed inside a \\\\mark\\n\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.segno\\\" }\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.coda\\\" }\\n    c1 \\\\mark \\\\markup { \\\\musicglyph #\\\"scripts.ufermata\\\" }\\n    c1\\n\\nSee The Feta font, for a list of symbols which may be printed with \\\\musicglyph.\\n\\nFor common tweaks to the positioning of rehearsal marks, see Formatting text. For more precise control, see break-alignable-interface in Aligning objects.\\n\\nThe file ‘scm/translation-functions.scm’ contains the definitions of format-mark-numbers and format-mark-letters. They can be used as inspiration for other formatting functions.\"\n  },\n  {\n    \"label\": \"\\\\musicMap\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Apply proc to mus and all of the music it contains.\"\n  },\n  {\n    \"label\": \"\\\\name\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\neo-modern\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule reproduces a common practice in contemporary music: accidentals are printed like with modern, but they are printed again if the same note appears later in the same measure – except if the note is immediately repeated.\"\n  },\n  {\n    \"label\": \"\\\\neo-modern-cautionary\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is similar to neo-modern, but the extra accidentals are printed as cautionary accidentals.\"\n  },\n  {\n    \"label\": \"\\\\neo-modern-voice\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice as with neo-modern, but they are canceled across voices in the same Staff.\"\n  },\n  {\n    \"label\": \"\\\\neo-modern-voice-cautionary\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is similar to neo-modern-voice, but the extra accidentals are printed as cautionary accidentals.\"\n  },\n  {\n    \"label\": \"\\\\no-reset\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This is the same as default but with accidentals lasting ‘forever’ and not only within the same measure:\"\n  },\n  {\n    \"label\": \"\\\\noBeam\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"Individual notes may be marked with \\\\noBeam to prevent them from being beamed:\\n\\n    \\\\time 2/4\\n    c8 c\\\\noBeam c c\\n\\nGrace note beams and normal note beams can occur simultaneously. Unbeamed grace notes are not put into normal note beams.\\n\\n    c4 d8[\\n    \\\\grace { e32 d c d }\\n    e8] e[ e\\n    \\\\grace { f16 }\\n    e8 e]\"\n  },\n  {\n    \"label\": \"\\\\nonstaff-nonstaff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\nonstaff-relatedstaff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\nonstaff-unrelatedstaff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\noPageBreak\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Forbid a page break. May be used at toplevel (i.e., between scores or markups), or inside a score.\"\n  },\n  {\n    \"label\": \"\\\\noPageTurn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Forbid a page turn. May be used at toplevel (i.e., between scores or markups), or inside a score.\"\n  },\n  {\n    \"label\": \"\\\\normal-size-super\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\normalsize\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\normalsize\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"Note_heads_engraver\",\n    \"detail\": \"Automatic note splitting\",\n    \"documentation\": \"Long notes which overrun bar lines can be converted automatically to tied notes. This is done by replacing the Note_heads_engraver with the Completion_heads_engraver. Similarly, long rests which overrun bar lines are split automatically by replacing the Rest_engraver with the Completion_rest_engraver. In the following example, notes and rests crossing the bar lines are split, notes are also tied.\\n\\n    \\\\new Voice \\\\with {\\n      \\\\remove \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Completion_heads_engraver\\\"\\n      \\\\remove \\\"Rest_engraver\\\"\\n      \\\\consists \\\"Completion_rest_engraver\\\"\\n    }\\n    { c2. c8 d4 e f g a b c8 c2 b4 a g16 f4 e d c8. c2 r1*2 }\\n\\nThese engravers split all running notes and rests at the bar line, and inserts ties for notes. One of its uses is to debug complex scores: if the measures are not entirely filled, then the ties show exactly how much each measure is off.\"\n  },\n  {\n    \"label\": \"\\\\null\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\numericTimeSignature\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature symbol that is used in 2/2 and 4/4 time can be changed to a numeric style:\\n\\n    % Default style\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Change to numeric style\\n    \\\\numericTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n    % Revert to default style\\n    \\\\defaultTimeSignature\\n    \\\\time 4/4 c1\\n    \\\\time 2/2 c1\\n\\nMensural time signatures are covered in Mensural time signatures.\"\n  },\n  {\n    \"label\": \"\\\\octaveCheck\",\n    \"detail\": \"Octave checks\",\n    \"documentation\": \"In relative mode, it is easy to forget an octave changing mark. Octave checks make such errors easier to find by displaying a warning and correcting the octave if a note is found in an unexpected octave.\\n\\nTo check the octave of a note, specify the absolute octave after the = symbol. This example will generate a warning (and change the pitch) because the second note is the absolute octave d'' instead of d' as indicated by the octave correction.\\n\\n    \\\\relative c'' {\\n      c2 d='4 d\\n      e2 f\\n    }\\n\\nThe octave of notes may also be checked with the \\\\octaveCheck controlpitch command. controlpitch is specified in absolute mode. This checks that the interval between the previous note and the controlpitch is within a fourth (i.e., the normal calculation of relative mode). If this check fails, a warning is printed, but the previous note is not changed. Future notes are relative to the controlpitch.\\n\\n    \\\\relative c'' {\\n      c2 d\\n      \\\\octaveCheck c'\\n      e2 f\\n    }\\n\\nCompare the two bars below. The first and third \\\\octaveCheck checks fail, but the second one does not fail.\\n\\n    \\\\relative c'' {\\n      c4 f g f\\n      c4\\n      \\\\octaveCheck c'\\n      f\\n      \\\\octaveCheck c'\\n      g\\n      \\\\octaveCheck c'\\n      f\\n    }\"\n  },\n  {\n    \"label\": \"\\\\octaveCheck\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Octave check.\"\n  },\n  {\n    \"label\": \"\\\\offset\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Offset the default value of property of item by offsets. If item is a string, the result is \\\\override for the specified grob type. If item is a music expression, the result is the same music expression with an appropriate tweak applied.\"\n  },\n  {\n    \"label\": \"\\\\omit\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set item’s ‘stencil’ property to #f, effectively omitting it without taking up space.\\n\\nIf item is a symbol list of form GrobName or Context.GrobName, the result is an override for the grob name specified by it. If item is a music expression, the result is the same music expression with an appropriate tweak applied to it.\"\n  },\n  {\n    \"label\": \"\\\\once\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set once to #t on all layout instruction events in music. This will complain about music with an actual duration. As a special exception, if music contains ‘tweaks’ it will be silently ignored in order to allow for \\\\once \\\\tweak to work as both one-time override and proper tweak.\"\n  },\n  {\n    \"label\": \"\\\\oneVoice\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\ottava\",\n    \"detail\": \"Ottava brackets\",\n    \"documentation\": \"Ottava brackets introduce an extra transposition of an octave for the staff:\\n\\n    a2 b\\n    \\\\ottava #-2\\n    a2 b\\n    \\\\ottava #-1\\n    a2 b\\n    \\\\ottava #0\\n    a2 b\\n    \\\\ottava #1\\n    a2 b\\n    \\\\ottava #2\\n    a2 b\"\n  },\n  {\n    \"label\": \"\\\\ottava\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the octavation.\"\n  },\n  {\n    \"label\": \"\\\\outer-margin\",\n    \"detail\": \"\\\\paper variables for two-sided mode\",\n    \"documentation\": \"The margin all pages have at the outer side if they are part of a book. If the paper size is modified, this dimension’s default value is scaled accordingly. Works only with two-sided set to true.\"\n  },\n  {\n    \"label\": \"\\\\outside-staff-horizontal-padding\",\n    \"detail\": \"4.4.3 Vertical collision avoidance\",\n    \"documentation\": \"Intuitively, there are some objects in musical notation that belong to the staff and there are other objects that should be placed outside the staff. Objects belonging outside the staff include things such as rehearsal marks, text and dynamic markings (from now on, these will be called outside-staff objects). LilyPond’s rule for the vertical placement of outside-staff objects is to place them as close to the staff as possible but not so close that they collide with another object.\\n\\nLilyPond uses the outside-staff-priority property to determine whether a grob is an outside-staff object: if outside-staff-priority is a number, the grob is an outside-staff object. In addition, outside-staff-priority tells LilyPond in which order the objects should be placed.\\n\\nFirst, LilyPond places all the objects that do not belong outside the staff. Then it sorts the outside-staff objects according to their outside-staff-priority (in increasing order). One by one, LilyPond takes the outside-staff objects and places them so that they do not collide with any objects that have already been placed. That is, if two outside-staff grobs are competing for the same space, the one with the lower outside-staff-priority will be placed closer to the staff.\\n\\n    c4_\\\"Text\\\"\\\\pp\\n    r2.\\n    \\\\once \\\\override TextScript.outside-staff-priority = #1\\n    c4_\\\"Text\\\"\\\\pp % this time the text will be closer to the staff\\n    r2.\\n    % by setting outside-staff-priority to a non-number,\\n    % we disable the automatic collision avoidance\\n    \\\\once \\\\override TextScript.outside-staff-priority = ##f\\n    \\\\once \\\\override DynamicLineSpanner.outside-staff-priority = ##f\\n    c4_\\\"Text\\\"\\\\pp % now they will collide\\n\\nThe vertical padding around outside-staff objects can be controlled with outside-staff-padding.\\n\\n    \\\\once \\\\override TextScript.outside-staff-padding = #0\\n    a4-\\\"outside-staff-padding = #0\\\"\\n    \\\\once \\\\override TextScript.outside-staff-padding = #3\\n    d-\\\"outside-staff-padding = #3\\\"\\n    c-\\\"default outside-staff-padding\\\"\\n    b-\\\"default outside-staff-padding\\\"\\n    R1\\n\\nBy default, outside-staff objects are placed so they avoid a horizontal collision with previously-positioned grobs. This can lead to situations in which objects are placed close to each other horizontally. As shown in the example below, setting outside-staff-horizontal-padding increases the horizontal spacing required, and in this case moves the text up to prevent it from getting too close to the ledger lines.\\n\\n    c4^\\\"Word\\\" c c''2\\n    R1\\n    \\\\once \\\\override TextScript.outside-staff-horizontal-padding = #1\\n    c,,4^\\\"Word\\\" c c''2\"\n  },\n  {\n    \"label\": \"\\\\outside-staff-padding\",\n    \"detail\": \"4.4.3 Vertical collision avoidance\",\n    \"documentation\": \"Intuitively, there are some objects in musical notation that belong to the staff and there are other objects that should be placed outside the staff. Objects belonging outside the staff include things such as rehearsal marks, text and dynamic markings (from now on, these will be called outside-staff objects). LilyPond’s rule for the vertical placement of outside-staff objects is to place them as close to the staff as possible but not so close that they collide with another object.\\n\\nLilyPond uses the outside-staff-priority property to determine whether a grob is an outside-staff object: if outside-staff-priority is a number, the grob is an outside-staff object. In addition, outside-staff-priority tells LilyPond in which order the objects should be placed.\\n\\nFirst, LilyPond places all the objects that do not belong outside the staff. Then it sorts the outside-staff objects according to their outside-staff-priority (in increasing order). One by one, LilyPond takes the outside-staff objects and places them so that they do not collide with any objects that have already been placed. That is, if two outside-staff grobs are competing for the same space, the one with the lower outside-staff-priority will be placed closer to the staff.\\n\\n    c4_\\\"Text\\\"\\\\pp\\n    r2.\\n    \\\\once \\\\override TextScript.outside-staff-priority = #1\\n    c4_\\\"Text\\\"\\\\pp % this time the text will be closer to the staff\\n    r2.\\n    % by setting outside-staff-priority to a non-number,\\n    % we disable the automatic collision avoidance\\n    \\\\once \\\\override TextScript.outside-staff-priority = ##f\\n    \\\\once \\\\override DynamicLineSpanner.outside-staff-priority = ##f\\n    c4_\\\"Text\\\"\\\\pp % now they will collide\\n\\nThe vertical padding around outside-staff objects can be controlled with outside-staff-padding.\\n\\n    \\\\once \\\\override TextScript.outside-staff-padding = #0\\n    a4-\\\"outside-staff-padding = #0\\\"\\n    \\\\once \\\\override TextScript.outside-staff-padding = #3\\n    d-\\\"outside-staff-padding = #3\\\"\\n    c-\\\"default outside-staff-padding\\\"\\n    b-\\\"default outside-staff-padding\\\"\\n    R1\\n\\nBy default, outside-staff objects are placed so they avoid a horizontal collision with previously-positioned grobs. This can lead to situations in which objects are placed close to each other horizontally. As shown in the example below, setting outside-staff-horizontal-padding increases the horizontal spacing required, and in this case moves the text up to prevent it from getting too close to the ledger lines.\\n\\n    c4^\\\"Word\\\" c c''2\\n    R1\\n    \\\\once \\\\override TextScript.outside-staff-horizontal-padding = #1\\n    c,,4^\\\"Word\\\" c c''2\"\n  },\n  {\n    \"label\": \"\\\\outside-staff-priority\",\n    \"detail\": \"4.4.3 Vertical collision avoidance\",\n    \"documentation\": \"Intuitively, there are some objects in musical notation that belong to the staff and there are other objects that should be placed outside the staff. Objects belonging outside the staff include things such as rehearsal marks, text and dynamic markings (from now on, these will be called outside-staff objects). LilyPond’s rule for the vertical placement of outside-staff objects is to place them as close to the staff as possible but not so close that they collide with another object.\\n\\nLilyPond uses the outside-staff-priority property to determine whether a grob is an outside-staff object: if outside-staff-priority is a number, the grob is an outside-staff object. In addition, outside-staff-priority tells LilyPond in which order the objects should be placed.\\n\\nFirst, LilyPond places all the objects that do not belong outside the staff. Then it sorts the outside-staff objects according to their outside-staff-priority (in increasing order). One by one, LilyPond takes the outside-staff objects and places them so that they do not collide with any objects that have already been placed. That is, if two outside-staff grobs are competing for the same space, the one with the lower outside-staff-priority will be placed closer to the staff.\\n\\n    c4_\\\"Text\\\"\\\\pp\\n    r2.\\n    \\\\once \\\\override TextScript.outside-staff-priority = #1\\n    c4_\\\"Text\\\"\\\\pp % this time the text will be closer to the staff\\n    r2.\\n    % by setting outside-staff-priority to a non-number,\\n    % we disable the automatic collision avoidance\\n    \\\\once \\\\override TextScript.outside-staff-priority = ##f\\n    \\\\once \\\\override DynamicLineSpanner.outside-staff-priority = ##f\\n    c4_\\\"Text\\\"\\\\pp % now they will collide\\n\\nThe vertical padding around outside-staff objects can be controlled with outside-staff-padding.\\n\\n    \\\\once \\\\override TextScript.outside-staff-padding = #0\\n    a4-\\\"outside-staff-padding = #0\\\"\\n    \\\\once \\\\override TextScript.outside-staff-padding = #3\\n    d-\\\"outside-staff-padding = #3\\\"\\n    c-\\\"default outside-staff-padding\\\"\\n    b-\\\"default outside-staff-padding\\\"\\n    R1\\n\\nBy default, outside-staff objects are placed so they avoid a horizontal collision with previously-positioned grobs. This can lead to situations in which objects are placed close to each other horizontally. As shown in the example below, setting outside-staff-horizontal-padding increases the horizontal spacing required, and in this case moves the text up to prevent it from getting too close to the ledger lines.\\n\\n    c4^\\\"Word\\\" c c''2\\n    R1\\n    \\\\once \\\\override TextScript.outside-staff-horizontal-padding = #1\\n    c,,4^\\\"Word\\\" c c''2\"\n  },\n  {\n    \"label\": \"\\\\overrideProperty\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the grob property specified by grob-property-path to value. grob-property-path is a symbol list of the form Context.GrobName.property or GrobName.property, possibly with subproperties given as well.\"\n  },\n  {\n    \"label\": \"\\\\overrideTimeSignatureSettings\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Override timeSignatureSettings for time signatures of time-signature to have settings of base-moment, beat-structure, and beam-exceptions.\"\n  },\n  {\n    \"label\": \"\\\\p\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\pad-around\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-markup\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-to-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pad-x\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some commands may require an increase in the padding around the text; this is achieved with some markup commands exhaustively described in Align.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\box \\\"Charles Ives (1874 - 1954)\\\"\\n        \\\\null\\n        \\\\box \\\\pad-markup #2 \\\"THE UNANSWERED QUESTION\\\"\\n        \\\\box \\\\pad-x #8 \\\"A Cosmic Landscape\\\"\\n        \\\\null\\n      }\\n    }\\n    \\\\markup \\\\column {\\n      \\\\line {\\n        \\\\hspace #10\\n        \\\\box \\\\pad-to-box #'(-5 . 20) #'(0 . 5)\\n          \\\\bold \\\"Largo to Presto\\\"\\n      }\\n      \\\\pad-around #3\\n          \\\"String quartet keeps very even time,\\n    Flute quartet keeps very uneven time.\\\"\\n    }\"\n  },\n  {\n    \"label\": \"\\\\page-breaking\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"The page-breaking algorithm to use. Choices are ly:minimal-breaking, ly:page-turn-breaking, ly:one-line-breaking and ly:optimal-breaking (the default).\"\n  },\n  {\n    \"label\": \"\\\\page-breaking-system-system-spacing\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"Tricks the page breaker into thinking that system-system-spacing is set to something different than it really is. For example, if page-breaking-system-system-spacing #'padding is set to something substantially larger than system-system-spacing #'padding, then the page-breaker will put fewer systems on each page. Default: unset.\"\n  },\n  {\n    \"label\": \"\\\\page-count\",\n    \"detail\": \"\\\\paper variables for page breaking\",\n    \"documentation\": \"The number of pages to be used for a score, unset by default.\"\n  },\n  {\n    \"label\": \"\\\\page-spacing-weight\",\n    \"detail\": \"Miscellaneous \\\\paper variables\",\n    \"documentation\": \"The relative importance of page (vertical) spacing and line (horizontal) spacing. High values will make page spacing more important. Default: 10.\"\n  },\n  {\n    \"label\": \"\\\\pageBreak\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Force a page break. May be used at toplevel (i.e., between scores or markups), or inside a score.\"\n  },\n  {\n    \"label\": \"\\\\pageTurn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Force a page turn between two scores or top-level markups.\"\n  },\n  {\n    \"label\": \"\\\\palmMute\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print note with a triangle-shaped note head.\"\n  },\n  {\n    \"label\": \"\\\\palmMuteOn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the default note head style to a triangle-shaped style.\"\n  },\n  {\n    \"label\": \"\\\\paper-height\",\n    \"detail\": \"4.1.3 Fixed vertical spacing \\\\paper variables\",\n    \"documentation\": \"The height of the page, unset by default. Note that the automatic scaling of some vertical dimensions is not affected by this.\"\n  },\n  {\n    \"label\": \"\\\\paper-width\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"The width of the page, unset by default. While paper-width has no effect on the automatic scaling of some horizontal dimensions, it does influence the line-width variable. If both paper-width and line-width are set, then left-margin and right-margin will also be updated. Also see check-consistency.\"\n  },\n  {\n    \"label\": \"\\\\parallelMusic\",\n    \"detail\": \"Writing music in parallel\",\n    \"documentation\": \"Music for multiple parts can be interleaved in input code. The function \\\\parallelMusic accepts a list with the names of a number of variables to be created, and a musical expression. The content of alternate measures from the expression become the value of the respective variables, so you can use them afterwards to print the music.\\n\\nNote: Bar checks | must be used, and the measures must be of the same length.\\n\\n\\n\\n    \\\\parallelMusic #'(voiceA voiceB voiceC) {\\n      % Bar 1\\n      r8 g'16 c'' e'' g' c'' e'' r8 g'16 c'' e'' g' c'' e'' |\\n      r16 e'8.~   e'4            r16 e'8.~   e'4            |\\n      c'2                        c'2                        |\\n      % Bar 2\\n      r8 a'16 d'' f'' a' d'' f'' r8 a'16 d'' f'' a' d'' f'' |\\n      r16 d'8.~   d'4            r16 d'8.~   d'4            |\\n      c'2                        c'2                        |\\n    }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff << \\\\voiceA \\\\\\\\ \\\\voiceB >>\\n      \\\\new Staff { \\\\clef bass \\\\voiceC }\\n    >>\\n\\nRelative mode may be used. Note that the \\\\relative command is not used inside \\\\parallelMusic itself. The notes are relative to the preceding note in the voice, not to the previous note in the input – in other words, relative notes for voiceA ignore the notes in voiceB.\\n\\n    \\\\parallelMusic #'(voiceA voiceB voiceC) {\\n      % Bar 1\\n      r8 g16 c e g, c e r8 g,16 c e g, c e  |\\n      r16 e8.~ e4       r16 e8.~  e4        |\\n      c2                c                   |\\n      % Bar 2\\n      r8 a,16 d f a, d f r8 a,16 d f a, d f |\\n      r16 d8.~  d4       r16 d8.~  d4       |\\n      c2                 c                  |\\n     }\\n    \\\\new StaffGroup <<\\n      \\\\new Staff << \\\\relative c'' \\\\voiceA \\\\\\\\ \\\\relative c' \\\\voiceB >>\\n      \\\\new Staff \\\\relative c' { \\\\clef bass \\\\voiceC }\\n    >>\\n\\nThis works quite well for piano music. This example maps four consecutive measures to four variables:\\n\\n    global = {\\n      \\\\key g \\\\major\\n      \\\\time 2/4\\n    }\\n    \\\\parallelMusic #'(voiceA voiceB voiceC voiceD) {\\n      % Bar 1\\n      a8    b     c   d     |\\n      d4          e         |\\n      c16 d e fis d e fis g |\\n      a4          a         |\\n      % Bar 2\\n      e8      fis  g     a   |\\n      fis4         g         |\\n      e16 fis g  a fis g a b |\\n      a4           a         |\\n      % Bar 3 ...\\n    }\\n    \\\\score {\\n      \\\\new PianoStaff <<\\n         \\\\new Staff {\\n           \\\\global\\n           <<\\n             \\\\relative c'' \\\\voiceA\\n             \\\\\\\\\\n             \\\\relative c'  \\\\voiceB\\n           >>\\n         }\\n         \\\\new Staff {\\n           \\\\global \\\\clef bass\\n           <<\\n             \\\\relative c \\\\voiceC\\n             \\\\\\\\\\n             \\\\relative c \\\\voiceD\\n           >>\\n         }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\parallelMusic\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Define parallel music sequences, separated by ’|’ (bar check signs), and assign them to the identifiers provided in voice-ids.\\n\\nvoice-ids: a list of music identifiers (symbols containing only letters)\\n\\nmusic: a music sequence, containing BarChecks as limiting expressions.\\n\\nExample:\\n\\n  \\\\parallelMusic #'(A B C) {\\n    c c | d d | e e |\\n    d d | e e | f f |\\n  }\\n<==>\\n  A = { c c | d d | }\\n  B = { d d | e e | }\\n  C = { e e | f f | }\\n\"\n  },\n  {\n    \"label\": \"\\\\parenthesize\",\n    \"detail\": \"Parentheses\",\n    \"documentation\": \"Objects may be parenthesized by prefixing \\\\parenthesize to the music event. When prefixed to a chord, it parenthesizes every note. Individual notes inside a chord may also be parenthesized.\\n\\n    c2 \\\\parenthesize d\\n    c2 \\\\parenthesize <c e g>\\n    c2 <c \\\\parenthesize e g>\\n\\nNon-note objects may be parenthesized as well. For articulations, a hyphen is needed before the \\\\parenthesize command.\\n\\n    c2-\\\\parenthesize -. d\\n    c2 \\\\parenthesize r\"\n  },\n  {\n    \"label\": \"\\\\parenthesize\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Tag arg to be parenthesized.\"\n  },\n  {\n    \"label\": \"\\\\partcombine\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"Automatic part combining is used to merge two separate parts of music onto a single staff. This can be especially helpful when typesetting orchestral scores. A single Voice is printed while the two parts of music are the same, but in places where they differ, a second Voice is printed. Stem directions are set up & down accordingly while Solo and a due parts are also identified and marked appropriately.\\n\\nThe syntax for automatic part combining is:\\n\\n    \\\\partcombine musicexpr1 musicexpr2\\n\\nThe following example demonstrates the basic functionality, putting parts on a single staff as polyphony and setting stem directions accordingly. The same variables are used for the independent parts and the combined staff.\\n\\n    instrumentOne = \\\\relative c' {\\n      c4 d e f |\\n      R1 |\\n      d'4 c b a |\\n      b4 g2 f4 |\\n      e1 |\\n    }\\n    instrumentTwo = \\\\relative g' {\\n      R1 |\\n      g4 a b c |\\n      d4 c b a |\\n      g4 f( e) d |\\n      e1 |\\n    }\\n    <<\\n      \\\\new Staff \\\\instrumentOne\\n      \\\\new Staff \\\\instrumentTwo\\n      \\\\new Staff \\\\partcombine \\\\instrumentOne \\\\instrumentTwo\\n    >>\\n\\nBoth parts have identical notes in the third measure, so only one instance of the notes is printed. Stem, slur, and tie directions are set automatically, depending on whether the parts are playing solo or in unison. When needed in polyphony situations, the first part (with context called one) gets “up” stems, while the second (called two) always gets “down” stems. In solo situations, the first and second parts get marked with “Solo” and “Solo II”, respectively. The unison (a due) parts are marked with the text “a2”.\\n\\nBoth arguments to \\\\partcombine will be interpreted as separate Voice contexts, so if the music is being specified in relative mode then both parts must contain a \\\\relative function, i.e.,\\n\\n    \\\\partcombine\\n      \\\\relative … musicexpr1\\n      \\\\relative … musicexpr2\\n\\nA \\\\relative section that encloses a \\\\partcombine has no effect on the pitches of musicexpr1 or musicexpr2.\"\n  },\n  {\n    \"label\": \"\\\\partcombine\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Take the music in part1 and part2 and typeset so that they share a staff.\"\n  },\n  {\n    \"label\": \"\\\\partcombineApart\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineAutomatic\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineChords\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineDown\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Take the music in part1 and part2 and typeset so that they share a staff with stems directed downward.\"\n  },\n  {\n    \"label\": \"\\\\partcombineForce\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Override the part-combiner.\"\n  },\n  {\n    \"label\": \"\\\\partcombineSoloI\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineSoloII\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineUnisono\",\n    \"detail\": \"Automatic part combining\",\n    \"documentation\": \"In professional scores, voices are often kept apart from each other for long passages of music even if some of the notes are the same in both voices, and could just as easily be printed as unison. Combining notes into a chord, or showing one voice as solo is, therefore, not ideal as the \\\\partcombine function considers each note separately. In this case the \\\\partcombine function can be overriden with the following commands:\\n\\nCommands ending in …Once apply only to the next note in the music expression.\\n\\n - \\\\partcombineApart and \\\\partcombineApartOnce keep the notes as two separate voices, even if they can be combined into a chord or unison.\\n - \\\\partcombineChords and \\\\partcombineChordsOnce combine the notes into a chord.\\n - \\\\partcombineUnisono and \\\\partcombineUnisonoOnce combine both voices as “unison”.\\n - \\\\partcombineSoloI and \\\\partcombineSoloIOnce print only voice one, and mark it as a “Solo”.\\n - \\\\partcombineSoloII or \\\\partcombineSoloIIOnce print only voice two and mark it as a “Solo”.\\n - \\\\partcombineAutomatic and \\\\partcombineAutomaticOnce end the functions of the commands above, and revert back to the standard \\\\partcombine functionality.\\n\\n    instrumentOne = \\\\relative c' {\\n      \\\\partcombineApart c2^\\\"apart\\\" e |\\n      \\\\partcombineAutomatic e2^\\\"auto\\\" e |\\n      \\\\partcombineChords e'2^\\\"chord\\\" e |\\n      \\\\partcombineAutomatic c2^\\\"auto\\\" c |\\n      \\\\partcombineApart c2^\\\"apart\\\" \\\\partcombineChordsOnce e^\\\"chord once\\\" |\\n      c2 c |\\n    }\\n    instrumentTwo = \\\\relative c' {\\n      c2 c |\\n      e2 e |\\n      a,2 c |\\n      c2 c' |\\n      c2 c |\\n      c2 c |\\n    }\\n    <<\\n      \\\\new Staff { \\\\instrumentOne }\\n      \\\\new Staff { \\\\instrumentTwo }\\n      \\\\new Staff { \\\\partcombine \\\\instrumentOne \\\\instrumentTwo }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\partcombineUp\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Take the music in part1 and part2 and typeset so that they share a staff with stems directed upward.\"\n  },\n  {\n    \"label\": \"\\\\partial\",\n    \"detail\": \"Upbeats\",\n    \"documentation\": \"Partial or pick-up measures, such as an anacrusis or an upbeat, are entered using the \\\\partial command,\\n\\n    \\\\partial duration\\n\\nwhere duration is the remaining length of the partial measure before the start of the next full measure.\\n\\n    \\\\time 3/4\\n    \\\\partial 8\\n    e8 | a4 c8 b c4 |\\n\\nThe duration can be any value less than a full measure:\\n\\n    \\\\time 3/4\\n    \\\\partial 4.\\n    r4 e8 | a4 c8 b c4 |\\n\\n\\\\partial duration can also be written as:\\n\\n    \\\\set Timing.measurePosition -duration\\n\\nSo the first example above could be written:\\n\\n    \\\\time 3/4\\n    \\\\set Timing.measurePosition = #(ly:make-moment -1/8)\\n    e8 | a4 c8 b c4 |\\n\\nThe property measurePosition contains a rational number, which is usually positive and indicates how much of the measure has passed at this point. The \\\\partial duration command sets it to a negative number, when it has a different meaning: it then says that the current (first) bar will be preceded by a bar 0 (the partial bar) with a duration given by duration.\"\n  },\n  {\n    \"label\": \"\\\\partial\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make a partial measure.\"\n  },\n  {\n    \"label\": \"\\\\pedalSustainStyle\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"There are three styles of pedal indications: text, bracket, and mixed. The sustain pedal and the una corda pedal use the text style by default while the sostenuto pedal uses mixed by default.\\n\\n    c4\\\\sustainOn g c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'mixed\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'bracket\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\n    \\\\bar \\\"|.\\\"\\n\\nThe placement of the pedal commands matches the physical movement of the sustain pedal during piano performance. Pedalling to the final bar line is indicated by omitting the final pedal off command.\\n\\nPedal indications may be placed in a Dynamics context, which aligns them on a horizontal line.\"\n  },\n  {\n    \"label\": \"\\\\percent\",\n    \"detail\": \"Percent repeats\",\n    \"documentation\": \"Repeated short patterns are printed once, and the repeated pattern is replaced with a special sign.\\n\\nThe syntax is\\n\\n    \\\\repeat percent number musicexpr\\n\\nwhere musicexpr is a music expression.\\n\\nPatterns that are shorter than one measure are replaced by slashes.\\n\\n    \\\\repeat percent 4 { c128 d e f }\\n    \\\\repeat percent 4 { c64 d e f }\\n    \\\\repeat percent 5 { c32 d e f }\\n    \\\\repeat percent 4 { c16 d e f }\\n    \\\\repeat percent 4 { c8 d }\\n    \\\\repeat percent 4 { c4 }\\n    \\\\repeat percent 2 { c2 }\\n\\nPatterns of one or two measures are replaced by percent-like symbols.\\n\\n    \\\\repeat percent 2 { c4 d e f }\\n    \\\\repeat percent 2 { c2 d }\\n    \\\\repeat percent 2 { c1 }\\n\\n    \\\\repeat percent 3 { c4 d e f | c2 g' }\\n\\nPatterns that are shorter than one measure but contain mixed durations use a double-percent symbol.\\n\\n    \\\\repeat percent 4 { c8. <d f>16 }\\n    \\\\repeat percent 2 { \\\\tuplet 3/2 { r8 c d } e4 }\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDashed\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDashPattern\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Custom dash patterns for phrasing slurs can be defined:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashPattern #0.7 #0.75\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDashPattern #0.5 #2.0\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\\n\\nDash pattern definitions for phrasing slurs have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see the snippets under Slurs.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDashPattern\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set up a custom style of dash pattern for dash-fraction ratio of line to space repeated at dash-period interval for phrasing slurs.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDotted\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurDown\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurHalfDashed\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurHalfDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurHalfSolid\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurHalfSolid\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurHalfDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurHalfSolid\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurNeutral\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurSolid\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Phrasing slurs can be solid, dotted, or dashed. Solid is the default style for phrasing slurs:\\n\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurDashed\\n    g4\\\\( e c2\\\\)\\n    \\\\phrasingSlurDotted\\n    c4\\\\( e g2\\\\)\\n    \\\\phrasingSlurSolid\\n    g4\\\\( e c2\\\\)\"\n  },\n  {\n    \"label\": \"\\\\phrasingSlurUp\",\n    \"detail\": \"Phrasing slurs\",\n    \"documentation\": \"Typographically, a phrasing slur behaves almost exactly like a normal slur. However, they are treated as different objects; a \\\\slurUp will have no effect on a phrasing slur. Phrasing may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\phrygian\",\n    \"detail\": \"Key signature\",\n    \"documentation\": \"Here, mode should be \\\\major or \\\\minor to get a key signature of pitch-major or pitch-minor, respectively. You may also use the standard mode names, also called church modes: \\\\ionian, \\\\dorian, \\\\phrygian, \\\\lydian, \\\\mixolydian, \\\\aeolian, and \\\\locrian.\\n\\n    \\\\key g \\\\major\\n    fis1\\n    f\\n    fis\\n\\nAdditional modes can be defined, by listing the alterations for each scale step when the mode starts on C.\\n\\n    freygish = #`((0 . ,NATURAL) (1 . ,FLAT) (2 . ,NATURAL)\\n        (3 . ,NATURAL) (4 . ,NATURAL) (5 . ,FLAT) (6 . ,FLAT))\\n    \\\\relative c' {\\n      \\\\key c \\\\freygish c4 des e f\\n      \\\\bar \\\"||\\\" \\\\key d \\\\freygish d es fis g\\n    }\\n\\nAccidentals in the key signature may be printed in octaves other than their traditional positions, or in multiple octaves, by using the flat-positions and sharp-positions properties of KeySignature. Entries in these properties specify the range of staff-positions where accidentals will be printed. If a single position is specified in an entry, the accidentals are placed within the octave ending at that staff position.\\n\\n    \\\\override Staff.KeySignature.flat-positions = #'((-5 . 5))\\n    \\\\override Staff.KeyCancellation.flat-positions = #'((-5 . 5))\\n    \\\\clef bass \\\\key es \\\\major es g bes d\\n    \\\\clef treble \\\\bar \\\"||\\\" \\\\key es \\\\major es g bes d\\n    \\\\override Staff.KeySignature.sharp-positions = #'(2)\\n    \\\\bar \\\"||\\\" \\\\key b \\\\major b fis b2\"\n  },\n  {\n    \"label\": \"\\\\piano\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule reflects twentieth-century practice for piano notation. Its behavior is very similar to modern style, but here accidentals also get canceled across the staves in the same GrandStaff or PianoStaff, hence all the cancellations of the final notes.\\n\\nThis accidental style applies to the current GrandStaff or PianoStaff by default.\"\n  },\n  {\n    \"label\": \"\\\\piano-cautionary\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This is the same as piano but with the extra accidentals typeset as cautionaries.\"\n  },\n  {\n    \"label\": \"PianoStaff\",\n    \"detail\": \"References for keyboards\",\n    \"documentation\": \"Keyboard instruments are usually notated with Piano staves. These are two or more normal staves coupled with a brace. The same notation is also used for other keyed instruments. Organ music is normally written with two staves inside a PianoStaff group and third, normal staff for the pedals.\\n\\nThe staves in keyboard music are largely independent, but sometimes voices can cross between the two staves. This section discusses notation techniques particular to keyboard music.\\n\\nSeveral common issues in keyboard music are covered elsewhere:\\n\\n - Keyboard music usually contains multiple voices and the number of voices may change regularly; this is described in Collision resolution.\\n - Keyboard music can be written in parallel, as described in Writing music in parallel.\\n - Dynamics may be placed in a Dynamics context, between the two Staff contexts to align the dynamic marks on a horizontal line centered between the staves; see Dynamics.\\n - Fingerings are indicated with Fingering instructions.\\n - Organ pedal indications are inserted as articulations, see List of articulations.\\n - Vertical grid lines can be shown with Grid lines.\\n - Keyboard music often contains Laissez vibrer ties as well as ties on arpeggios and tremolos, described in Ties.\\n - Placing arpeggios across multiple voices and staves is covered in Arpeggio.\\n - Tremolo marks are described in Tremolo repeats.\\n - Several of the tweaks that can occur in keyboard music are demonstrated in Real music example.\\n - Hidden notes can be used to produce ties that cross voices, as shown in Other uses for tweaks.\"\n  },\n  {\n    \"label\": \"PianoStaff\",\n    \"detail\": \"Changing staff automatically\",\n    \"documentation\": \"Voices can be made to switch automatically between the top and the bottom staff. The syntax for this is\\n\\n    \\\\autochange …music…\\n\\nThis will create two staves inside the current staff group (usually a PianoStaff), called \\\"up\\\" and \\\"down\\\". The lower staff will be in the bass clef by default. The autochanger switches on the basis of the pitch (middle C is the turning point), and it looks ahead skipping over rests to switch in advance.\\n\\n    \\\\new PianoStaff {\\n      \\\\autochange {\\n        g4 a b c'\\n        d'4 r a g\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pitchedTrill\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Trills that require an auxiliary note with an explicit pitch can be typeset with the \\\\pitchedTrill command. The first argument is the main note, and the second is the trilled note, printed as a stemless note head in parentheses.\\n\\n    \\\\pitchedTrill\\n    d2\\\\startTrillSpan fis\\n    d2\\n    c2\\\\stopTrillSpan\\n    r2\"\n  },\n  {\n    \"label\": \"\\\\pitchedTrill\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print a trill with main-note as the main note of the trill and print secondary-note as a stemless note head in parentheses.\"\n  },\n  {\n    \"label\": \"Pitch_squash_engraver\",\n    \"detail\": \"Showing melody rhythms\",\n    \"documentation\": \"Guitar chord charts often show the strumming rhythms. This can be done with the Pitch_squash_engraver and \\\\improvisationOn.\\n\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 f g c\\n        }\\n      }\\n      \\\\new Voice \\\\with {\\n        \\\\consists \\\"Pitch_squash_engraver\\\"\\n      } \\\\relative c'' {\\n        \\\\improvisationOn\\n        c4 c8 c c4 c8 c\\n        f4 f8 f f4 f8 f\\n        g4 g8 g g4 g8 g\\n        c4 c8 c c4 c8 c\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\pointAndClickOff\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Suppress generating extra code in final-format (e.g. pdf) files to point back to the lilypond source statement.\"\n  },\n  {\n    \"label\": \"\\\\pointAndClickOn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Enable generation of code in final-format (e.g. pdf) files to reference the originating lilypond source statement; this is helpful when developing a score but generates bigger final-format files.\"\n  },\n  {\n    \"label\": \"\\\\pointAndClickTypes\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set a type or list of types (such as #'note-event) for which point-and-click info is generated.\"\n  },\n  {\n    \"label\": \"\\\\postscript\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Advanced graphic features include the ability to include external image files converted to the Encapsulated PostScript format (eps), or to directly embed graphics into the input file, using native PostScript code. In such a case, it may be useful to explicitly specify the size of the drawing, as demonstrated below:\\n\\n    c1^\\\\markup {\\n      \\\\combine\\n        \\\\epsfile #X #10 #\\\"./context-example.eps\\\"\\n        \\\\with-dimensions #'(0 . 6) #'(0 . 10)\\n        \\\\postscript #\\\"\\n          -2 3 translate\\n          2.7 2 scale\\n          newpath\\n          2 -1 moveto\\n          4 -2 4 1 1 arct\\n          4 2 3 3 1 arct\\n          0 4 0 3 1 arct\\n          0 0 1 -1 1 arct\\n          closepath\\n          stroke\\\"\\n      }\\n    c\\n\\nAn exhaustive list of graphics-specific commands can be found in Graphic.\"\n  },\n  {\n    \"label\": \"\\\\powerChords\",\n    \"detail\": \"Indicating power chords\",\n    \"documentation\": \"Power chords and their symbols can be engraved in chord mode or as chord constructs:\\n\\n    ChordsAndSymbols = {\\n      \\\\chordmode {\\n        \\\\powerChords\\n        e,,1:1.5\\n        a,,1:1.5.8\\n        \\\\set minimumFret = #8\\n        c,1:1.5\\n        f,1:1.5.8\\n      }\\n      \\\\set minimumFret = #5\\n      <a, e>1\\n      <g d' g'>1\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new ChordNames {\\n        \\\\ChordsAndSymbols\\n        }\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\ChordsAndSymbols\\n        }\\n        \\\\new TabStaff {\\n          \\\\ChordsAndSymbols\\n        }\\n      >>\\n    }\\n\\nPower chord symbols are automatically switched off as soon as one of the other common chord modifier is used:\\n\\n    mixedChords = \\\\chordmode {\\n      c,1\\n      \\\\powerChords\\n      b,,1:1.5\\n      fis,,1:1.5.8\\n      g,,1:m\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new ChordNames {\\n          \\\\mixedChords\\n        }\\n        \\\\new Staff {\\n          \\\\clef \\\"treble_8\\\"\\n          \\\\mixedChords\\n        }\\n        \\\\new TabStaff {\\n          \\\\mixedChords\\n        }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\pp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\pppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\ppppp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\predefinedFretboardsOff\",\n    \"detail\": \"Automatic fret diagrams\",\n    \"documentation\": \"As no predefined diagrams are loaded by default, automatic calculation of fret diagrams is the default behavior. Once default diagrams are loaded, automatic calculation can be enabled and disabled with predefined commands:\\n\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            <c e g c' e'>\\n                            #guitar-tuning\\n                            #\\\"x;3-1-(;5-2;5-3;5-4;3-1-1-);\\\"\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 c c\\n        }\\n      }\\n      \\\\new FretBoards {\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOff\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOn\\n        <c e g c' e'>1\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n      }\\n    >>\\n\\nSometimes the fretboard calculator will be unable to find an acceptable diagram. This can often be remedied by manually assigning a note to a string. In many cases, only one note need be manually placed on a string; the rest of the notes will then be placed appropriately by the FretBoards context.\"\n  },\n  {\n    \"label\": \"\\\\predefinedFretboardsOn\",\n    \"detail\": \"Automatic fret diagrams\",\n    \"documentation\": \"As no predefined diagrams are loaded by default, automatic calculation of fret diagrams is the default behavior. Once default diagrams are loaded, automatic calculation can be enabled and disabled with predefined commands:\\n\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            <c e g c' e'>\\n                            #guitar-tuning\\n                            #\\\"x;3-1-(;5-2;5-3;5-4;3-1-1-);\\\"\\n    <<\\n      \\\\new ChordNames {\\n        \\\\chordmode {\\n          c1 c c\\n        }\\n      }\\n      \\\\new FretBoards {\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOff\\n        <c e g c' e'>1\\n        \\\\predefinedFretboardsOn\\n        <c e g c' e'>1\\n      }\\n      \\\\new Staff {\\n        \\\\clef \\\"treble_8\\\"\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n        <c e g c' e'>1\\n      }\\n    >>\\n\\nSometimes the fretboard calculator will be unable to find an acceptable diagram. This can often be remedied by manually assigning a note to a string. In many cases, only one note need be manually placed on a string; the rest of the notes will then be placed appropriately by the FretBoards context.\"\n  },\n  {\n    \"label\": \"\\\\print-all-headers\",\n    \"detail\": \"Miscellaneous \\\\paper variables\",\n    \"documentation\": \"If set to true, this will print all headers for each \\\\score in the output. Normally only the piece and opus header variables are printed. Default: #f.\"\n  },\n  {\n    \"label\": \"\\\\print-first-page-number\",\n    \"detail\": \"\\\\paper variables for page numbering\",\n    \"documentation\": \"If set to true, a page number is printed on the first page.\"\n  },\n  {\n    \"label\": \"\\\\print-page-number\",\n    \"detail\": \"\\\\paper variables for page numbering\",\n    \"documentation\": \"If set to false, page numbers are not printed.\"\n  },\n  {\n    \"label\": \"\\\\pushToTag\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Add more to the front of elements of all music expressions in music that are tagged with tag.\"\n  },\n  {\n    \"label\": \"\\\\quotedCueEventTypes\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"By default quoted music will include all articulations, dynamics, markups, etc., in the quoted expression. It is possible to choose which of these objects from the quoted music are displayed by using the quotedEventTypes context property.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a2 g2 |\\n      b4\\\\<^\\\"quoted\\\" r8 ais a4\\\\f( c->)\\n     }\\n    oboeNotes = \\\\relative c'' {\\n      c2. b4 |\\n      \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\set Score.quotedEventTypes = #'(note-event articulation-event\\n                                         crescendo-event rest-event\\n                                         slur-event dynamic-event)\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n     }\\n\\nQuotes can also be tagged, see Using tags.\"\n  },\n  {\n    \"label\": \"\\\\quotedEventTypes\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"By default quoted music will include all articulations, dynamics, markups, etc., in the quoted expression. It is possible to choose which of these objects from the quoted music are displayed by using the quotedEventTypes context property.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a2 g2 |\\n      b4\\\\<^\\\"quoted\\\" r8 ais a4\\\\f( c->)\\n     }\\n    oboeNotes = \\\\relative c'' {\\n      c2. b4 |\\n      \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\set Score.quotedEventTypes = #'(note-event articulation-event\\n                                         crescendo-event rest-event\\n                                         slur-event dynamic-event)\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n     }\\n\\nQuotes can also be tagged, see Using tags.\"\n  },\n  {\n    \"label\": \"\\\\quoteDuring\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\quoteDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"The simplest way to format cue notes is to explicitly create a CueVoice context within the part.\\n\\nR1\\n<<\\n  { e2\\\\rest r4. e8 }\\n  \\\\new CueVoice {\\n    \\\\stemUp d'8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,4 r a r\\n\\n\\nThe \\\\cueClef command can also be used with an explict CueVoice context if a change of clef is required and will print an appropriately sized clef for the cue notes. The \\\\cueClefUnset command can then be used to switch back to the original clef, again with an appropriately sized clef.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n<<\\n  { e2\\\\rest r4. \\\\cueClefUnset e,8 }\\n  \\\\new CueVoice {\\n    \\\\cueClef \\\"treble\\\" \\\\stemUp d''8^\\\"flute\\\" c d e fis2\\n  }\\n>>\\nd,,4 r a r\\n\\n\\nThe \\\\cueClef and \\\\cueClefUnset command can also be used without a CueVoice if required.\\n\\n\\\\clef \\\"bass\\\"\\nR1\\n\\\\cueClef \\\"treble\\\"\\nd'8^\\\"flute\\\" c d e fis2\\n\\\\cueClefUnset\\nd,,4 r a r\\n\\n\\nFor more complex cue note placement, e.g including transposition, or inserting cue notes from multiple music sources the \\\\cueDuring or \\\\cueDuringWithClef commands can be used. These are more specialized form of \\\\quoteDuring, see Quoting other voices in the previous section.\\n\\nThe syntax is:\\n\\n    \\\\cueDuring #quotename #direction #music\\n\\nand\\n\\n    \\\\cueDuringWithClef #quotename #direction #clef #music\\n\\nThe music from the corresponding measures of the quote name is added as a CueVoice context and occurs simultaneously with the music, which then creates a polyphonic situation. The direction takes the argument UP or DOWN, and corresponds to the first and second voices respectively, determining how the cue notes are printed in relation to the other voice.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 | d8 c d e fis2 | g2 d |\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      g2 c,\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\oboeNotes\\n    }\\n\\nIt is possible to adjust which aspects of the music are quoted with \\\\cueDuring by setting the quotedCueEventTypes property. Its default value is '(note-event rest-event tie-event beam-event tuplet-span-event), which means that only notes, rests, ties, beams and tuplets are quoted, but not articulations, dynamic marks, markup etc.\\n\\nNote: When a Voice starts with cueDuring, as in the following example, the Voice context must be explicitly declared, or else the entire music expression would belong to the CueVoice context.\\n\\n\\n\\n    oboeNotes = \\\\relative c'' {\\n      r2 r8 d16(\\\\f f e g f a)\\n      g8 g16 g g2.\\n    }\\n    \\\\addQuote \\\"oboe\\\" { \\\\oboeNotes }\\n    \\\\new Voice \\\\relative c'' {\\n      \\\\set Score.quotedCueEventTypes = #'(note-event rest-event tie-event\\n                                          beam-event tuplet-span-event\\n                                          dynamic-event slur-event)\\n      \\\\cueDuring #\\\"oboe\\\" #UP { R1 }\\n      g2 c,\\n    }\\n\\nThe name of the instrument playing the cue can be printed by setting the instrumentCueName property in a temporary CueVoice context. The placement and style of the instrumentCueName is controlled by the InstrumentSwitch object, see Instrument names. If the cue notes require a change in clef, this can be done manually but the original clef should also be restored manually at the end of the cue notes.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\clef treble\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuring #\\\"flute\\\" #UP { R1 }\\n      \\\\clef bass\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\\n\\nAlternatively, the \\\\cueDuringWithClef function can be used instead. This command takes an extra argument to specify the change of clef that needs to be printed for the cue notes but will automatically print the original clef once the cue notes have finished.\\n\\n    fluteNotes = \\\\relative c'' {\\n      r2. c4 d8 c d e fis2 g2 d2\\n    }\\n    bassoonNotes = \\\\relative c {\\n      \\\\clef bass\\n      R1\\n      \\\\new CueVoice { \\\\set instrumentCueName = \\\"flute\\\" }\\n      \\\\cueDuringWithClef #\\\"flute\\\" #UP #\\\"treble\\\" { R1 }\\n      g4. b8 d2\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\new Staff {\\n      \\\\bassoonNotes\\n    }\"\n  },\n  {\n    \"label\": \"\\\\quoteDuring\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Indicate a section of music to be quoted. what indicates the name of the quoted voice, as specified in an \\\\addQuote command. main-music is used to indicate the length of music to be quoted; usually contains spacers or multi-measure rests.\"\n  },\n  {\n    \"label\": \"\\\\r\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"R\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"Rests for one or more full measures are entered like notes with the note name uppercase R:\\n\\n    % Rest measures contracted to single measure\\n    \\\\compressFullBarRests\\n    R1*4\\n    R1*24\\n    R1*4\\n    b2^\\\"Tutti\\\" b4 a4\\n\\nThe duration of full-measure rests is identical to the duration notation used for notes. The duration in a multi-measure rest must always be an integral number of measure-lengths, so augmentation dots or fractions must often be used:\\n\\n    \\\\compressFullBarRests\\n    \\\\time 2/4\\n    R1 | R2 |\\n    \\\\time 3/4\\n    R2. | R2.*2 |\\n    \\\\time 13/8\\n    R1*13/8 | R1*13/8*12 |\\n    \\\\time 10/8\\n    R4*5*4 |\\n\\nA full-measure rest is printed as either a whole or breve rest, centered in the measure, depending on the time signature.\\n\\n    \\\\time 4/4\\n    R1 |\\n    \\\\time 6/4\\n    R1*3/2 |\\n    \\\\time 8/4\\n    R1*2 |\"\n  },\n  {\n    \"label\": \"\\\\ragged-bottom\",\n    \"detail\": \"4.1.3 Fixed vertical spacing \\\\paper variables\",\n    \"documentation\": \"If this is set to true, systems will be set at their natural spacing, neither compressed nor stretched vertically to fit the page.\"\n  },\n  {\n    \"label\": \"\\\\ragged-last\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"If set to true, the last system in the score will not fill the line width. Instead the last system ends at its natural horizontal length. Default: #f. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\ragged-last\",\n    \"detail\": \"4.5.4 Line length\",\n    \"documentation\": \"The most basic settings influencing the spacing are indent and line-width. They are set in the \\\\layout block. They control the indentation of the first line of music, and the lengths of the lines.\\n\\nIf ragged-right is set to true in the \\\\layout block, then systems ends at their natural horizontal length, instead of being spread horizontally to fill the whole line. This is useful for short fragments, and for checking how tight the natural spacing is. The normal default setting is false, but if the score has only one system the default value is true.\"\n  },\n  {\n    \"label\": \"\\\\ragged-last-bottom\",\n    \"detail\": \"4.1.3 Fixed vertical spacing \\\\paper variables\",\n    \"documentation\": \"If this is set to false, then the last page, and the last page in each section created with a \\\\bookpart block, will be vertically justified in the same way as the earlier pages.\"\n  },\n  {\n    \"label\": \"\\\\ragged-right\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"If set to true, systems will not fill the line width. Instead, systems end at their natural horizontal length. Default: #t for scores with only one system, and #f for scores with two or more systems. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\ragged-right\",\n    \"detail\": \"4.5.4 Line length\",\n    \"documentation\": \"The most basic settings influencing the spacing are indent and line-width. They are set in the \\\\layout block. They control the indentation of the first line of music, and the lengths of the lines.\\n\\nIf ragged-right is set to true in the \\\\layout block, then systems ends at their natural horizontal length, instead of being spread horizontally to fill the whole line. This is useful for short fragments, and for checking how tight the natural spacing is. The normal default setting is false, but if the score has only one system the default value is true.\"\n  },\n  {\n    \"label\": \"\\\\raise\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Vertical alignment is a bit more complex. As stated above, markup objects can be moved as a whole; however, it is also possible to move specific elements inside a markup block. In this case, the element to be moved needs to be preceded with an anchor point, that can be another markup element or an invisible object. The following example demonstrates these two possibilities; the last markup in this example has no anchor point, and therefore is not moved.\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\raise #2 { Scène 1 }\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\lower #4 \\\\bold { Très modéré }\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\raise #4 \\\\italic { Une forêt. }\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\relative\",\n    \"detail\": \"Relative octave entry\",\n    \"documentation\": \"Absolute octave entry requires specifying the octave for every single note. Relative octave entry, in contrast, specifies each octave in relation to the last note: changing one note’s octave will affect all of the following notes.\\n\\nRelative note mode has to be entered explicitly using the \\\\relative command:\\n\\n    \\\\relative startpitch musicexpr\\n\\nIn relative mode, each note is assumed to be as close to the previous note as possible. This means that the octave of each pitch inside musicexpr is calculated as follows:\\n\\n - If no octave changing mark is used on a pitch, its octave is calculated so that the interval with the previous note is less than a fifth. This interval is determined without considering accidentals.\\n - An octave changing mark ' or , can be added to respectively raise or lower a pitch by an extra octave, relative to the pitch calculated without an octave mark.\\n - Multiple octave changing marks can be used. For example, '' and ,, will alter the pitch by two octaves.\\n - The pitch of the first note is relative to startpitch. startpitch is specified in absolute octave mode. Which choices are meaningful?\\nan octave of c\\nIdentifying middle C with c' is quite basic, so finding octaves of c tends to be straightforward. If your music starts with gis above c''', you’d write something like \\\\relative c''' { gis' … }\\n\\nan octave of the first note inside\\nWriting \\\\relative gis''' { gis … } makes it easy to determine the absolute pitch of the first note inside.\\n\\nno explicit starting pitch\\nThis (namely writing \\\\relative { gis''' … }) can be viewed as a compact version of the previous option: the first note inside is written in absolute pitch itself. This happens to be equivalent to choosing f as the reference pitch.\\n\\nThe documentation will usually employ the first option.\\n\\n\\n\\nHere is the relative mode shown in action:\\n\\n    \\\\relative c {\\n      \\\\clef bass\\n      c d e f\\n      g a b c\\n      d e f g\\n    }\\n\\nOctave changing marks are used for intervals greater than a fourth:\\n\\n    \\\\relative c'' {\\n      c g c f,\\n      c' a, e'' c\\n    }\\n\\nA note sequence without a single octave mark can nevertheless span large intervals:\\n\\n    \\\\relative c {\\n      c f b e\\n      a d g c\\n    }\\n\\nWhen \\\\relative blocks are nested, the innermost \\\\relative block applies.\\n\\n    \\\\relative c' {\\n      c d e f\\n      \\\\relative c'' {\\n        c d e f\\n      }\\n    }\\n\\n\\\\relative has no effect on \\\\chordmode blocks.\\n\\n    \\\\new Staff {\\n      \\\\relative c''' {\\n        \\\\chordmode { c1 }\\n      }\\n      \\\\chordmode { c1 }\\n    }\\n\\n\\\\relative is not allowed inside of \\\\chordmode blocks.\\n\\nMusic inside a \\\\transpose block is absolute unless a \\\\relative is included.\\n\\n    \\\\relative c' {\\n      d e\\n      \\\\transpose f g {\\n        d e\\n        \\\\relative c' {\\n          d e\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\relative\",\n    \"detail\": \"Changing staff automatically\",\n    \"documentation\": \"A \\\\relative section that is outside of \\\\autochange has no effect on the pitches of the music, so if necessary, put \\\\relative inside \\\\autochange.\\n\\nIf additional control is needed over the individual staves, they can be created manually with the names \\\"up\\\" and \\\"down\\\". The \\\\autochange command will then switch its voice between the existing staves.\\n\\nNote: If staves are created manually, they must be named \\\"up\\\" and \\\"down\\\".\\n\\n\\n\\nFor example, staves must be created manually in order to place a key signature in the lower staff:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"up\\\" {\\n        \\\\new Voice = \\\"melOne\\\" {\\n          \\\\key g \\\\major\\n          \\\\autochange \\\\relative c' {\\n            g8 b a c b d c e\\n            d8 r fis, g a2\\n          }\\n        }\\n      }\\n      \\\\new Staff = \\\"down\\\" {\\n        \\\\key g \\\\major\\n        \\\\clef bass\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\relative\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make music relative to pitch. If pitch is omitted, the first note in music is given in absolute pitch.\"\n  },\n  {\n    \"label\": \"\\\\removeWithTag\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Remove elements of music that are tagged with one of the tags in tag. tag may be either a single symbol or a list of symbols.\"\n  },\n  {\n    \"label\": \"\\\\repeatCommands\",\n    \"detail\": \"Manual repeat marks\",\n    \"documentation\": \"The property repeatCommands can be used to control the layout of repeats. Its value is a Scheme list of repeat commands.\\n\\nstart-repeat\\nPrint a .|: bar line.\\n\\nc1\\n\\\\set Score.repeatCommands = #'(start-repeat)\\nd4 e f g\\nc1\\n \\n\\nAs per standard engraving practice, repeat signs are not printed at the beginning of a piece.\\n\\nend-repeat\\nPrint a :|. bar line:\\n\\nc1\\nd4 e f g\\n\\\\set Score.repeatCommands = #'(end-repeat)\\nc1\\n \\n\\n(volta number) … (volta #f)\\nCreate a new volta with the specified number. The volta bracket must be explicitly terminated, or it will not be printed.\\n\\nf4 g a b\\n\\\\set Score.repeatCommands = #'((volta \\\"2\\\"))\\ng4 a g a\\n\\\\set Score.repeatCommands = #'((volta #f))\\nc1\\n \\n\\n\\n\\nMultiple repeat commands may occur at the same point:\\n\\n    f4 g a b\\n    \\\\set Score.repeatCommands = #'((volta \\\"2, 5\\\") end-repeat)\\n    g4 a g a\\n    c1\\n    \\\\set Score.repeatCommands = #'((volta #f) (volta \\\"95\\\") end-repeat)\\n    b1\\n    \\\\set Score.repeatCommands = #'((volta #f))\"\n  },\n  {\n    \"label\": \"\\\\repeatTie\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"When a second alternative of a repeat starts with a tied note, you have to specify the repeated tie as follows:\\n\\n    \\\\repeat volta 2 { c g <c e>2~ }\\n    \\\\alternative {\\n      % First alternative: following note is tied normally\\n      { <c e>2. r4 }\\n      % Second alternative: following note has a repeated tie\\n      { <c e>2\\\\repeatTie d4 c } }\"\n  },\n  {\n    \"label\": \"\\\\resetRelativeOctave\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the octave inside a \\\\relative section.\"\n  },\n  {\n    \"label\": \"\\\\rest\",\n    \"detail\": \"Rests\",\n    \"documentation\": \"Rests are entered like notes with the note name r. Durations longer than a whole rest use the following predefined commands:\\n\\n    \\\\new Staff {\\n      % These two lines are just to prettify this example\\n      \\\\time 16/1\\n      \\\\omit Staff.TimeSignature\\n      % Print a maxima rest, equal to four breves\\n      r\\\\maxima\\n      % Print a longa rest, equal to two breves\\n      r\\\\longa\\n      % Print a breve rest\\n      r\\\\breve\\n      r1 r2 r4 r8 r16 r32 r64 r128\\n    }\"\n  },\n  {\n    \"label\": \"\\\\restrainOpenStrings\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"By default pitches are assigned to the lowest playing position on the fret-board (first position). Open strings are automatically preferred. If you would like a certain pitch to be played on a specific string you can add a string number indication to the pitch name. If you don’t want to have string number indications appear in traditional notation, you can override the respective stencil. Usually it will be more comfortable to define the playing position by using the value of minimumFret. The default value for minimumFret is 0.\\n\\nEven when minimumFret is set, open strings are used whenever possible. This behaviour can be changed by setting restrainOpenStrings to #t.\\n\\n    \\\\layout { \\\\omit Voice.StringNumber }\\n    \\\\new StaffGroup <<\\n       \\\\new Staff \\\\relative c {\\n         \\\\clef \\\"treble_8\\\"\\n         \\\\time 2/4\\n         c16 d e f g4\\n         c,16\\\\5 d\\\\5 e\\\\4 f\\\\4 g4\\\\4\\n         c,16 d e f g4\\n       }\\n       \\\\new TabStaff \\\\relative c {\\n         c16 d e f g4\\n         c,16\\\\5 d\\\\5 e\\\\4 f\\\\4 g4\\\\4\\n         \\\\set TabStaff.minimumFret = #5\\n         \\\\set TabStaff.restrainOpenStrings = ##t\\n         c,16 d e f g4\\n       }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\retrograde\",\n    \"detail\": \"Retrograde\",\n    \"documentation\": \"A music expression can be reversed to produce its retrograde:\\n\\n    music = \\\\relative c' { c8. ees16( fis8. a16 b8.) gis16 f8. d16 }\\n    \\\\new Staff {\\n      \\\\music\\n      \\\\retrograde \\\\music\\n    }\"\n  },\n  {\n    \"label\": \"\\\\retrograde\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Return music in reverse order.\"\n  },\n  {\n    \"label\": \"\\\\revertTimeSignatureSettings\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Revert timeSignatureSettings for time signatures of time-signature.\"\n  },\n  {\n    \"label\": \"\\\\rfz\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\rgb-color\",\n    \"detail\": \"Coloring objects\",\n    \"documentation\": \"Exact RGB colors can be specified using the Scheme function rgb-color.\\n\\n    \\\\override Staff.StaffSymbol.color = #(x11-color 'SlateBlue2)\\n    \\\\set Staff.instrumentName = \\\\markup {\\n      \\\\with-color #(x11-color 'navy) \\\"Clarinet\\\"\\n    }\\n    \\\\override Stem.color = #(rgb-color 0 0 0)\\n    gis8 a\\n    \\\\override Stem.color = #(rgb-color 1 1 1)\\n    gis8 a\\n    \\\\override Stem.color = #(rgb-color 0 0 0.5)\\n    gis4 a\"\n  },\n  {\n    \"label\": \"RhythmicStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"\\\\right-align\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Markup objects may be aligned in different ways. By default, a text indication is aligned on its left edge: in the following example, there is no difference between the first and the second markup.\\n\\n    d1-\\\\markup { poco }\\n    f\\n    d-\\\\markup { \\\\left-align poco }\\n    f\\n    d-\\\\markup { \\\\center-align { poco } }\\n    f\\n    d-\\\\markup { \\\\right-align poco }\"\n  },\n  {\n    \"label\": \"\\\\right-margin\",\n    \"detail\": \"\\\\paper variables for widths and margins\",\n    \"documentation\": \"The margin between the right edge of the page and the end of the staff lines in non-ragged systems. If the paper size is modified, this dimension’s default value is scaled accordingly. If right-margin is unset, and both line-width and left-margin are set, then right-margin is set to (paper-width - line-width - left-margin). If only line-width is set, then both margins are set to ((paper-width - line-width) / 2), and the systems are consequently centered on the page. Also see check-consistency.\"\n  },\n  {\n    \"label\": \"\\\\rightHandFinger\",\n    \"detail\": \"Right-hand fingerings\",\n    \"documentation\": \"Right-hand fingerings p-i-m-a must be entered using \\\\rightHandFinger followed by a number.\\n\\nNote: If the number is entered in Scheme notation, remember to append a space before following it with a closing > or similar.\\n\\n\\n\\n    \\\\clef \\\"treble_8\\\"\\n    c4\\\\rightHandFinger #1\\n    e\\\\rightHandFinger #2\\n    g\\\\rightHandFinger #3\\n    c\\\\rightHandFinger #4\\n    <c,\\\\rightHandFinger #1 e\\\\rightHandFinger #2\\n     g\\\\rightHandFinger #3 c\\\\rightHandFinger #4 >1\\n\\nFor convenience, you can abbreviate \\\\rightHandFinger to something short, for example RH,\\n\\n    RH=#rightHandFinger\"\n  },\n  {\n    \"label\": \"\\\\rightHandFinger\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Apply finger as a fingering indication.\"\n  },\n  {\n    \"label\": \"\\\\rounded-box\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Some markup commands allow decoration of text elements with graphics, as demonstrated in the following example.\\n\\n    \\\\markup \\\\fill-line {\\n      \\\\center-column {\\n        \\\\circle Jack\\n        \\\\box \\\"in the box\\\"\\n        \\\\null\\n        \\\\line {\\n          Erik Satie\\n          \\\\hspace #3\\n          \\\\bracket \\\"1866 - 1925\\\"\\n        }\\n        \\\\null\\n        \\\\rounded-box \\\\bold Prelude\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\s\",\n    \"detail\": \"Invisible rests\",\n    \"documentation\": \"An invisible rest (also called a ‘spacer rest’) can be entered like a note with the note name s:\\n\\n    c4 c s c\\n    s2 c\"\n  },\n  {\n    \"label\": \"\\\\sacredHarpHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\sacredHarpHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\scaleDurations\",\n    \"detail\": \"Scaling durations\",\n    \"documentation\": \"Longer stretches of music may be compressed by a fraction in the same way, as if every note, chord or rest had the fraction as a multiplier. This leaves the appearance of the music unchanged but the internal duration of the notes will be multiplied by the fraction num/den. Here is an example showing how music can be compressed and expanded:\\n\\n    \\\\time 2/4\\n    % Normal durations\\n    <c a>4 c8 a\\n    % Scale music by *2/3\\n    \\\\scaleDurations 2/3 {\\n      <c a f>4. c8 a f\\n    }\\n    % Scale music by *2\\n    \\\\scaleDurations 2/1 {\\n      <c' a>4 c8 b\\n    }\\n\\nOne application of this command is in polymetric notation, see Polymetric notation.\"\n  },\n  {\n    \"label\": \"\\\\scaleDurations\",\n    \"detail\": \"Polymetric notation\",\n    \"documentation\": \"Polymetric notation is supported explicitly or by manually modifying the visible time signature symbol and/or scaling note durations.\"\n  },\n  {\n    \"label\": \"\\\\scaleDurations\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Multiply the duration of events in music by fraction.\"\n  },\n  {\n    \"label\": \"\\\\score-markup-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance between the last system of a score and the (title or top-level) markup that follows it.\"\n  },\n  {\n    \"label\": \"\\\\score-system-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance between the last system of a score and the first system of the score that follows it, when no (title or top-level) markup exists between them.\"\n  },\n  {\n    \"label\": \"\\\\scoreTitleMarkup\",\n    \"detail\": \"Custom layout for titles\",\n    \"documentation\": \"\\\\markup commands in the \\\\header block are useful for simple text formatting, but they do not allow precise control over the placement of titles. To customize the placement of the text fields, change either or both of the following \\\\paper variables:\\n\\n - bookTitleMarkup\\n - scoreTitleMarkup\\n\\nThe placement of titles when using the default values of these \\\\markup variables is shown in the examples in Default layout of bookpart and score titles.\\n\\nThe default settings for scoreTitleMarkup as defined in ‘ly/titling-init.ly’ are:\\n\\n    scoreTitleMarkup = \\\\markup { \\\\column {\\n      \\\\on-the-fly \\\\print-all-headers { \\\\bookTitleMarkup \\\\hspace #1 }\\n      \\\\fill-line {\\n        \\\\fromproperty #'header:piece\\n        \\\\fromproperty #'header:opus\\n      }\\n    }\\n    }\\n\\nThis places the piece and opus text fields at opposite ends of the same line:\\n\\n    \\\\score {\\n      { s1 }\\n      \\\\header {\\n        piece = \\\"PRAELUDIUM I\\\"\\n        opus = \\\"BWV 846\\\"\\n      }\\n    }\\n\\nThis example redefines scoreTitleMarkup so that the piece text field is centered and in a large, bold font.\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\fontsize #4 \\\\bold \\\\fromproperty #'header:piece\\n            \\\\fromproperty #'header:opus\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"PRAELUDIUM I\\\"\\n          opus = \\\"BWV 846\\\"\\n        }\\n      }\\n    }\\n\\nText fields not normally effective in score \\\\header blocks can be printed in the Score Title area if print-all-headers is placed inside the \\\\paper block. A disadvantage of using this method is that text fields that are intended specifically for the Bookpart Title area need to be manually suppressed in every \\\\score block. See Titles explained.\\n\\nTo avoid this, add the desired text field to the scoreTitleMarkup definition. In the following example, the composer text field (normally associated with bookTitleMarkup) is added to scoreTitleMarkup, allowing each score to list a different composer:\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\fontsize #4 \\\\bold \\\\fromproperty #'header:piece\\n            \\\\fromproperty #'header:composer\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"MENUET\\\"\\n          composer = \\\"Christian Petzold\\\"\\n        }\\n      }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"RONDEAU\\\"\\n          composer = \\\"François Couperin\\\"\\n        }\\n      }\\n    }\\n\\nIt is also possible to create your own custom text fields, and refer to them in the markup definition.\\n\\n    \\\\book {\\n      \\\\paper {\\n        indent = 0\\\\mm\\n        scoreTitleMarkup = \\\\markup {\\n          \\\\fill-line {\\n            \\\\null\\n            \\\\override #`(direction . ,UP) {\\n              \\\\dir-column {\\n                \\\\center-align \\\\fontsize #-1 \\\\bold\\n                  \\\\fromproperty #'header:mycustomtext %% User-defined field\\n                \\\\center-align \\\\fontsize #4 \\\\bold\\n                  \\\\fromproperty #'header:piece\\n              }\\n            }\\n            \\\\fromproperty #'header:opus\\n          }\\n        }\\n      }\\n      \\\\header { tagline = ##f }\\n      \\\\score {\\n        { s1 }\\n        \\\\header {\\n          piece = \\\"FUGA I\\\"\\n          mycustomtext = \\\"A 4 VOCI\\\" %% User-defined field\\n          opus = \\\"BWV 846\\\"\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\self-alignment-X\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\set\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\set-octavation\",\n    \"detail\": \"Ottava brackets\",\n    \"documentation\": \"Ottava brackets introduce an extra transposition of an octave for the staff:\\n\\n    a2 b\\n    \\\\ottava #-2\\n    a2 b\\n    \\\\ottava #-1\\n    a2 b\\n    \\\\ottava #0\\n    a2 b\\n    \\\\ottava #1\\n    a2 b\\n    \\\\ottava #2\\n    a2 b\"\n  },\n  {\n    \"label\": \"\\\\settingsFrom\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Take the layout instruction events from music, optionally restricted to those applying to context type ctx, and return a context modification duplicating their effect.\"\n  },\n  {\n    \"label\": \"\\\\sf\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\sff\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\sfz\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\shape\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Offset control-points of item by offsets. The argument is a list of number pairs or list of such lists. Each element of a pair represents an offset to one of the coordinates of a control-point. If item is a string, the result is \\\\once\\\\override for the specified grob type. If item is a music expression, the result is the same music expression with an appropriate tweak applied.\"\n  },\n  {\n    \"label\": \"\\\\shiftDurations\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Change the duration of arg by adding dur to the durlog of arg and dots to the dots of arg.\"\n  },\n  {\n    \"label\": \"\\\\shiftOff\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOnn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\shiftOnnn\",\n    \"detail\": \"Collision resolution\",\n    \"documentation\": \"The note heads of notes in different voices with the same pitch, same note head and opposite stem direction are automatically merged, but notes with different note heads or the same stem direction are not. Rests opposite a stem in a different voice are shifted vertically. The following example shows three different circumstances, on beats 1 and 3 in bar 1 and beat 1 in bar 2, where the automatic merging fails.\\n\\n    <<\\n      {\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nNotes with different note heads may be merged as shown below. In this example the note heads on beat 1 of bar 1 are now merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nQuarter and half notes are not merged in this way, since it would be difficult to tell them apart.\\n\\nNote heads with different dots as shown in beat 3 of bar 1 may be also be merged:\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe half note and eighth note at the start of the second measure are incorrectly merged because the automatic merge cannot successfully complete the merge when three or more notes line up in the same note column, and in this case the merged note head is incorrect. To allow the merge to select the correct note head a \\\\shift must be applied to the note that should not be merged. Here, \\\\shiftOn is applied to move the top g out of the column, and \\\\mergeDifferentlyHeadedOn then works properly.\\n\\n    <<\\n      {\\n        \\\\mergeDifferentlyHeadedOn\\n        \\\\mergeDifferentlyDottedOn\\n        c8 d e d c d c4\\n        \\\\shiftOn\\n        g'2 fis\\n      } \\\\\\\\ {\\n        c2 c8. b16 c4\\n        e,2 r\\n      } \\\\\\\\ {\\n        \\\\oneVoice\\n        s1\\n        e8 a b c d2\\n      }\\n    >>\\n\\nThe \\\\shiftOn command allows (but does not force) the notes in a voice to be shifted. When \\\\shiftOn is applied to a voice, a note or chord in that voice is shifted only if its stem would otherwise collide with a stem from another voice, and only if the colliding stems point in the same direction. The \\\\shiftOff command prevents this type of shifting from occurring.\\n\\nBy default, the outer voices (normally voices one and two) have \\\\shiftOff specified, while the inner voices (three and above) have \\\\shiftOn specified. When a shift is applied, voices with upstems (odd-numbered voices) are shifted to the right, and voices with downstems (even-numbered voices) are shifted to the left.\\n\\nHere is an example to help you visualize how an abbreviated polyphonic expression would be expanded internally.\\n\\nNote: Note that with three or more voices, the vertical order of voices in your input file should not be the same as the vertical order of voices on the staff!\\n\\n\\n\\n    \\\\new Staff \\\\relative c'' {\\n      %% abbreviated entry\\n      <<\\n        { f2  }  % 1: highest\\n        \\\\\\\\\\n        { g,2 }  % 2: lowest\\n        \\\\\\\\\\n        { d'2 }  % 3: upper middle\\n        \\\\\\\\\\n        { b2  }  % 4: lower middle\\n      >>\\n      %% internal expansion of the above\\n      <<\\n        \\\\new Voice = \\\"1\\\" { \\\\voiceOne   \\\\shiftOff f'2 }\\n        \\\\new Voice = \\\"2\\\" { \\\\voiceTwo   \\\\shiftOff g,2 }\\n        \\\\new Voice = \\\"3\\\" { \\\\voiceThree \\\\shiftOn  d'2 } % shifts right\\n        \\\\new Voice = \\\"4\\\" { \\\\voiceFour  \\\\shiftOn  b2  } % shifts left\\n      >>\\n    }\\n\\nTwo additional commands, \\\\shiftOnn and \\\\shiftOnnn provide further shift levels which may be specified temporarily to resolve collisions in complex situations – see Real music example.\\n\\nNotes are only merged if they have opposing stem directions (as they have, for example, in voices one and two by default or when the stems are explicitly set in opposite directions).\"\n  },\n  {\n    \"label\": \"\\\\short-indent\",\n    \"detail\": \"Instrument names\",\n    \"documentation\": \"However, if the instrument names are longer, the instrument names in a staff group may not be centered unless the indent and short-indent settings are increased. For details about these settings, see \\\\paper variables for shifts and indents.\\n\\n    \\\\relative c'' {\\n      <<\\n        \\\\new Staff \\\\with {\\n          instrumentName = #\\\"Alto Flute in G\\\"\\n          shortInstrumentName = #\\\"Flt.\\\"\\n        }\\n        {\\n          f2 g4 f \\\\break\\n          g4 f g2\\n        }\\n        \\\\new Staff \\\\with {\\n          instrumentName = #\\\"Clarinet\\\"\\n          shortInstrumentName = #\\\"Clar.\\\"\\n        }\\n        {\\n          c,4 b c2 \\\\break\\n          c2 b4 c\\n        }\\n      >>\\n    }\\n    \\\\layout {\\n      indent = 3.0\\\\cm\\n      short-indent = 1.5\\\\cm\\n    }\"\n  },\n  {\n    \"label\": \"\\\\short-indent\",\n    \"detail\": \"\\\\paper variables for shifts and indents\",\n    \"documentation\": \"The level of indentation for all systems in a score besides the first system. If the paper size is modified, this dimension’s default value is scaled accordingly. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\show-available-fonts\",\n    \"detail\": \"Single entry fonts\",\n    \"documentation\": \"The following command displays a list of all available fonts on the operating system:\\n\\n    lilypond -dshow-available-fonts x\"\n  },\n  {\n    \"label\": \"\\\\showFirstLength\",\n    \"detail\": \"3.4.2 Skipping corrected music\",\n    \"documentation\": \"When entering or copying music, usually only the music near the end (where you are adding notes) is interesting to view and correct. To speed up this correction process, it is possible to skip typesetting of all but the last few measures. This is achieved by putting\\n\\n    showLastLength = R1*5\\n    \\\\score { … }\\n\\nin your source file. This will render only the last 5 measures (assuming 4/4 time signature) of every \\\\score in the input file. For longer pieces, rendering only a small part is often an order of magnitude quicker than rendering it completely. When working on the beginning of a score you have already typeset (e.g. to add a new part), the showFirstLength property may be useful as well.\\n\\nSkipping parts of a score can be controlled in a more fine-grained fashion with the property Score.skipTypesetting. When it is set, no typesetting is performed at all.\\n\\nThis property is also used to control output to the MIDI file. Note that it skips all events, including tempo and instrument changes. You have been warned.\\n\\n    c8 d\\n    \\\\set Score.skipTypesetting = ##t\\n    e8 e e e e e e e\\n    \\\\set Score.skipTypesetting = ##f\\n    c8 d b bes a g c2\\n\\nIn polyphonic music, Score.skipTypesetting will affect all voices and staves, saving even more time.\"\n  },\n  {\n    \"label\": \"\\\\showKeySignature\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\showLastLength\",\n    \"detail\": \"3.4.2 Skipping corrected music\",\n    \"documentation\": \"When entering or copying music, usually only the music near the end (where you are adding notes) is interesting to view and correct. To speed up this correction process, it is possible to skip typesetting of all but the last few measures. This is achieved by putting\\n\\n    showLastLength = R1*5\\n    \\\\score { … }\\n\\nin your source file. This will render only the last 5 measures (assuming 4/4 time signature) of every \\\\score in the input file. For longer pieces, rendering only a small part is often an order of magnitude quicker than rendering it completely. When working on the beginning of a score you have already typeset (e.g. to add a new part), the showFirstLength property may be useful as well.\\n\\nSkipping parts of a score can be controlled in a more fine-grained fashion with the property Score.skipTypesetting. When it is set, no typesetting is performed at all.\\n\\nThis property is also used to control output to the MIDI file. Note that it skips all events, including tempo and instrument changes. You have been warned.\\n\\n    c8 d\\n    \\\\set Score.skipTypesetting = ##t\\n    e8 e e e e e e e\\n    \\\\set Score.skipTypesetting = ##f\\n    c8 d b bes a g c2\\n\\nIn polyphonic music, Score.skipTypesetting will affect all voices and staves, saving even more time.\"\n  },\n  {\n    \"label\": \"\\\\showStaffSwitch\",\n    \"detail\": \"Staff-change lines\",\n    \"documentation\": \"Whenever a voice switches to another staff, a line connecting the notes can be printed automatically:\\n\\n    \\\\new PianoStaff <<\\n      \\\\new Staff = \\\"one\\\" {\\n        \\\\showStaffSwitch\\n        c1\\n        \\\\change Staff = \\\"two\\\"\\n        b2 a\\n      }\\n      \\\\new Staff = \\\"two\\\" {\\n        \\\\clef bass\\n        s1*2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\single\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Convert overrides to tweaks and apply them to music. This does not convert \\\\revert, \\\\set or \\\\unset.\"\n  },\n  {\n    \"label\": \"\\\\skip\",\n    \"detail\": \"Invisible rests\",\n    \"documentation\": \"An invisible rest (also called a ‘spacer rest’) can be entered like a note with the note name s:\\n\\n    c4 c s c\\n    s2 c\"\n  },\n  {\n    \"label\": \"\\\\skip\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Skip forward by dur.\"\n  },\n  {\n    \"label\": \"\\\\skipTypesetting\",\n    \"detail\": \"3.4.2 Skipping corrected music\",\n    \"documentation\": \"When entering or copying music, usually only the music near the end (where you are adding notes) is interesting to view and correct. To speed up this correction process, it is possible to skip typesetting of all but the last few measures. This is achieved by putting\\n\\n    showLastLength = R1*5\\n    \\\\score { … }\\n\\nin your source file. This will render only the last 5 measures (assuming 4/4 time signature) of every \\\\score in the input file. For longer pieces, rendering only a small part is often an order of magnitude quicker than rendering it completely. When working on the beginning of a score you have already typeset (e.g. to add a new part), the showFirstLength property may be useful as well.\\n\\nSkipping parts of a score can be controlled in a more fine-grained fashion with the property Score.skipTypesetting. When it is set, no typesetting is performed at all.\\n\\nThis property is also used to control output to the MIDI file. Note that it skips all events, including tempo and instrument changes. You have been warned.\\n\\n    c8 d\\n    \\\\set Score.skipTypesetting = ##t\\n    e8 e e e e e e e\\n    \\\\set Score.skipTypesetting = ##f\\n    c8 d b bes a g c2\\n\\nIn polyphonic music, Score.skipTypesetting will affect all voices and staves, saving even more time.\"\n  },\n  {\n    \"label\": \"\\\\slashChordSeparator\",\n    \"detail\": \"Customizing chord names\",\n    \"documentation\": \"\"\n  },\n  {\n    \"label\": \"\\\\slashedGrace\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Create slashed graces (slashes through stems, but no slur) from the following music expression\"\n  },\n  {\n    \"label\": \"\\\\slurDashed\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDashPattern\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Custom dash patterns for slurs can be defined:\\n\\n    c4( e g2)\\n    \\\\slurDashPattern #0.7 #0.75\\n    g4( e c2)\\n    \\\\slurDashPattern #0.5 #2.0\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDashPattern\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set up a custom style of dash pattern for dash-fraction ratio of line to space repeated at dash-period interval for slurs.\"\n  },\n  {\n    \"label\": \"\\\\slurDotted\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurDown\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\slurHalfDashed\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4( e g2)\\n    \\\\slurHalfDashed\\n    g4( e c2)\\n    \\\\slurHalfSolid\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurHalfSolid\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can also be made half-dashed (the first half dashed, the second half solid) or half-solid (the first half solid, the second half dashed):\\n\\n    c4( e g2)\\n    \\\\slurHalfDashed\\n    g4( e c2)\\n    \\\\slurHalfSolid\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurNeutral\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs may be manually placed above or below the staff; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\slurSolid\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"Slurs can be solid, dotted, or dashed. Solid is the default slur style:\\n\\n    c4( e g2)\\n    \\\\slurDashed\\n    g4( e c2)\\n    \\\\slurDotted\\n    c4( e g2)\\n    \\\\slurSolid\\n    g4( e c2)\"\n  },\n  {\n    \"label\": \"\\\\slurUp\",\n    \"detail\": \"Slurs\",\n    \"documentation\": \"\\\\slurUp, \\\\slurDown, \\\\slurNeutral, \\\\slurDashed, \\\\slurDotted, \\\\slurHalfDashed, \\\\slurHalfSolid, \\\\slurDashPattern, \\\\slurSolid.\"\n  },\n  {\n    \"label\": \"\\\\small\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\small\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\smaller\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"The font size can be altered, relative to the global staff size, in a number of different ways\\n\\nIt can be set to predefined size,\\n\\n    b1_\\\\markup { \\\\huge Sinfonia }\\n    b1^\\\\markup { \\\\teeny da }\\n    b1-\\\\markup { \\\\normalsize camera }\\n\\nIt can be set relative to its previous value,\\n\\n    b1_\\\\markup { \\\\larger Sinfonia }\\n    b1^\\\\markup { \\\\smaller da }\\n    b1-\\\\markup { \\\\magnify #0.6  camera }\\n\\nIt can be increased or decreased relative to the value set by the global staff size,\\n\\n    b1_\\\\markup { \\\\fontsize #-2 Sinfonia }\\n    b1^\\\\markup { \\\\fontsize #1 da }\\n    b1-\\\\markup { \\\\fontsize #3 camera }\\n\\nIt can also be set to a fixed point-size, regardless of the global staff size,\\n\\n    b1_\\\\markup { \\\\abs-fontsize #20 Sinfonia }\\n    b1^\\\\markup { \\\\abs-fontsize #8 da }\\n    b1-\\\\markup { \\\\abs-fontsize #14 camera }\"\n  },\n  {\n    \"label\": \"\\\\smaller\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\sostenutoOff\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\sostenutoOn\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\southernHarmonyHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\southernHarmonyHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\sp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\spacing\",\n    \"detail\": \"4.5.1 Horizontal spacing overview\",\n    \"documentation\": \"Notes that are even shorter than the common shortest note are followed by a space that is proportional to their duration relative to the common shortest note. So if we were to add only a few 16th notes to the example above, they would be followed by half a NHW:\\n\\n    c2 c4. c8 | c4. c16[ c] c4. c8 | c8 c c4 c c\\n\\nIn the Essay on automated music engraving, it was explained that stem directions influence spacing (see Optical spacing). This is controlled with the stem-spacing-correction property in the NoteSpacing, object. These are generated for every Voice context. The StaffSpacing object (generated in Staff context) contains the same property for controlling the stem/bar line spacing. The following example shows these corrections, once with default settings, and once with exaggerated corrections:\\n\\nProportional notation is supported; see Proportional notation.\"\n  },\n  {\n    \"label\": \"\\\\spacingTweaks\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the system stretch, by reading the ’system-stretch property of the ‘parameters’ assoc list.\"\n  },\n  {\n    \"label\": \"Span_stem_engraver\",\n    \"detail\": \"Cross-staff stems\",\n    \"documentation\": \"Chords that cross staves may be produced using the Span_stem_engraver. Care must be taken to ensure that automatic beams do not beam the notes on one staff when it’s not required on the other.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\PianoStaff\\n        \\\\consists #Span_stem_engraver\\n      }\\n    }\\n    {\\n      \\\\new PianoStaff <<\\n        \\\\new Staff {\\n          <b d'>4 r d'16\\\\> e'8. g8 r\\\\!\\n          e'8 f' g'4 e'2\\n        }\\n        \\\\new Staff {\\n          \\\\clef bass\\n          \\\\voiceOne\\n          \\\\autoBeamOff\\n          \\\\crossStaff { <e g>4 e, g16 a8. c8} d\\n          \\\\autoBeamOn\\n          g8 f g4 c2\\n        }\\n      >>\\n    }\\n\\nFor the time being, this engraver can not be specified by its name in double quotes, but rather prefixing its name with a hash symbol #, due to the way it is implemented.\"\n  },\n  {\n    \"label\": \"\\\\spp\",\n    \"detail\": \"Dynamics\",\n    \"documentation\": \"Absolute dynamic marks are specified using a command after a note, such as c4\\\\ff. The available dynamic marks are \\\\ppppp, \\\\pppp, \\\\ppp, \\\\pp, \\\\p, \\\\mp, \\\\mf, \\\\f, \\\\ff, \\\\fff, \\\\ffff, \\\\fffff, \\\\fp, \\\\sf, \\\\sff, \\\\sp, \\\\spp, \\\\sfz, and \\\\rfz. Dynamic marks may be manually placed above or below the staff; see Direction and placement.\\n\\n    c2\\\\ppp c\\\\mp\\n    c2\\\\rfz c^\\\\mf\\n    c2_\\\\spp c^\\\\ff\"\n  },\n  {\n    \"label\": \"\\\\staff-affinity\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\staff-staff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"Staff.midiInstrument\",\n    \"detail\": \"3.5.2 MIDI Instruments\",\n    \"documentation\": \"The MIDI instrument to be used is specified by setting the Staff.midiInstrument property to the instrument name. The name should be chosen from the list in MIDI instruments.\\n\\n    \\\\new Staff {\\n      \\\\set Staff.midiInstrument = #\\\"glockenspiel\\\"\\n      …notes…\\n    }\\n\\n    \\\\new Staff \\\\with {midiInstrument = #\\\"cello\\\"} {\\n      …notes…\\n    }\\n\\nIf the selected instrument does not exactly match an instrument from the list of MIDI instruments, the Grand Piano (\\\"acoustic grand\\\") instrument is used.\"\n  },\n  {\n    \"label\": \"\\\\staffgroup-staff-spacing\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"Staff_symbol_engraver\",\n    \"detail\": \"Hiding staves\",\n    \"documentation\": \"Staff lines can be hidden by removing the Staff_symbol_engraver from the Staff context. As an alternative, \\\\stopStaff may be used.\\n\\n    \\\\new Staff \\\\with {\\n      \\\\remove \\\"Staff_symbol_engraver\\\"\\n    }\\n    \\\\relative c''' { a8 f e16 d c b a2 }\\n\\nEmpty staves can be hidden by setting the \\\\Staff \\\\RemoveEmptyStaves command in the \\\\layout block. In orchestral scores, this style is known as ‘Frenched Score’. By default, this command hides and removes all empty staves in a score except for those in the first system.\\n\\nNote: A staff is considered empty when it contains only multi-measure rests, rests, skips, spacer rests, or a combination of these elements.\\n\\n\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n      }\\n    }\\n    \\\\relative c' <<\\n      \\\\new Staff {\\n        e4 f g a \\\\break\\n        b1 \\\\break\\n        a4 b c2\\n      }\\n      \\\\new Staff {\\n        c,4 d e f \\\\break\\n        R1 \\\\break\\n        f4 g c,2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\start-repeat\",\n    \"detail\": \"Manual repeat marks\",\n    \"documentation\": \"The property repeatCommands can be used to control the layout of repeats. Its value is a Scheme list of repeat commands.\\n\\nstart-repeat\\nPrint a .|: bar line.\\n\\nc1\\n\\\\set Score.repeatCommands = #'(start-repeat)\\nd4 e f g\\nc1\\n \\n\\nAs per standard engraving practice, repeat signs are not printed at the beginning of a piece.\\n\\nend-repeat\\nPrint a :|. bar line:\\n\\nc1\\nd4 e f g\\n\\\\set Score.repeatCommands = #'(end-repeat)\\nc1\\n \\n\\n(volta number) … (volta #f)\\nCreate a new volta with the specified number. The volta bracket must be explicitly terminated, or it will not be printed.\\n\\nf4 g a b\\n\\\\set Score.repeatCommands = #'((volta \\\"2\\\"))\\ng4 a g a\\n\\\\set Score.repeatCommands = #'((volta #f))\\nc1\\n \\n\\n\\n\\nMultiple repeat commands may occur at the same point:\\n\\n    f4 g a b\\n    \\\\set Score.repeatCommands = #'((volta \\\"2, 5\\\") end-repeat)\\n    g4 a g a\\n    c1\\n    \\\\set Score.repeatCommands = #'((volta #f) (volta \\\"95\\\") end-repeat)\\n    b1\\n    \\\\set Score.repeatCommands = #'((volta #f))\"\n  },\n  {\n    \"label\": \"\\\\startGroup\",\n    \"detail\": \"Analysis brackets\",\n    \"documentation\": \"Brackets are used in musical analysis to indicate structure in musical pieces. Simple horizontal brackets are supported.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c2\\\\startGroup\\n      d\\\\stopGroup\\n    }\\n\\nAnalysis brackets may be nested.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c4\\\\startGroup\\\\startGroup\\n      d4\\\\stopGroup\\n      e4\\\\startGroup\\n      d4\\\\stopGroup\\\\stopGroup\\n    }\"\n  },\n  {\n    \"label\": \"\\\\startStaff\",\n    \"detail\": \"Staff symbol\",\n    \"documentation\": \"The \\\\stopStaff and \\\\startStaff commands can be used to stop or (re)start the staff lines respectively, from being printed at any point witin a score.\\n\\n    \\\\stopStaff f4 d \\\\startStaff g, e\\n    f'4 d \\\\stopStaff g, e\\n    f'4 d \\\\startStaff g, e\"\n  },\n  {\n    \"label\": \"\\\\startStaff\",\n    \"detail\": \"Ossia staves\",\n    \"documentation\": \"Ossia staves can be set by creating a new simultaneous staff in the appropriate location:\\n\\n    \\\\new Staff \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nHowever, the above example is not what is usually desired. To create ossia staves that are above the original staff, have no time signature or clef, and have a smaller font size, tweaks must be used. The Learning Manual describes a specific technique to achieve this goal, beginning with Nesting music expressions.\\n\\nThe following example uses the alignAboveContext property to align the ossia staff. This method is most appropriate when only a few ossia staves are needed.\\n\\n    \\\\new Staff = \\\"main\\\" \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff \\\\with {\\n          \\\\remove \\\"Time_signature_engraver\\\"\\n          alignAboveContext = #\\\"main\\\"\\n          fontSize = #-3\\n          \\\\override StaffSymbol.staff-space = #(magstep -3)\\n          \\\\override StaffSymbol.thickness = #(magstep -3)\\n          firstClef = ##f\\n        }\\n        { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nIf many isolated ossia staves are needed, creating an empty Staff context with a specific context id may be more appropriate; the ossia staves may then be created by calling this context and using \\\\startStaff and \\\\stopStaff at the desired locations. The benefits of this method are more apparent if the piece is longer than the following example.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      }\\n      { \\\\stopStaff s1*6 }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        <<\\n          { e4 f e2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff e4 g8 f e2 \\\\stopStaff\\n          }\\n        >>\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        <<\\n          { g4 a g2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff g4 e8 f g2 \\\\stopStaff\\n          }\\n        >>\\n        e4 d c2\\n      }\\n    >>\\n\\nUsing the \\\\Staff \\\\RemoveEmptyStaves command to create ossia staves may be used as an alternative. This method is most convenient when ossia staves occur immediately following a line break. For more information about \\\\Staff \\\\RemoveEmptyStaves, see Hiding staves.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      } \\\\relative c'' {\\n        R1*3\\n        c4 e8 d c2\\n      }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        e4 f e2\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        g4 a g2\\n        e4 d c2\\n      }\\n    >>\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n        \\\\override VerticalAxisGroup.remove-first = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\startTrillSpan\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"Stem\",\n    \"detail\": \"Cross-staff stems\",\n    \"documentation\": \"Chords that cross staves may be produced using the Span_stem_engraver. Care must be taken to ensure that automatic beams do not beam the notes on one staff when it’s not required on the other.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\PianoStaff\\n        \\\\consists #Span_stem_engraver\\n      }\\n    }\\n    {\\n      \\\\new PianoStaff <<\\n        \\\\new Staff {\\n          <b d'>4 r d'16\\\\> e'8. g8 r\\\\!\\n          e'8 f' g'4 e'2\\n        }\\n        \\\\new Staff {\\n          \\\\clef bass\\n          \\\\voiceOne\\n          \\\\autoBeamOff\\n          \\\\crossStaff { <e g>4 e, g16 a8. c8} d\\n          \\\\autoBeamOn\\n          g8 f g4 c2\\n        }\\n      >>\\n    }\\n\\nFor the time being, this engraver can not be specified by its name in double quotes, but rather prefixing its name with a hash symbol #, due to the way it is implemented.\"\n  },\n  {\n    \"label\": \"\\\\stem-spacing-correction\",\n    \"detail\": \"4.5.1 Horizontal spacing overview\",\n    \"documentation\": \"Notes that are even shorter than the common shortest note are followed by a space that is proportional to their duration relative to the common shortest note. So if we were to add only a few 16th notes to the example above, they would be followed by half a NHW:\\n\\n    c2 c4. c8 | c4. c16[ c] c4. c8 | c8 c c4 c c\\n\\nIn the Essay on automated music engraving, it was explained that stem directions influence spacing (see Optical spacing). This is controlled with the stem-spacing-correction property in the NoteSpacing, object. These are generated for every Voice context. The StaffSpacing object (generated in Staff context) contains the same property for controlling the stem/bar line spacing. The following example shows these corrections, once with default settings, and once with exaggerated corrections:\\n\\nProportional notation is supported; see Proportional notation.\"\n  },\n  {\n    \"label\": \"\\\\stemDown\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stemLeftBeamCount\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"Even more strict manual control with the beams can be achieved by setting the properties stemLeftBeamCount and stemRightBeamCount. They specify the number of beams to draw on the left and right side, respectively, of the next note. If either property is set, its value will be used only once, and then it is erased. In this example, the last f is printed with only one beam on the left side, i.e., the eighth-note beam of the group as a whole.\\n\\n    a8[ r16 f g a]\\n    a8[ r16\\n    \\\\set stemLeftBeamCount = #2\\n    \\\\set stemRightBeamCount = #1\\n    f16\\n    \\\\set stemLeftBeamCount = #1\\n    g16 a]\"\n  },\n  {\n    \"label\": \"\\\\stemNeutral\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stemRightBeamCount\",\n    \"detail\": \"Manual beams\",\n    \"documentation\": \"Even more strict manual control with the beams can be achieved by setting the properties stemLeftBeamCount and stemRightBeamCount. They specify the number of beams to draw on the left and right side, respectively, of the next note. If either property is set, its value will be used only once, and then it is erased. In this example, the last f is printed with only one beam on the left side, i.e., the eighth-note beam of the group as a whole.\\n\\n    a8[ r16 f g a]\\n    a8[ r16\\n    \\\\set stemLeftBeamCount = #2\\n    \\\\set stemRightBeamCount = #1\\n    f16\\n    \\\\set stemLeftBeamCount = #1\\n    g16 a]\"\n  },\n  {\n    \"label\": \"\\\\stemUp\",\n    \"detail\": \"Stems\",\n    \"documentation\": \"Whenever a note is found, a Stem object is created automatically. For whole notes and rests, they are also created but made invisible.\\n\\nStems may be manually placed to point up or down; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\stopGroup\",\n    \"detail\": \"Analysis brackets\",\n    \"documentation\": \"Brackets are used in musical analysis to indicate structure in musical pieces. Simple horizontal brackets are supported.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c2\\\\startGroup\\n      d\\\\stopGroup\\n    }\\n\\nAnalysis brackets may be nested.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        \\\\consists \\\"Horizontal_bracket_engraver\\\"\\n      }\\n    }\\n    \\\\relative c'' {\\n      c4\\\\startGroup\\\\startGroup\\n      d4\\\\stopGroup\\n      e4\\\\startGroup\\n      d4\\\\stopGroup\\\\stopGroup\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Staff symbol\",\n    \"documentation\": \"The \\\\stopStaff and \\\\startStaff commands can be used to stop or (re)start the staff lines respectively, from being printed at any point witin a score.\\n\\n    \\\\stopStaff f4 d \\\\startStaff g, e\\n    f'4 d \\\\stopStaff g, e\\n    f'4 d \\\\startStaff g, e\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Ossia staves\",\n    \"documentation\": \"Ossia staves can be set by creating a new simultaneous staff in the appropriate location:\\n\\n    \\\\new Staff \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nHowever, the above example is not what is usually desired. To create ossia staves that are above the original staff, have no time signature or clef, and have a smaller font size, tweaks must be used. The Learning Manual describes a specific technique to achieve this goal, beginning with Nesting music expressions.\\n\\nThe following example uses the alignAboveContext property to align the ossia staff. This method is most appropriate when only a few ossia staves are needed.\\n\\n    \\\\new Staff = \\\"main\\\" \\\\relative c'' {\\n      c4 b d c\\n      <<\\n        { c4 b d c }\\n        \\\\new Staff \\\\with {\\n          \\\\remove \\\"Time_signature_engraver\\\"\\n          alignAboveContext = #\\\"main\\\"\\n          fontSize = #-3\\n          \\\\override StaffSymbol.staff-space = #(magstep -3)\\n          \\\\override StaffSymbol.thickness = #(magstep -3)\\n          firstClef = ##f\\n        }\\n        { e4 d f e }\\n      >>\\n      c4 b c2\\n    }\\n\\nIf many isolated ossia staves are needed, creating an empty Staff context with a specific context id may be more appropriate; the ossia staves may then be created by calling this context and using \\\\startStaff and \\\\stopStaff at the desired locations. The benefits of this method are more apparent if the piece is longer than the following example.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      }\\n      { \\\\stopStaff s1*6 }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        <<\\n          { e4 f e2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff e4 g8 f e2 \\\\stopStaff\\n          }\\n        >>\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        <<\\n          { g4 a g2 }\\n          \\\\context Staff = \\\"ossia\\\" {\\n            \\\\startStaff g4 e8 f g2 \\\\stopStaff\\n          }\\n        >>\\n        e4 d c2\\n      }\\n    >>\\n\\nUsing the \\\\Staff \\\\RemoveEmptyStaves command to create ossia staves may be used as an alternative. This method is most convenient when ossia staves occur immediately following a line break. For more information about \\\\Staff \\\\RemoveEmptyStaves, see Hiding staves.\\n\\n    <<\\n      \\\\new Staff = \\\"ossia\\\" \\\\with {\\n        \\\\remove \\\"Time_signature_engraver\\\"\\n        \\\\hide Clef\\n        fontSize = #-3\\n        \\\\override StaffSymbol.staff-space = #(magstep -3)\\n        \\\\override StaffSymbol.thickness = #(magstep -3)\\n      } \\\\relative c'' {\\n        R1*3\\n        c4 e8 d c2\\n      }\\n      \\\\new Staff \\\\relative c' {\\n        c4 b c2\\n        e4 f e2\\n        g4 a g2 \\\\break\\n        c4 b c2\\n        g4 a g2\\n        e4 d c2\\n      }\\n    >>\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n        \\\\override VerticalAxisGroup.remove-first = ##t\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stopStaff\",\n    \"detail\": \"Hiding staves\",\n    \"documentation\": \"Staff lines can be hidden by removing the Staff_symbol_engraver from the Staff context. As an alternative, \\\\stopStaff may be used.\\n\\n    \\\\new Staff \\\\with {\\n      \\\\remove \\\"Staff_symbol_engraver\\\"\\n    }\\n    \\\\relative c''' { a8 f e16 d c b a2 }\\n\\nEmpty staves can be hidden by setting the \\\\Staff \\\\RemoveEmptyStaves command in the \\\\layout block. In orchestral scores, this style is known as ‘Frenched Score’. By default, this command hides and removes all empty staves in a score except for those in the first system.\\n\\nNote: A staff is considered empty when it contains only multi-measure rests, rests, skips, spacer rests, or a combination of these elements.\\n\\n\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff \\\\RemoveEmptyStaves\\n      }\\n    }\\n    \\\\relative c' <<\\n      \\\\new Staff {\\n        e4 f g a \\\\break\\n        b1 \\\\break\\n        a4 b c2\\n      }\\n      \\\\new Staff {\\n        c,4 d e f \\\\break\\n        R1 \\\\break\\n        f4 g c,2\\n      }\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\stopTrillSpan\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"\\\\storePredefinedDiagram\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"In addition to fret diagrams, LilyPond stores an internal list of chord shapes. The chord shapes are fret diagrams that can be shifted along the neck to different positions to provide different chords. Chord shapes can be added to the internal list and then used to define predefined fret diagrams. Because they can be moved to various positions on the neck, chord shapes will normally not contain any open strings. Like fret diagrams, chord shapes can be entered as either fret-diagram-terse strings or fret-diagram-verbose marking lists.\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    % Add a new chord shape\\n    \\\\addChordShape #'powerf #guitar-tuning #\\\"1-1;3-3;3-4;x;x;x;\\\"\\n    % add some new chords based on the power chord shape\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { f'' }\\n                            #guitar-tuning\\n                            #(chord-shape 'powerf guitar-tuning)\\n    \\\\storePredefinedDiagram #default-fret-table\\n                            \\\\chordmode { g'' }\\n                            #guitar-tuning\\n                            #(offset-fret 2 (chord-shape 'powerf guitar-tuning))\\n    mychords = \\\\chordmode{\\n      f1 f'' g g''\\n    }\\n    <<\\n      \\\\new ChordNames {\\n        \\\\mychords\\n      }\\n      \\\\new FretBoards {\\n        \\\\mychords\\n      }\\n    >>\\n\\nThe graphical layout of a fret diagram can be customized according to user preference through the properties of the fret-diagram-interface. Details are found at fret-diagram-interface. For a predefined fret diagram, the interface properties belong to FretBoards.FretBoard.\"\n  },\n  {\n    \"label\": \"\\\\storePredefinedDiagram\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Add predefined fret diagram defined by diagram-definition for the chord pitches chord and the stringTuning tuning.\"\n  },\n  {\n    \"label\": \"\\\\stringTuning\",\n    \"detail\": \"Custom tablatures\",\n    \"documentation\": \"Any desired string tuning can be created. The \\\\stringTuning function can be used to define a string tuning which can be used to set stringTunings for the current context.\\n\\nIts argument is a chord construct defining the pitches of each string in the tuning. The chord construct must be in absolute octave mode, see Absolute octave entry. The string with the highest number (generally the lowest string) must come first in the chord. For example, we can define a string tuning for a four-string instrument with pitches of a'', d'', g', and c':\\n\\n    mynotes = {\\n      c'4 e' g' c'' |\\n      e''4 g'' b'' c'''\\n    }\\n    <<\\n      \\\\new Staff {\\n        \\\\clef treble\\n        \\\\mynotes\\n      }\\n      \\\\new TabStaff {\\n        \\\\set Staff.stringTunings = \\\\stringTuning <c' g' d'' a''>\\n        \\\\mynotes\\n      }\\n    >>\\n\\nThe stringTunings property is also used by FretBoards to calculate automatic fret diagrams.\\n\\nString tunings are used as part of the hash key for predefined fret diagrams (see Predefined fret diagrams).\\n\\nThe previous example could also be written as follows:\\n\\n    custom-tuning = \\\\stringTuning <c' g' d'' a''>\\n    mynotes = {\\n      c'4 e' g' c'' |\\n      e''4 g'' b'' c'''\\n    }\\n    <<\\n      \\\\new Staff {\\n        \\\\clef treble\\n        \\\\mynotes\\n      }\\n      \\\\new TabStaff {\\n        \\\\set TabStaff.stringTunings = #custom-tuning\\n        \\\\mynotes\\n      }\\n    >>\\n\\nInternally, a string tuning is a Scheme list of string pitches, one for each string, ordered by string number from 1 to N, where string 1 is at the top of the tablature staff and string N is at the bottom. This ordinarily results in ordering from highest pitch to lowest pitch, but some instruments (e.g. ukulele) do not have strings ordered by pitch.\\n\\nA string pitch in a string tuning list is a LilyPond pitch object. Pitch objects are created with the Scheme function ly:make-pitch (see Scheme functions).\\n\\n\\\\stringTuning creates such an object from chord input.\\n\\nLilyPond automatically calculates the number of lines in the TabStaff and the number of strings in an automatically calculated FretBoard as the number of elements in stringTunings.\\n\\nTo let all TabStaff contexts use the same custom tuning by default, you can use\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\TabStaff\\n        stringTunings = \\\\stringTuning <c' g' d'' a''>\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\stringTuning\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Convert chord to a string tuning. chord must be in absolute pitches and should have the highest string number (generally the lowest pitch) first.\"\n  },\n  {\n    \"label\": \"\\\\stringTunings\",\n    \"detail\": \"Custom tablatures\",\n    \"documentation\": \"LilyPond tablature automatically calculates the fret for a note based on the string to which the note is assigned. In order to do this, the tuning of the strings must be specified. The tuning of the strings is given in the stringTunings property.\\n\\nLilyPond comes with predefined string tunings for banjo, mandolin, guitar, bass guitar, ukulele, violin, viola, cello, and double bass. LilyPond automatically sets the correct transposition for predefined tunings. The following example is for bass guitar, which sounds an octave lower than written.\\n\\n    <<\\n      \\\\new Voice \\\\with {\\n        \\\\omit StringNumber\\n      } {\\n        \\\\clef \\\"bass_8\\\"\\n        \\\\relative c, {\\n          c4 d e f\\n        }\\n      }\\n      \\\\new TabStaff \\\\with {\\n        stringTunings = #bass-tuning\\n      } {\\n        \\\\relative c, {\\n          c4 d e f\\n        }\\n      }\\n    >>\\n\\nThe default string tuning is guitar-tuning, which is the standard EADGBE tuning. Some other predefined tunings are guitar-open-g-tuning, mandolin-tuning and banjo-open-g-tuning. The predefined string tunings are found in ‘ly/string-tunings-init.ly’.\"\n  },\n  {\n    \"label\": \"\\\\stringTunings\",\n    \"detail\": \"Predefined fret diagrams\",\n    \"documentation\": \"Fret diagrams can be displayed using the FretBoards context. By default, the FretBoards context will display fret diagrams that are stored in a lookup table:\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    \\\\new FretBoards {\\n      \\\\chordmode {\\n        c1 d\\n      }\\n    }\\n\\nThe default predefined fret diagrams are contained in the file ‘predefined-guitar-fretboards.ly’. Fret diagrams are stored based on the pitches of a chord and the value of stringTunings that is currently in use. ‘predefined-guitar-fretboards.ly’ contains predefined fret diagrams only for guitar-tuning. Predefined fret diagrams can be added for other instruments or other tunings by following the examples found in ‘predefined-guitar-fretboards.ly’.\\n\\nFret diagrams for the ukulele are contained in the file \\n‘predefined-ukulele-fretboards.ly’.\\n\\n    \\\\include \\\"predefined-ukulele-fretboards.ly\\\"\\n    myChords = \\\\chordmode { a1 a:m a:aug }\\n    \\\\new ChordNames {\\n      \\\\myChords\\n    }\\n    \\\\new FretBoards {\\n      \\\\set Staff.stringTunings = #ukulele-tuning\\n      \\\\myChords\\n    }\\n\\nFret diagrams for the mandolin are contained in the file \\n‘predefined-mandolin-fretboards.ly’.\\n\\n    \\\\include \\\"predefined-mandolin-fretboards.ly\\\"\\n    myChords = \\\\chordmode { c1 c:m7.5- c:aug }\\n    \\\\new ChordNames {\\n      \\\\myChords\\n    }\\n    \\\\new FretBoards {\\n      \\\\set Staff.stringTunings = #mandolin-tuning\\n      \\\\myChords\\n    }\\n\\nChord pitches can be entered either as simultaneous music or using chord mode (see Chord mode overview).\\n\\n    \\\\include \\\"predefined-guitar-fretboards.ly\\\"\\n    \\\\new FretBoards {\\n      \\\\chordmode { c1 }\\n      <c' e' g'>1\\n    }\"\n  },\n  {\n    \"label\": \"\\\\styledNoteHeads\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set heads in music to style.\"\n  },\n  {\n    \"label\": \"\\\\sub\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\suggestAccidentals\",\n    \"detail\": \"Annotational accidentals (musica ficta)\",\n    \"documentation\": \"This will treat every subsequent accidental as musica ficta until it is unset with \\\\set suggestAccidentals = ##f. A more practical way is to use \\\\once \\\\set suggestAccidentals = ##t, which can even be defined as a convenient shorthand:\\n\\n    ficta = { \\\\once \\\\set suggestAccidentals = ##t }\\n    \\\\score { \\\\relative c''\\n      \\\\new MensuralVoice  {\\n        \\\\once \\\\set suggestAccidentals = ##t\\n        bes4 a2 g2 \\\\ficta fis8 \\\\ficta e! fis2 g1\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\super\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Text may be printed as subscript or superscript. By default these are printed in a smaller size, but a normal size can be used as well:\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line { 1 \\\\super st movement }\\n        \\\\line { 1 \\\\normal-size-super st movement\\n          \\\\sub { (part two) }  }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\sus\",\n    \"detail\": \"Extended and altered chords\",\n    \"documentation\": \"The modifier sus can be added to the modifier string to create suspended chords. This removes the 3rd step from the chord. Append either 2 or 4 to add the 2nd or 4th step to the chord. sus is equivalent to ^3; sus4 is equivalent to .4^3.\\n\\n    \\\\chordmode {\\n      c1:sus c:sus2 c:sus4 c:5.4^3\\n    }\"\n  },\n  {\n    \"label\": \"\\\\sustainOff\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\sustainOn\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\system-count\",\n    \"detail\": \"\\\\paper variables for line breaking\",\n    \"documentation\": \"The number of systems to be used for a score. Default: unset. This variable can also be set in a \\\\layout block.\"\n  },\n  {\n    \"label\": \"\\\\system-separator-markup\",\n    \"detail\": \"Miscellaneous \\\\paper variables\",\n    \"documentation\": \"A markup object that is inserted between systems, often used for orchestral scores. Default: unset. The \\\\slashSeparator markup, defined in ‘ly/titling-init.ly’, is provided as a sensible default, for example:\\n\\n    #(set-default-paper-size \\\"a8\\\")\\n    \\\\book {\\n      \\\\paper {\\n        system-separator-markup = \\\\slashSeparator\\n      }\\n      \\\\header {\\n        tagline = ##f\\n      }\\n      \\\\score {\\n        \\\\relative c'' { c1 \\\\break c1 \\\\break c1 }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\system-system-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance between two systems in the same score.\"\n  },\n  {\n    \"label\": \"\\\\systems-per-page\",\n    \"detail\": \"\\\\paper variables for line breaking\",\n    \"documentation\": \"The number of systems that should be placed on each page. This is currently supported only by the ly:optimal-breaking algorithm. Default: unset.\"\n  },\n  {\n    \"label\": \"\\\\tabChordRepeats\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Walk through music putting the notes, fingerings and string numbers of the previous chord into repeat chords, as well as an optional list of event-types such as #'(articulation-event).\"\n  },\n  {\n    \"label\": \"\\\\tabChordRepetition\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Include the string and fingering information in a chord repetition. This function is deprecated; try using \\\\tabChordRepeats instead.\"\n  },\n  {\n    \"label\": \"TabStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"TabStaff\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Music for plucked string instruments is frequently notated using a finger/touch notation or tablature. In contrast to traditional notation pitches are not denoted with note heads, but by numbers (or letter-like symbols in historical intavolatura). The staff lines in tablature indicate the string on which the note is to be played, and a number placed on a staff line indicated the fret at which the corresponding string is to be pressed. Notes that are to be played simultaneously are vertically aligned.\\n\\nBy default, string 1 is the highest string, and corresponds to the top line on the TabStaff. The tuning of the TabStaff strings defaults to the standard guitar tuning (with 6 strings). The notes are printed as tablature, by using TabStaff and TabVoice contexts. A calligraphic tablature clef is added automatically.\\n\\n    \\\\new TabStaff \\\\relative c' {\\n      a,8 a' <c e> a\\n      d,8 a' <d f> a\\n    }\\n\\nDefault tablatures do not contain any symbols for tone duration nor any other musical symbols such as e.g. expressive marks.\\n\\n    symbols = {\\n      \\\\time 3/4\\n      c4-.^\\\"Allegro\\\" d( e)\\n      f4-.\\\\f g a^\\\\fermata\\n      \\\\mark \\\\default\\n      c8_.\\\\<\\\\( c16 c~ c2\\\\!\\n      c'2.\\\\prall\\\\)\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff { \\\\clef \\\"G_8\\\" \\\\symbols }\\n        \\\\new TabStaff { \\\\symbols }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"TabVoice\",\n    \"detail\": \"Default tablatures\",\n    \"documentation\": \"Music for plucked string instruments is frequently notated using a finger/touch notation or tablature. In contrast to traditional notation pitches are not denoted with note heads, but by numbers (or letter-like symbols in historical intavolatura). The staff lines in tablature indicate the string on which the note is to be played, and a number placed on a staff line indicated the fret at which the corresponding string is to be pressed. Notes that are to be played simultaneously are vertically aligned.\\n\\nBy default, string 1 is the highest string, and corresponds to the top line on the TabStaff. The tuning of the TabStaff strings defaults to the standard guitar tuning (with 6 strings). The notes are printed as tablature, by using TabStaff and TabVoice contexts. A calligraphic tablature clef is added automatically.\\n\\n    \\\\new TabStaff \\\\relative c' {\\n      a,8 a' <c e> a\\n      d,8 a' <d f> a\\n    }\\n\\nDefault tablatures do not contain any symbols for tone duration nor any other musical symbols such as e.g. expressive marks.\\n\\n    symbols = {\\n      \\\\time 3/4\\n      c4-.^\\\"Allegro\\\" d( e)\\n      f4-.\\\\f g a^\\\\fermata\\n      \\\\mark \\\\default\\n      c8_.\\\\<\\\\( c16 c~ c2\\\\!\\n      c'2.\\\\prall\\\\)\\n    }\\n    \\\\score {\\n      <<\\n        \\\\new Staff { \\\\clef \\\"G_8\\\" \\\\symbols }\\n        \\\\new TabStaff { \\\\symbols }\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tag\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Tag the following music with tag and return the result, by adding the single symbol or symbol list tag to the tags property of music.\"\n  },\n  {\n    \"label\": \"\\\\taor\",\n    \"detail\": \"Bagpipe definitions\",\n    \"documentation\": \"LilyPond contains special definitions for Scottish, Highland Bagpipe music; to use them, add\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n\\nto the top of your input file. This lets you add the special grace notes common to bagpipe music with short commands. For example, you could write \\\\taor instead of\\n\\n    \\\\grace { \\\\small G32[ d G e] }\\n\\n‘bagpipe.ly’ also contains pitch definitions for the bagpipe notes in the appropriate octaves, so you do not need to worry about \\\\relative or \\\\transpose.\\n\\n    \\\\include \\\"bagpipe.ly\\\"\\n    { \\\\grg G4 \\\\grg a \\\\grg b \\\\grg c \\\\grg d \\\\grg e \\\\grg f \\\\grA g A }\\n\\nBagpipe music nominally uses the key of D Major (even though that isn’t really true). However, since that is the only key that can be used, the key signature is normally not written out. To set this up correctly, always start your music with \\\\hideKeySignature. If you for some reason want to show the key signature, you can use \\\\showKeySignature instead.\\n\\nSome modern music use cross fingering on c and f to flatten those notes. This can be indicated by cflat or fflat. Similarly, the piobaireachd high g can be written gflat when it occurs in light music.\"\n  },\n  {\n    \"label\": \"\\\\teaching\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"This rule is intended for students, and makes it easy to create scale sheets with automatically created cautionary accidentals. Accidentals are printed like with modern, but cautionary accidentals are added for all sharp or flat tones specified by the key signature, except if the note is immediately repeated.\"\n  },\n  {\n    \"label\": \"\\\\teeny\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\teeny\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\tempo\",\n    \"detail\": \"Metronome marks\",\n    \"documentation\": \"A basic metronome mark is simple to write:\\n\\n    \\\\tempo 4 = 120\\n    c2 d\\n    e4. d8 c2\\n\\nMetronome marks may also be printed as a range of two numbers:\\n\\n    \\\\tempo 4 = 40 - 46\\n    c4. e8 a4 g\\n    b,2 d4 r\\n\\nTempo indications with text can be used instead:\\n\\n    \\\\tempo \\\"Allegretto\\\"\\n    c4 e d c\\n    b4. a16 b c4 r4\\n\\nCombining a metronome mark and text will automatically place the metronome mark within parentheses:\\n\\n    \\\\tempo \\\"Allegro\\\" 4 = 160\\n    g4 c d e\\n    d4 b g2\\n\\nIn general, the text can be any markup object:\\n\\n    \\\\tempo \\\\markup { \\\\italic Faster } 4 = 132\\n    a8-. r8 b-. r gis-. r a-. r\\n\\nA parenthesized metronome mark with no textual indication may be written by including an empty string in the input:\\n\\n    \\\\tempo \\\"\\\" 8 = 96\\n    d4 g e c\"\n  },\n  {\n    \"label\": \"\\\\temporary\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Make any \\\\override in music replace an existing grob property value only temporarily, restoring the old value when a corresponding \\\\revert is executed. This is achieved by clearing the ‘pop-first’ property normally set on \\\\overrides.\\n\\nAn \\\\override/\\\\revert sequence created by using \\\\temporary and \\\\undo on the same music containing overrides will cancel out perfectly or cause a warning.\\n\\nNon-property-related music is ignored, warnings are generated for any property-changing music that isn’t an \\\\override.\"\n  },\n  {\n    \"label\": \"\\\\text\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"There are three styles of pedal indications: text, bracket, and mixed. The sustain pedal and the una corda pedal use the text style by default while the sostenuto pedal uses mixed by default.\\n\\n    c4\\\\sustainOn g c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'mixed\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\\\sustainOff\\n    \\\\set Staff.pedalSustainStyle = #'bracket\\n    c4\\\\sustainOn g c d\\n    d\\\\sustainOff\\\\sustainOn g, c2\\n    \\\\bar \\\"|.\\\"\\n\\nThe placement of the pedal commands matches the physical movement of the sustain pedal during piano performance. Pedalling to the final bar line is indicated by omitting the final pedal off command.\\n\\nPedal indications may be placed in a Dynamics context, which aligns them on a horizontal line.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOff\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOff\",\n    \"detail\": \"Text scripts\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOn\",\n    \"detail\": \"Full measure rests\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff, \\\\fermataMarkup, \\\\compressFullBarRests, \\\\expandFullBarRests.\"\n  },\n  {\n    \"label\": \"\\\\textLengthOn\",\n    \"detail\": \"Text scripts\",\n    \"documentation\": \"\\\\textLengthOn, \\\\textLengthOff.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerDown\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerNeutral\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\textSpannerUp\",\n    \"detail\": \"Text spanners\",\n    \"documentation\": \"\\\\textSpannerUp, \\\\textSpannerDown, \\\\textSpannerNeutral.\"\n  },\n  {\n    \"label\": \"\\\\thumb\",\n    \"detail\": \"Fingering instructions\",\n    \"documentation\": \"A thumb-script can be added (e.g. cello music) to indicate that a note should be played with the thumb.\\n\\n    <a_\\\\thumb a'-3>2 <b_\\\\thumb b'-3>\"\n  },\n  {\n    \"label\": \"\\\\tieDashed\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieDashPattern\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set up a custom style of dash pattern for dash-fraction ratio of line to space repeated at dash-period interval for ties.\"\n  },\n  {\n    \"label\": \"\\\\tieDotted\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieDown\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\tieNeutral\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\tieSolid\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made dashed, dotted, or a combination of solid and dashed.\\n\\n    \\\\tieDotted\\n    c2~ c\\n    \\\\tieDashed\\n    c2~ c\\n    \\\\tieHalfDashed\\n    c2~ c\\n    \\\\tieHalfSolid\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nCustom dash patterns can be specified:\\n\\n    \\\\tieDashPattern #0.3 #0.75\\n    c2~ c\\n    \\\\tieDashPattern #0.7 #1.5\\n    c2~ c\\n    \\\\tieSolid\\n    c2~ c\\n\\nDash pattern definitions for ties have the same structure as dash pattern definitions for slurs. For more information about complex dash patterns, see Slurs.\\n\\nOverride whiteout and layer layout properties for ties that collide with other objects in a staff.\\n\\n    \\\\override Tie.layer = #-2\\n    \\\\override Staff.TimeSignature.layer = #-1\\n    \\\\override Staff.KeySignature.layer = #-1\\n    \\\\override Staff.TimeSignature.whiteout = ##t\\n    \\\\override Staff.KeySignature.whiteout = ##t\\n    b2 b~\\n    \\\\time 3/4\\n    \\\\key a \\\\major\\n    b r4\"\n  },\n  {\n    \"label\": \"\\\\tieUp\",\n    \"detail\": \"Ties\",\n    \"documentation\": \"Ties may be made to curve up or down manually; see Direction and placement.\"\n  },\n  {\n    \"label\": \"\\\\time\",\n    \"detail\": \"Time signature\",\n    \"documentation\": \"The time signature is set as follows:\\n\\n    \\\\time 2/4 c2\\n    \\\\time 3/4 c2.\"\n  },\n  {\n    \"label\": \"\\\\time\",\n    \"detail\": \"Setting automatic beam behavior\",\n    \"documentation\": \"When automatic beaming is enabled, the placement of automatic beams is determined by three context properties: baseMoment, beatStructure, and beamExceptions. The default values of these variables may be overridden as described below, or alternatively the default values themselves may be changed as explained in Time signature.\\n\\nIf a beamExceptions rule is defined for the time signature in force, that rule alone is used to determine the beam placement; the values of baseMoment and beatStructure are ignored.\\n\\nIf no beamExceptions rule is defined for the time signature in force, the beam placement is determined by the values of baseMoment and beatStructure.\"\n  },\n  {\n    \"label\": \"\\\\time\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set fraction as time signature, with optional number list beat-structure before it.\"\n  },\n  {\n    \"label\": \"\\\\times\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Scale music in time by fraction.\"\n  },\n  {\n    \"label\": \"\\\\timeSignatureFraction\",\n    \"detail\": \"Polymetric notation\",\n    \"documentation\": \"Polymetric notation is supported explicitly or by manually modifying the visible time signature symbol and/or scaling note durations.\"\n  },\n  {\n    \"label\": \"\\\\tiny\",\n    \"detail\": \"Selecting notation font size\",\n    \"documentation\": \"The font size of notation elements may be altered. It does not change the size of variable symbols, such as beams or slurs.\\n\\nNote: For font sizes of text, see Selecting font and font size.\\n\\n\\n\\n    \\\\huge\\n    c4.-> d8---3\\n    \\\\large\\n    c4.-> d8---3\\n    \\\\normalsize\\n    c4.-> d8---3\\n    \\\\small\\n    c4.-> d8---3\\n    \\\\tiny\\n    c4.-> d8---3\\n    \\\\teeny\\n    c4.-> d8---3\\n\\nInternally, this sets the fontSize property. This in turn causes the font-size property to be set in all layout objects. The value of font-size is a number indicating the size relative to the standard size for the current staff height. Each step up is an increase of approximately 12% of the font size. Six steps is exactly a factor of two. The Scheme function magstep converts a font-size number to a scaling factor. The font-size property can also be set directly, so that only certain layout objects are affected.\\n\\n    \\\\set fontSize = #3\\n    c4.-> d8---3\\n    \\\\override NoteHead.font-size = #-4\\n    c4.-> d8---3\\n    \\\\override Script.font-size = #2\\n    c4.-> d8---3\\n    \\\\override Stem.font-size = #-5\\n    c4.-> d8---3\"\n  },\n  {\n    \"label\": \"\\\\tiny\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"\\\\teeny, \\\\tiny, \\\\small, \\\\normalsize, \\\\large, \\\\huge, \\\\smaller, \\\\larger.\"\n  },\n  {\n    \"label\": \"\\\\tocItem\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Add a line to the table of content, using the tocItemMarkup paper variable markup\"\n  },\n  {\n    \"label\": \"\\\\top-margin\",\n    \"detail\": \"4.1.3 Fixed vertical spacing \\\\paper variables\",\n    \"documentation\": \"The margin between the top of the page and the top of the printable area. If the paper size is modified, this dimension’s default value is scaled accordingly.\"\n  },\n  {\n    \"label\": \"\\\\top-markup-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance from the top of the printable area (i.e. the bottom of the top margin) to the first (title or top-level) markup on a page, when there is no system between the two.\"\n  },\n  {\n    \"label\": \"\\\\top-system-spacing\",\n    \"detail\": \"List of flexible vertical spacing \\\\paper variables\",\n    \"documentation\": \"the distance from the top of the printable area (i.e. the bottom of the top margin) to the first system on a page, when there is no (title or top-level) markup between the two.\"\n  },\n  {\n    \"label\": \"\\\\translate\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\translate-scaled\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Some commands can affect both the horizontal and vertical alignment of text objects in markup mode. Any object affected by these commands must be preceded with an anchor point:\\n\\n    d2^\\\\markup {\\n      Acte I\\n      \\\\translate #'(-1 . 2) \\\"Scène 1\\\"\\n    }\\n    a'\\n    g_\\\\markup {\\n      \\\\null\\n      \\\\general-align #Y #3.2 \\\\bold \\\"Très modéré\\\"\\n    }\\n    a\\n    d,^\\\\markup {\\n      \\\\null\\n      \\\\translate-scaled #'(-1 . 2) \\\\teeny \\\"Une forêt.\\\"\\n    }\\n    a'4 a g2 a\"\n  },\n  {\n    \"label\": \"\\\\transpose\",\n    \"detail\": \"Transpose\",\n    \"documentation\": \"A music expression can be transposed with \\\\transpose. The syntax is\\n\\n    \\\\transpose frompitch topitch musicexpr\\n\\nThis means that musicexpr is transposed by the interval between the pitches frompitch and topitch: any note with pitch frompitch is changed to topitch and any other note is transposed by the same interval. Both pitches are entered in absolute mode.\\n\\nNote: Music inside a \\\\transpose block is absolute unless a \\\\relative is included in the block.\\n\\n\\n\\nConsider a piece written in the key of D-major. It can be transposed up to E-major; note that the key signature is automatically transposed as well.\\n\\n    \\\\transpose d e {\\n      \\\\relative c' {\\n        \\\\key d \\\\major\\n        d4 fis a d\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\transpose\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Transpose music from pitch from to pitch to.\"\n  },\n  {\n    \"label\": \"\\\\transposedCueDuring\",\n    \"detail\": \"Formatting cue notes\",\n    \"documentation\": \"Like \\\\quoteDuring, \\\\cueDuring takes instrument transpositions into account. Cue notes are produced at the pitches that would be written for the instrument receiving the cue to produce the sounding pitches of the source instrument.\\n\\nTo transpose cue notes differently, use \\\\transposedCueDuring. This command takes an extra argument to specify (in absolute mode) the printed pitch that you want to represent the sound of a concert middle C. This is useful for taking cues from an instrument in a completely different register.\\n\\n    piccoloNotes = \\\\relative c''' {\\n      \\\\clef \\\"treble^8\\\"\\n      R1\\n      c8 c c e g2\\n      c4 g g2\\n    }\\n    bassClarinetNotes = \\\\relative c' {\\n      \\\\key d \\\\major\\n      \\\\transposition bes,\\n      d4 r a r\\n      \\\\transposedCueDuring #\\\"piccolo\\\" #UP d { R1 }\\n      d4 r a r\\n    }\\n    \\\\addQuote \\\"piccolo\\\" { \\\\piccoloNotes }\\n    <<\\n      \\\\new Staff \\\\piccoloNotes\\n      \\\\new Staff \\\\bassClarinetNotes\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\transposedCueDuring\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Insert notes from the part what into a voice called cue, using the transposition defined by pitch. This happens simultaneously with main-music, which is usually a rest.\\tThe argument dir determines whether the cue notes should be notated as a first or second voice.\"\n  },\n  {\n    \"label\": \"\\\\transposition\",\n    \"detail\": \"Instrument transpositions\",\n    \"documentation\": \"When typesetting scores that involve transposing instruments, some parts can be typeset in a different pitch than the concert pitch. In these cases, the key of the transposing instrument should be specified; otherwise the MIDI output and cues in other parts will produce incorrect pitches. For more information about quotations, see Quoting other voices.\\n\\n    \\\\transposition pitch\\n\\nThe pitch to use for \\\\transposition should correspond to the real sound heard when a c' written on the staff is played by the transposing instrument. This pitch is entered in absolute mode, so an instrument that produces a real sound which is one tone higher than the printed music should use \\\\transposition d'. \\\\transposition should only be used if the pitches are not being entered in concert pitch.\\n\\nHere are a few notes for violin and B-flat clarinet where the parts have been entered using the notes and key as they appear in each part of the conductor’s score. The two instruments are playing in unison.\\n\\n    \\\\new GrandStaff <<\\n      \\\\new Staff = \\\"violin\\\" {\\n        \\\\relative c'' {\\n          \\\\set Staff.instrumentName = #\\\"Vln\\\"\\n          \\\\set Staff.midiInstrument = #\\\"violin\\\"\\n          % not strictly necessary, but a good reminder\\n          \\\\transposition c'\\n          \\\\key c \\\\major\\n          g4( c8) r c r c4\\n        }\\n      }\\n      \\\\new Staff = \\\"clarinet\\\" {\\n        \\\\relative c'' {\\n          \\\\set Staff.instrumentName = \\\\markup { Cl (B\\\\flat) }\\n          \\\\set Staff.midiInstrument = #\\\"clarinet\\\"\\n          \\\\transposition bes\\n          \\\\key d \\\\major\\n          a4( d8) r d r d4\\n        }\\n      }\\n    >>\\n\\nThe \\\\transposition may be changed during a piece. For example, a clarinetist may be required to switch from an A clarinet to a B-flat clarinet.\\n\\n    flute = \\\\relative c'' {\\n      \\\\key f \\\\major\\n      \\\\cueDuring #\\\"clarinet\\\" #DOWN {\\n        R1 _\\\\markup\\\\tiny \\\"clarinet\\\"\\n        c4 f e d\\n        R1 _\\\\markup\\\\tiny \\\"clarinet\\\"\\n      }\\n    }\\n    clarinet = \\\\relative c'' {\\n      \\\\key aes \\\\major\\n      \\\\transposition a\\n      aes4 bes c des\\n      R1^\\\\markup { muta in B\\\\flat }\\n      \\\\key g \\\\major\\n      \\\\transposition bes\\n      d2 g,\\n    }\\n    \\\\addQuote \\\"clarinet\\\" \\\\clarinet\\n    <<\\n      \\\\new Staff \\\\with { instrumentName = #\\\"Flute\\\" }\\n        \\\\flute\\n      \\\\new Staff \\\\with { instrumentName = #\\\"Cl (A)\\\" }\\n        \\\\clarinet\\n    >>\"\n  },\n  {\n    \"label\": \"\\\\transposition\",\n    \"detail\": \"Quoting other voices\",\n    \"documentation\": \"It is very common for one voice to use the same notes as those from another voice. For example, first and second violins playing the same phrase during a particular passage of the music. This is done by letting one voice quote the other, without having to re-enter the music all over again for the second voice.\\n\\nThe \\\\addQuote command, used in the top level scope, defines a stream of music from which fragments can be quoted.\\n\\nThe \\\\quoteDuring command is used to indicate the point where the quotation begins. It is followed by two arguments: the name of the quoted voice, as defined with \\\\addQuote, and a music expression for the duration of the quote.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nIf the music expression used in \\\\quoteDuring contains notes instead of spacer or multimeasure rests then the quote will appear as polyphony and may produce unexpected results.\\n\\n    fluteNotes = \\\\relative c'' {\\n      a4 gis g gis | b4^\\\"quoted\\\" r8 ais\\\\p a4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"flute\\\" { e4 r8 ais b4 a }\\n    }\\n    \\\\addQuote \\\"flute\\\" { \\\\fluteNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Flute\\\" } \\\\fluteNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\\n\\nThe \\\\quoteDuring command uses the \\\\transposition settings of both quoted and quoting parts to produce notes for the quoting part that have the same sounding pitch as those in the quoted part.\\n\\n    clarinetNotes = \\\\relative c'' {\\n      \\\\transposition bes\\n      \\\\key d \\\\major\\n      b4 ais a ais | cis4^\\\"quoted\\\" r8 bis\\\\p b4( f)\\n    }\\n    oboeNotes = \\\\relative c'' {\\n      c4 cis c b \\\\quoteDuring #\\\"clarinet\\\" { s1 }\\n    }\\n    \\\\addQuote \\\"clarinet\\\" { \\\\clarinetNotes }\\n    \\\\score {\\n      <<\\n        \\\\new Staff \\\\with { instrumentName = \\\"Clarinet\\\" } \\\\clarinetNotes\\n        \\\\new Staff \\\\with { instrumentName = \\\"Oboe\\\" } \\\\oboeNotes\\n      >>\\n    }\"\n  },\n  {\n    \"label\": \"\\\\transposition\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set instrument transposition\"\n  },\n  {\n    \"label\": \"\\\\treCorde\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\tremolo\",\n    \"detail\": \"Tremolo repeats\",\n    \"documentation\": \"Tremolos can take two forms: alternation between two chords or two notes, and rapid repetition of a single note or chord. Tremolos consisting of an alternation are indicated by adding beams between the notes or chords being alternated, while tremolos consisting of the rapid repetition of a single note are indicated by adding beams or slashes to a single note.\\n\\nTo place tremolo marks between notes, use \\\\repeat with tremolo style:\\n\\n    \\\\repeat tremolo 8 { c16 d }\\n    \\\\repeat tremolo 6 { c16 d }\\n    \\\\repeat tremolo 2 { c16 d }\\n\\nThe \\\\repeat tremolo syntax expects exactly two notes within the braces, and the number of repetitions must correspond to a note value that can be expressed with plain or dotted notes. Thus, \\\\repeat tremolo 7 is valid and produces a double dotted note, but \\\\repeat tremolo 9 is not.\\n\\nThe duration of the tremolo equals the duration of the braced expression multiplied by the number of repeats: \\\\repeat tremolo 8 { c16 d16 } gives a whole note tremolo, notated as two whole notes joined by tremolo beams.\\n\\nThere are two ways to put tremolo marks on a single note. The \\\\repeat tremolo syntax is also used here, in which case the note should not be surrounded by braces:\\n\\n    \\\\repeat tremolo 4 c'16\"\n  },\n  {\n    \"label\": \"\\\\tremoloFlags\",\n    \"detail\": \"Tremolo repeats\",\n    \"documentation\": \"The same output can be obtained by adding :N after the note, where N indicates the duration of the subdivision (it must be at least 8). If N is 8, one beam is added to the note’s stem. If N is omitted, the last value (stored in tremoloFlags) is used:\\n\\n    c2:8 c:32\\n    c: c:\"\n  },\n  {\n    \"label\": \"\\\\triangle\",\n    \"detail\": \"Graphic notation inside markup\",\n    \"documentation\": \"Other graphic elements or symbols may be printed without requiring any text. As with any markup expression, such objects can be combined.\\n\\n    \\\\markup {\\n      \\\\combine\\n        \\\\draw-circle #4 #0.4 ##f\\n        \\\\filled-box #'(-4 . 4) #'(-0.5 . 0.5) #1\\n      \\\\hspace #5\\n      \\\\center-column {\\n        \\\\triangle ##t\\n        \\\\combine\\n          \\\\draw-line #'(0 . 4)\\n          \\\\arrow-head #Y #DOWN ##f\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\trill\",\n    \"detail\": \"Trills\",\n    \"documentation\": \"Short trills without an extender line are printed with \\\\trill; see Articulations and ornamentations.\\n\\nLonger trills with an extender line are made with \\\\startTrillSpan and \\\\stopTrillSpan:\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nA trill spanner crossing a line break will restart exactly above the first note on the new line.\\n\\n    d1\\\\startTrillSpan\\n    \\\\break\\n    d1\\n    c2\\\\stopTrillSpan\\n    r2\\n\\nConsecutive trill spans will work without explicit \\\\stopTrillSpan commands, since successive trill spanners will automatically become the right bound of the previous trill.\\n\\n    d1\\\\startTrillSpan\\n    d1\\n    b1\\\\startTrillSpan\\n    d2\\\\stopTrillSpan\\n    r2\\n\\nTrills can also be combined with grace notes. The syntax of this construct and the method to precisely position the grace notes are described in Grace notes.\\n\\n    d1~\\\\afterGrace\\n    d1\\\\startTrillSpan { c32[ d]\\\\stopTrillSpan }\\n    c2 r2\"\n  },\n  {\n    \"label\": \"\\\\tuplet\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplets are made from a music expression with the \\\\tuplet command, multiplying the speed of the music expression by a fraction:\\n\\n    \\\\tuplet fraction { music }\\n\\nThe fraction’s numerator will be printed over or under the notes, optionally with a bracket. The most common tuplets are triplets: 3 notes sound within the duration normally allowed for 2:\\n\\n    a2 \\\\tuplet 3/2 { b4 b b }\\n    c4 c \\\\tuplet 3/2 { b4 a g }\"\n  },\n  {\n    \"label\": \"\\\\tuplet\",\n    \"detail\": \"Polymetric notation\",\n    \"documentation\": \"Polymetric notation is supported explicitly or by manually modifying the visible time signature symbol and/or scaling note durations.\"\n  },\n  {\n    \"label\": \"\\\\tuplet\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Scale the given music to tuplets. ratio is a fraction that specifies how many notes are played in place of the nominal value: it will be ‘3/2’ for triplets, namely three notes being played in place of two. If the optional duration tuplet-span is specified, it is used instead of tupletSpannerDuration for grouping the tuplets. For example,\\n\\n    \\\\tuplet 3/2 4 { c8 c c c c c }\\n\\nwill result in two groups of three tuplets, each group lasting for a quarter note.\"\n  },\n  {\n    \"label\": \"\\\\tupletDown\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"\\\\tupletNeutral\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"TupletNumber\",\n    \"detail\": \"Selected Snippets\",\n    \"documentation\": \"Changing the tuplet number\\n\\nBy default, only the numerator of the tuplet number is printed over the tuplet bracket. Alternatively, num:den of the tuplet number may be printed, or the tuplet number may be suppressed altogether.\\n\\n    \\\\relative c'' {\\n      \\\\tuplet 3/2 { c8 c c }\\n      \\\\tuplet 3/2 { c8 c c }\\n      \\\\override TupletNumber.text = #tuplet-number::calc-fraction-text\\n      \\\\tuplet 3/2 { c8 c c }\\n      \\\\omit TupletNumber\\n      \\\\tuplet 3/2 { c8 c c }\\n    }\\n\\nNon-default tuplet numbers\\n\\nLilyPond also provides formatting functions to print tuplet numbers different than the actual fraction, as well as to append a note value to the tuplet number or tuplet fraction.\\n\\n    \\\\relative c'' {\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::non-default-tuplet-denominator-text 7)\\n      \\\\tuplet 3/2  { c4. c4. c4. c4. }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::non-default-tuplet-fraction-text 12 7)\\n      \\\\tuplet 3/2  { c4. c4. c4. c4. }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::append-note-wrapper\\n          (tuplet-number::non-default-tuplet-fraction-text 12 7) \\\"8\\\")\\n      \\\\tuplet 3/2  { c4. c4. c4. c4. }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::append-note-wrapper\\n          tuplet-number::calc-denominator-text \\\"4\\\")\\n      \\\\tuplet 3/2  { c8 c8 c8 c8 c8 c8 }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::append-note-wrapper\\n          tuplet-number::calc-fraction-text \\\"4\\\")\\n      \\\\tuplet 3/2  { c8 c8 c8 c8 c8 c8 }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::fraction-with-notes \\\"4.\\\" \\\"8\\\")\\n      \\\\tuplet 3/2  { c4. c4. c4. c4. }\\n      \\\\once \\\\override TupletNumber.text =\\n        #(tuplet-number::non-default-fraction-with-notes 12 \\\"8\\\" 4 \\\"4\\\")\\n      \\\\tuplet 3/2  { c4. c4. c4. c4. }\\n    }\\n\\nControlling tuplet bracket visibility\\n\\nThe default behavior of tuplet-bracket visibility is to print a bracket unless there is a beam of the same length as the tuplet. To control the visibility of tuplet brackets, set the property 'bracket-visibility to either #t (always print a bracket), #f (never print a bracket) or #'if-no-beam (only print a bracket if there is no beam).\\n\\n    music = \\\\relative c'' {\\n      \\\\tuplet 3/2 { c16[ d e } f8]\\n      \\\\tuplet 3/2 { c8 d e }\\n      \\\\tuplet 3/2 { c4 d e }\\n    }\\n    \\\\new Voice {\\n      \\\\relative c' {\\n        << \\\\music s4^\\\"default\\\" >>\\n        \\\\override TupletBracket.bracket-visibility = #'if-no-beam\\n        << \\\\music s4^\\\"'if-no-beam\\\" >>\\n        \\\\override TupletBracket.bracket-visibility = ##t\\n        << \\\\music s4^\\\"#t\\\" >>\\n        \\\\override TupletBracket.bracket-visibility = ##f\\n        << \\\\music s4^\\\"#f\\\" >>\\n      }\\n    }\\n\\nPermitting line breaks within beamed tuplets\\n\\nThis artificial example shows how both manual and automatic line breaks may be permitted to within a beamed tuplet. Note that such off-beat tuplets have to be beamed manually.\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Voice\\n        % Permit line breaks within tuplets\\n        \\\\remove \\\"Forbid_line_break_engraver\\\"\\n        % Allow beams to be broken at line breaks\\n        \\\\override Beam.breakable = ##t\\n      }\\n    }\\n    \\\\relative c'' {\\n      a8\\n      \\\\repeat unfold 5 { \\\\tuplet 3/2 { c[ b a] } }\\n      % Insert a manual line break within a tuplet\\n      \\\\tuplet 3/2 { c[ b \\\\bar \\\"\\\" \\\\break a] }\\n      \\\\repeat unfold 5 { \\\\tuplet 3/2 { c[ b a] } }\\n      c8\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tupletNumberFormatFunction\",\n    \"detail\": \"Selected Snippets\",\n    \"documentation\": \"Entering several tuplets using only one \\\\tuplet command\\n\\nThe property tupletSpannerDuration sets how long each of the tuplets contained within the brackets after \\\\tuplet should last. Many consecutive tuplets can then be placed within a single \\\\tuplet expression, thus saving typing.\\n\\nThere are several ways to set tupletSpannerDuration. The command \\\\tupletSpan sets it to a given duration, and clears it when instead of a duration \\\\default is specified. Another way is to use an optional argument with \\\\tuplet.\\n\\n    \\\\relative c' {\\n      \\\\time 2/4\\n      \\\\tupletSpan 4\\n      \\\\tuplet 3/2 { c8^\\\"\\\\\\\\tupletSpan 4\\\" c c c c c }\\n      \\\\tupletSpan \\\\default\\n      \\\\tuplet 3/2 { c8^\\\"\\\\\\\\tupletSpan \\\\\\\\default\\\" c c c c c }\\n      \\\\tuplet 3/2 4 { c8^\\\"\\\\\\\\tuplet 3/2 4 {...}\\\" c c c c c }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tupletSpan\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set tupletSpannerDuration, the length into which \\\\tuplet without an explicit ‘tuplet-span’ argument of its own will group its tuplets, to the duration tuplet-span. To revert to the default of not subdividing the contents of a \\\\tuplet command without explicit ‘tuplet-span’, use\\n\\n    \\\\tupletSpan \\\\default\"\n  },\n  {\n    \"label\": \"\\\\tupletSpannerDuration\",\n    \"detail\": \"Selected Snippets\",\n    \"documentation\": \"Entering several tuplets using only one \\\\tuplet command\\n\\nThe property tupletSpannerDuration sets how long each of the tuplets contained within the brackets after \\\\tuplet should last. Many consecutive tuplets can then be placed within a single \\\\tuplet expression, thus saving typing.\\n\\nThere are several ways to set tupletSpannerDuration. The command \\\\tupletSpan sets it to a given duration, and clears it when instead of a duration \\\\default is specified. Another way is to use an optional argument with \\\\tuplet.\\n\\n    \\\\relative c' {\\n      \\\\time 2/4\\n      \\\\tupletSpan 4\\n      \\\\tuplet 3/2 { c8^\\\"\\\\\\\\tupletSpan 4\\\" c c c c c }\\n      \\\\tupletSpan \\\\default\\n      \\\\tuplet 3/2 { c8^\\\"\\\\\\\\tupletSpan \\\\\\\\default\\\" c c c c c }\\n      \\\\tuplet 3/2 4 { c8^\\\"\\\\\\\\tuplet 3/2 4 {...}\\\" c c c c c }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\tupletUp\",\n    \"detail\": \"Tuplets\",\n    \"documentation\": \"Tuplet brackets may be manually placed above or below the staff; see Direction and placement.\\n\\nTuplets may be nested:\\n\\n    \\\\autoBeamOff\\n    c4 \\\\tuplet 5/4 { f8 e f \\\\tuplet 3/2 { e[ f g] } } f4\\n\\nModifying nested tuplets which begin at the same musical moment must be done with \\\\tweak.\\n\\nTo modify the duration of notes without printing a tuplet bracket, see Scaling durations.\"\n  },\n  {\n    \"label\": \"\\\\tweak\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Add a tweak to the following item, usually music. Layout objects created by item get their property prop set to value. If prop has the form ‘Grob.property’, like with\\n\\n    \\\\tweak Accidental.color #red cis'\\n\\nan indirectly created grob (‘Accidental’ is caused by ‘NoteHead’) can be tweaked; otherwise only directly created grobs are affected.\\n\\nAs a special case, item may be a symbol list specifying a grob path, in which case \\\\override is called on it instead of creating tweaked music. This is mainly useful when using \\\\tweak as as a component for building other functions.\\n\\nIf this use case would call for \\\\once \\\\override rather than a plain \\\\override, writing \\\\once \\\\tweak … can be convenient.\\n\\nprop can contain additional elements in which case a nested property (inside of an alist) is tweaked.\"\n  },\n  {\n    \"label\": \"\\\\two-sided\",\n    \"detail\": \"\\\\paper variables for two-sided mode\",\n    \"documentation\": \"If set to true, use inner-margin, outer-margin and binding-offset to determine margins depending on whether the page number is odd or even. This overrides left-margin and right-margin.\"\n  },\n  {\n    \"label\": \"\\\\type\",\n    \"detail\": \"5.1.6 Defining new contexts\",\n    \"documentation\": \"Specific contexts, like Staff and Voice, are made from simple building blocks. It is possible to create new types of contexts with different combinations of engraver plug-ins.\\n\\nThe next example shows how to build a different type of Voice context from scratch. It will be similar to Voice, but only prints centered slash note heads. It can be used to indicate improvisation in jazz pieces,\\n\\nThese settings are defined within a \\\\context block inside a \\\\layout block,\\n\\n    \\\\layout {\\n      \\\\context {\\n        …\\n      }\\n    }\\n\\nIn the following discussion, the example input shown should go in place of the … in the previous fragment.\\n\\nFirst it is necessary to define a name for the new context:\\n\\n    \\\\name ImproVoice\\n\\nSince it is similar to the Voice context, we want commands that work in (existing) Voice contexts to continue working. This is achieved by giving the new context an alias of Voice,\\n\\n    \\\\alias Voice\\n\\nThe context will print notes and instructive texts, so we need to add the engravers which provide this functionality, plus the engraver which groups notes, stems and rests which occur at the same musical moment into columns,\\n\\n    \\\\consists \\\"Note_heads_engraver\\\"\\n    \\\\consists \\\"Text_engraver\\\"\\n    \\\\consists \\\"Rhythmic_column_engraver\\\"\\n\\nThe note heads should all be placed on the center line,\\n\\n    \\\\consists \\\"Pitch_squash_engraver\\\"\\n    squashedPosition = #0\\n\\nThe Pitch_squash_engraver modifies note heads (created by the Note_heads_engraver) and sets their vertical position to the value of squashedPosition, in this case 0, the center line.\\n\\nThe notes look like a slash, and have no stem,\\n\\n    \\\\override NoteHead.style = #'slash\\n    \\\\hide Stem\\n\\nAll these plug-ins have to communicate under the control of the context. The mechanisms with which contexts communicate are established by declaring the context \\\\type. Within a \\\\layout block, most contexts will be of type Engraver_group. Some special contexts and contexts in \\\\midi blocks use other context types. Copying and modifying an existing context definition will also fill in the type. Since this example creates a definition from scratch, it needs to be specified explicitly.\\n\\n    \\\\type \\\"Engraver_group\\\"\\n\\nPut together, we get\\n\\n    \\\\context {\\n      \\\\name ImproVoice\\n      \\\\type \\\"Engraver_group\\\"\\n      \\\\consists \\\"Note_heads_engraver\\\"\\n      \\\\consists \\\"Text_engraver\\\"\\n      \\\\consists \\\"Rhythmic_column_engraver\\\"\\n      \\\\consists \\\"Pitch_squash_engraver\\\"\\n      squashedPosition = #0\\n      \\\\override NoteHead.style = #'slash\\n      \\\\hide Stem\\n      \\\\alias Voice\\n    }\"\n  },\n  {\n    \"label\": \"\\\\unaCorda\",\n    \"detail\": \"Piano pedals\",\n    \"documentation\": \"Pianos generally have three pedals that alter the way sound is produced: sustain, sostenuto (sos.), and una corda (U.C.). Sustain pedals are also found on vibraphones and celestas.\\n\\n    c4\\\\sustainOn d e g\\n    <c, f a>1\\\\sustainOff\\n    c4\\\\sostenutoOn e g c,\\n    <bes d f>1\\\\sostenutoOff\\n    c4\\\\unaCorda d e g\\n    <d fis a>1\\\\treCorde\"\n  },\n  {\n    \"label\": \"\\\\underline\",\n    \"detail\": \"Selecting font and font size\",\n    \"documentation\": \"Basic font switching is supported in markup mode:\\n\\n    d1^\\\\markup {\\n      \\\\bold { Più mosso }\\n      \\\\italic { non troppo \\\\underline Vivo }\\n    }\\n    r2 r4 r8\\n    d,_\\\\markup { \\\\italic quasi \\\\smallCaps Tromba }\\n    f1 d2 r\"\n  },\n  {\n    \"label\": \"\\\\undo\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Convert \\\\override and \\\\set in music to \\\\revert and \\\\unset, respectively. Any reverts and unsets already in music cause a warning. Non-property-related music is ignored.\"\n  },\n  {\n    \"label\": \"\\\\unfold\",\n    \"detail\": \"Written-out repeats\",\n    \"documentation\": \"By using the unfold command, repeats can be used to simplify the writing out of repetitious music. The syntax is\\n\\n    \\\\repeat unfold repeatcount musicexpr\\n\\nwhere musicexpr is a music expression and repeatcount is the number of times musicexpr is repeated.\\n\\n    \\\\repeat unfold 2 { c4 d e f }\\n    c1\\n\\nIn some cases, especially in a \\\\relative context, the \\\\repeat unfold function is not the same as writing out the music expression multiple times. E.g,\\n\\n    \\\\repeat unfold 2 { a'4 b c }\\n\\nis not equivalent to\\n\\n    a'4 b c | a'4 b c\\n\\nUnfold repeats can be made with alternate endings.\\n\\n    \\\\repeat unfold 2 { c4 d e f }\\n    \\\\alternative {\\n      { c2 g' }\\n      { c,2 b }\\n    }\\n    c1\\n\\nIf there are more repeats than there are alternate endings, the first alternative is applied multiple times until the remaining alternatives make up the total number of repeats.\\n\\n    \\\\repeat unfold 4 { c4 d e f }\\n    \\\\alternative {\\n      { c2 g' }\\n      { c,2 b }\\n      { e2 d }\\n     }\\n    c1\\n\\nIf there are more alternate endings than repeats then only the first alternatives are applied. The remaining alternatives will be ignored and not printed.\\n\\n    \\\\repeat unfold 2 { c4 d e f }\\n    \\\\alternative {\\n      { c2 g' }\\n      { c,2 b }\\n      { e2 d }\\n    }\\n    c1\\n\\nIt is also possible to nest multiple unfold functions (with or without alternate endings).\\n\\n    \\\\repeat unfold 2 {\\n      \\\\repeat unfold 2 { c4 d e f }\\n      \\\\alternative {\\n        { c2 g' }\\n        { c,2 b }\\n      }\\n    }\\n    c1\\n\\nChord constructs can be repeated by the chord repetition symbol q. See Chord repetition.\\n\\nNote: If you include \\\\relative inside a \\\\repeat without explicitly instantiating the Voice context, extra (unwanted) staves will appear. See An extra staff appears.\\n\\n\"\n  },\n  {\n    \"label\": \"\\\\unfoldRepeats\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Force any \\\\repeat volta, \\\\repeat tremolo or \\\\repeat percent commands in music to be interpreted as \\\\repeat unfold.\"\n  },\n  {\n    \"label\": \"\\\\unHideNotes\",\n    \"detail\": \"Hidden notes\",\n    \"documentation\": \"Hidden (or invisible or transparent) notes can be useful in preparing theory or composition exercises.\\n\\n    c4 d\\n    \\\\hideNotes\\n    e4 f\\n    \\\\unHideNotes\\n    g a\\n    \\\\hideNotes\\n    b\\n    \\\\unHideNotes\\n    c\\n\\nNote heads, stems, and flags, and rests are invisible. Beams are invisible if they start on a hidden note. Objects that are attached to invisible notes are still visible.\\n\\n    e8(\\\\p f g a)--\\n    \\\\hideNotes\\n    e8(\\\\p f g a)--\"\n  },\n  {\n    \"label\": \"VaticanaStaff\",\n    \"detail\": \"Instantiating new staves\",\n    \"documentation\": \"Staves (singular: staff) are created with the \\\\new or \\\\context commands. For details, see Creating and referencing contexts.\\n\\nThe basic staff context is Staff:\\n\\n    \\\\new Staff { c4 d e f }\\n\\nThe DrumStaff context creates a five-line staff set up for a typical drum set. Each instrument is shown with a different symbol. The instruments are entered in drum mode following a \\\\drummode command, with each instrument specified by name. For details, see Percussion staves.\\n\\n    \\\\new DrumStaff {\\n      \\\\drummode { cymc hh ss tomh }\\n    }\\n\\nRhythmicStaff creates a single-line staff that only displays the rhythmic values of the input. Real durations are preserved. For details, see Showing melody rhythms.\\n\\n    \\\\new RhythmicStaff { c4 d e f }\\n\\nTabStaff creates a tablature with six strings in standard guitar tuning. For details, see Default tablatures.\\n\\n    \\\\new TabStaff { c4 d e f }\\n\\nThere are two staff contexts specific for the notation of ancient music: MensuralStaff and VaticanaStaff. They are described in Pre-defined contexts.\\n\\nThe GregorianTranscriptionStaff context creates a staff to notate modern Gregorian chant. It does not show bar lines.\\n\\n    \\\\new GregorianTranscriptionStaff { c4 d e f e d }\\n\\nNew single staff contexts may be defined. For details, see Defining new contexts.\"\n  },\n  {\n    \"label\": \"VerticalAxisGroup\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\voice\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"There are many different conventions on how to typeset accidentals. LilyPond provides a function to specify which accidental style to use. This function is called as follows:\\n\\n    \\\\new Staff <<\\n      \\\\accidentalStyle voice\\n      { … }\\n    >>\\n\\nThe accidental style applies to the current Staff by default (with the exception of the styles piano and piano-cautionary, which are explained below). Optionally, the function can take a second argument that determines in which scope the style should be changed. For example, to use the same style in all staves of the current StaffGroup, use:\\n\\n    \\\\accidentalStyle StaffGroup.voice\\n\\nThe following accidental styles are supported. To demonstrate each style, we use the following example:\\n\\n    musicA = {\\n      <<\\n        \\\\relative c' {\\n          cis'8 fis, bes4 <a cis>8 f bis4 |\\n          cis2. <c, g'>4 |\\n        }\\n        \\\\\\\\\\n        \\\\relative c' {\\n          ais'2 cis, |\\n          fis8 b a4 cis2 |\\n        }\\n      >>\\n    }\\n    musicB = {\\n      \\\\clef bass\\n      \\\\new Voice {\\n        \\\\voiceTwo \\\\relative c' {\\n          <fis, a cis>8[ <fis a cis>\\n          \\\\change Staff = up\\n          cis' cis\\n          \\\\change Staff = down\\n          <fis, a> <fis a>]\\n          \\\\showStaffSwitch\\n          \\\\change Staff = up\\n          dis'4 |\\n          \\\\change Staff = down\\n          <fis, a cis>4 gis <f a d>2 |\\n        }\\n      }\\n    }\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\accidentalStyle default\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\nNote that the last lines of this example can be replaced by the following, as long as the same accidental style should be used in both staves.\\n\\n    \\\\new PianoStaff {\\n      <<\\n        \\\\context Staff = \\\"up\\\" {\\n          %%% change the next line as desired:\\n          \\\\accidentalStyle Score.default\\n          \\\\musicA\\n        }\\n        \\\\context Staff = \\\"down\\\" {\\n          \\\\musicB\\n        }\\n      >>\\n    }\\n\\ndefault\\nThis is the default typesetting behavior. It corresponds to eighteenth-century common practice: accidentals are remembered to the end of the measure in which they occur and only in their own octave. Thus, in the example below, no natural signs are printed before the b in the second measure or the last c:\\n\\n \\n\\nvoice\\nThe normal behavior is to remember the accidentals at Staff-level. In this style, however, accidentals are typeset individually for each voice. Apart from that, the rule is similar to default.\\n\\nAs a result, accidentals from one voice do not get canceled in other voices, which is often an unwanted result: in the following example, it is hard to determine whether the second a should be played natural or sharp. The voice option should therefore be used only if the voices are to be read solely by individual musicians. If the staff is to be used by one musician (e.g., a conductor or in a piano score) then modern or modern-cautionary should be used instead.\\n\\n \\n\\nmodern\\nThis rule corresponds to the common practice in the twentieth century. It omits some extra natural signs, which were traditionally prefixed to a sharp following a double sharp, or a flat following a double flat. The modern rule prints the same accidentals as default, with two additions that serve to avoid ambiguity: after temporary accidentals, cancellation marks are printed also in the following measure (for notes in the same octave) and, in the same measure, for notes in other octaves. Hence the naturals before the b and the c in the second measure of the upper staff:\\n\\n \\n\\nmodern-cautionary\\nThis rule is similar to modern, but the ‘extra’ accidentals (the ones not typeset by default) are typeset as cautionary accidentals. They are by default printed with parentheses, but they can also be printed in reduced size by defining the cautionary-style property of AccidentalSuggestion.\\n\\n \\n\\nmodern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice, but they are canceled across voices in the same Staff. Hence, the a in the last measure is canceled because the previous cancellation was in a different voice, and the d in the lower staff is canceled because of the accidental in a different voice in the previous measure:\\n\\n \\n\\nmodern-voice-cautionary\\nThis rule is the same as modern-voice, but with the extra accidentals (the ones not typeset by voice) typeset as cautionaries. Even though all accidentals typeset by default are typeset with this rule, some of them are typeset as cautionaries.\\n\\n \\n\\npiano\\nThis rule reflects twentieth-century practice for piano notation. Its behavior is very similar to modern style, but here accidentals also get canceled across the staves in the same GrandStaff or PianoStaff, hence all the cancellations of the final notes.\\n\\nThis accidental style applies to the current GrandStaff or PianoStaff by default.\\n\\n \\n\\npiano-cautionary\\nThis is the same as piano but with the extra accidentals typeset as cautionaries.\\n\\n \\n\\nneo-modern\\nThis rule reproduces a common practice in contemporary music: accidentals are printed like with modern, but they are printed again if the same note appears later in the same measure – except if the note is immediately repeated.\\n\\n \\n\\nneo-modern-cautionary\\nThis rule is similar to neo-modern, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\nneo-modern-voice\\nThis rule is used for multivoice accidentals to be read both by musicians playing one voice and musicians playing all voices. Accidentals are typeset for each voice as with neo-modern, but they are canceled across voices in the same Staff.\\n\\n \\n\\nneo-modern-voice-cautionary\\nThis rule is similar to neo-modern-voice, but the extra accidentals are printed as cautionary accidentals.\\n\\n \\n\\ndodecaphonic\\nThis rule reflects a practice introduced by composers at the beginning of the 20th century, in an attempt to abolish the hierarchy between natural and non-natural notes. With this style, every note gets an accidental sign, including natural signs.\\n\\n \\n\\nteaching\\nThis rule is intended for students, and makes it easy to create scale sheets with automatically created cautionary accidentals. Accidentals are printed like with modern, but cautionary accidentals are added for all sharp or flat tones specified by the key signature, except if the note is immediately repeated.\\n\\n \\n\\nno-reset\\nThis is the same as default but with accidentals lasting ‘forever’ and not only within the same measure:\\n\\n \\n\\nforget\\nThis is the opposite of no-reset: Accidentals are not remembered at all – and hence all accidentals are typeset relative to the key signature, regardless of what came before in the music.\\n\\n \\n\\n\"\n  },\n  {\n    \"label\": \"Voice\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\voice\",\n    \"detail\": \"Automatic accidentals\",\n    \"documentation\": \"The normal behavior is to remember the accidentals at Staff-level. In this style, however, accidentals are typeset individually for each voice. Apart from that, the rule is similar to default.\\n\\nAs a result, accidentals from one voice do not get canceled in other voices, which is often an unwanted result: in the following example, it is hard to determine whether the second a should be played natural or sharp. The voice option should therefore be used only if the voices are to be read solely by individual musicians. If the staff is to be used by one musician (e.g., a conductor or in a piano score) then modern or modern-cautionary should be used instead.\"\n  },\n  {\n    \"label\": \"\\\\voiceOne\",\n    \"detail\": \"Single-staff polyphony\",\n    \"documentation\": \"The basic structure needed to achieve multiple independent voices in a single staff is illustrated in the following example:\\n\\n    \\\\new Staff <<\\n      \\\\new Voice = \\\"first\\\"\\n        { \\\\voiceOne r8 r16 g e8. f16 g8[ c,] f e16 d }\\n      \\\\new Voice= \\\"second\\\"\\n        { \\\\voiceTwo d16 c d8~ d16 b c8~ c16 b c8~ c16 b8. }\\n    >>\\n\\nHere, voices are instantiated explicitly and are given names. The \\\\voiceOne … \\\\voiceFour commands set up the voices so that first and third voices get stems up, second and fourth voices get stems down, third and fourth voice note heads are horizontally shifted, and rests in the respective voices are automatically moved to avoid collisions. The \\\\oneVoice command returns all the voice settings to the neutral default directions.\"\n  },\n  {\n    \"label\": \"\\\\void\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Accept a scheme argument, return a void expression. Use this if you want to have a scheme expression evaluated because of its side-effects, but its value ignored.\"\n  },\n  {\n    \"label\": \"\\\\walkerHeads\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"In shape note head notation, the shape of the note head corresponds to the harmonic function of a note in the scale. This notation was popular in nineteenth-century American song books. Shape note heads can be produced in Sacred Harp, Southern Harmony, Funk (Harmonica Sacra), Walker, and Aiken (Christian Harmony) styles:\\n\\n    \\\\aikenHeads\\n    c, d e f g2 a b1 c \\\\break\\n    \\\\sacredHarpHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\southernHarmonyHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\funkHeads\\n    c,4 d e f g2 a b1 c \\\\break\\n    \\\\walkerHeads\\n    c,4 d e f g2 a b1 c \\\\break\"\n  },\n  {\n    \"label\": \"\\\\walkerHeadsMinor\",\n    \"detail\": \"Shape note heads\",\n    \"documentation\": \"Shapes are typeset according to the step in the scale, where the base of the scale is determined by the \\\\key command. When writing in a minor key, the scale step can be determined from the relative major:\\n\\n    \\\\key a \\\\minor\\n    \\\\aikenHeads\\n    a b c d e2 f g1 a \\\\break\\n    \\\\aikenHeadsMinor\\n    a,4 b c d e2 f g1 a \\\\break\\n    \\\\sacredHarpHeadsMinor\\n    a,2 b c d \\\\break\\n    \\\\southernHarmonyHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\funkHeadsMinor\\n    a2 b c d \\\\break\\n    \\\\walkerHeadsMinor\\n    a2 b c d \\\\break\"\n  },\n  {\n    \"label\": \"\\\\whichBar\",\n    \"detail\": \"Bar lines\",\n    \"documentation\": \"The command ‘\\\\bar bartype’ is a shortcut for ‘\\\\set Timing.whichBar = bartype’. A bar line is created whenever the whichBar property is set.\\n\\nThe default bar type used for automatically inserted bar lines is \\\"|\\\". This may be changed at any time with ‘\\\\set Timing.defaultBarType = bartype’.\"\n  },\n  {\n    \"label\": \"\\\\with-color\",\n    \"detail\": \"Coloring objects\",\n    \"documentation\": \"Individual objects may be assigned colors. Valid color names are listed in the List of colors.\\n\\n    \\\\override NoteHead.color = #red\\n    c4 c\\n    \\\\override NoteHead.color = #(x11-color 'LimeGreen)\\n    d\\n    \\\\override Stem.color = #blue\\n    e\\n\\nThe full range of colors defined for X11 can be accessed by using the Scheme function x11-color. The function takes one argument; this can be a symbol in the form 'FooBar or a string in the form \\\"FooBar\\\". The first form is quicker to write and is more efficient. However, using the second form it is possible to access X11 colors by the multi-word form of its name.\\n\\nIf x11-color cannot make sense of the parameter then the color returned defaults to black.\\n\\n    \\\\override Staff.StaffSymbol.color = #(x11-color 'SlateBlue2)\\n    \\\\set Staff.instrumentName = \\\\markup {\\n      \\\\with-color #(x11-color 'navy) \\\"Clarinet\\\"\\n    }\\n    gis8 a\\n    \\\\override Beam.color = #(x11-color \\\"medium turquoise\\\")\\n    gis a\\n    \\\\override Accidental.color = #(x11-color 'DarkRed)\\n    gis a\\n    \\\\override NoteHead.color = #(x11-color \\\"LimeGreen\\\")\\n    gis a\\n    % this is deliberate nonsense; note that the stems remain black\\n    \\\\override Stem.color = #(x11-color 'Boggle)\\n    b2 cis\"\n  },\n  {\n    \"label\": \"\\\\withMusicProperty\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set sym to val in music.\"\n  },\n  {\n    \"label\": \"\\\\wordwrap\",\n    \"detail\": \"Text alignment\",\n    \"documentation\": \"Long text indications can also be automatically wrapped accordingly to the given line width. These will be either left-aligned or justified, as shown in the following example.\\n\\n    \\\\markup {\\n      \\\\column {\\n        \\\\line  \\\\smallCaps { La vida breve }\\n        \\\\line \\\\bold { Acto I }\\n        \\\\wordwrap \\\\italic {\\n          (La escena representa el corral de una casa de\\n          gitanos en el Albaicín de Granada.  Al fondo una\\n          puerta por la que se ve el negro interior de\\n          una Fragua, iluminado por los rojos resplandores\\n          del fuego.)\\n        }\\n        \\\\hspace #0\\n        \\\\line \\\\bold { Acto II }\\n        \\\\override #'(line-width . 50)\\n        \\\\justify \\\\italic {\\n          (Calle de Granada.  Fachada de la casa de Carmela\\n          y su hermano Manuel con grandes ventanas abiertas\\n          a través de las que se ve el patio\\n          donde se celebra una alegre fiesta)\\n        }\\n      }\\n    }\"\n  },\n  {\n    \"label\": \"\\\\wordwrap-lines\",\n    \"detail\": \"Multi-page markup\",\n    \"documentation\": \"Although standard markup objects are not breakable, a specific syntax makes it possible to enter lines of text that can spread over multiple pages:\\n\\n    \\\\markuplist {\\n      \\\\justified-lines {\\n        A very long text of justified lines.\\n        ...\\n      }\\n      \\\\wordwrap-lines {\\n        Another very long paragraph.\\n        ...\\n      }\\n      ...\\n    }\\n\\nThis syntax accepts a list of markups, that can be\\n\\n - the result of a markup list command,\\n - a list of markups,\\n - a list of markup lists.\\n\\nAn exhaustive list of markup list commands can be found in Text markup list commands.\"\n  },\n  {\n    \"label\": \"X-offset\",\n    \"detail\": \"Within-system spacing properties\",\n    \"documentation\": \"The within-system vertical spacing mechanisms are controlled by two sets of grob properties. The first set is associated with the VerticalAxisGroup grob, which is created by all staves and non-staff lines. The second set is associated with the StaffGrouper grob, which can be created by staff-groups, but only if explicitly called. These properties are described individually at the end of this section.\\n\\nThe names of these properties (except for staff-affinity) follow the format item1-item2-spacing, where item1 and item2 are the items to be spaced. Note that item2 is not necessarily below item1; for example, nonstaff-relatedstaff-spacing will measure upwards from the non-staff line if staff-affinity is UP.\\n\\nEach distance is measured between the reference points of the two items. The reference point for a staff is the vertical center of its StaffSymbol (i.e. the middle line if line-count is odd; the middle space if line-count is even). The reference points for individual non-staff lines are given in the following table:\\n\\nNon-staff line\\tReference point\\nChordNames\\tbaseline\\nNoteNames\\tbaseline\\nLyrics\\tbaseline\\nDynamics\\tmid-height of ‘m’\\nFiguredBass\\thighest point\\nFretBoards\\ttop line\\n\\n\\nIn the following image, horizontal lines indicate the positions of these reference points:\\n\\nEach of the vertical spacing grob properties (except staff-affinity) uses the same alist structure as the \\\\paper spacing variables discussed in Flexible vertical spacing \\\\paper variables. Specific methods for modifying alists are discussed in Modifying alists. Grob properties should be adjusted with an \\\\override inside a \\\\score or \\\\layout block, and not inside a \\\\paper block.\\n\\nThe following example demonstrates the two ways these alists can be modified. The first declaration updates one key-value individually, and the second completely re-defines the property:\\n\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n    } { … }\\n    \\\\new Staff \\\\with {\\n      \\\\override VerticalAxisGroup.default-staff-staff-spacing =\\n        #'((basic-distance . 10)\\n           (minimum-distance . 9)\\n           (padding . 1)\\n           (stretchability . 10))\\n    } { … }\\n\\nTo change any spacing settings globally, put them in the \\\\layout block:\\n\\n    \\\\layout {\\n      \\\\context {\\n        \\\\Staff\\n        \\\\override VerticalAxisGroup.default-staff-staff-spacing.basic-distance = #10\\n      }\\n    }\\n\\nStandard settings for the vertical spacing grob properties are listed in VerticalAxisGroup and StaffGrouper. Default overrides for specific types of non-staff lines are listed in the relevant context descriptions in Contexts.\"\n  },\n  {\n    \"label\": \"\\\\x11-color\",\n    \"detail\": \"Coloring objects\",\n    \"documentation\": \"Individual objects may be assigned colors. Valid color names are listed in the List of colors.\\n\\n    \\\\override NoteHead.color = #red\\n    c4 c\\n    \\\\override NoteHead.color = #(x11-color 'LimeGreen)\\n    d\\n    \\\\override Stem.color = #blue\\n    e\\n\\nThe full range of colors defined for X11 can be accessed by using the Scheme function x11-color. The function takes one argument; this can be a symbol in the form 'FooBar or a string in the form \\\"FooBar\\\". The first form is quicker to write and is more efficient. However, using the second form it is possible to access X11 colors by the multi-word form of its name.\\n\\nIf x11-color cannot make sense of the parameter then the color returned defaults to black.\\n\\n    \\\\override Staff.StaffSymbol.color = #(x11-color 'SlateBlue2)\\n    \\\\set Staff.instrumentName = \\\\markup {\\n      \\\\with-color #(x11-color 'navy) \\\"Clarinet\\\"\\n    }\\n    gis8 a\\n    \\\\override Beam.color = #(x11-color \\\"medium turquoise\\\")\\n    gis a\\n    \\\\override Accidental.color = #(x11-color 'DarkRed)\\n    gis a\\n    \\\\override NoteHead.color = #(x11-color \\\"LimeGreen\\\")\\n    gis a\\n    % this is deliberate nonsense; note that the stems remain black\\n    \\\\override Stem.color = #(x11-color 'Boggle)\\n    b2 cis\"\n  },\n  {\n    \"label\": \"\\\\xNote\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Print note with a cross-shaped note head.\"\n  },\n  {\n    \"label\": \"\\\\xNotesOn\",\n    \"detail\": \"A.18 Available music functions\",\n    \"documentation\": \"Set the default note head style to a cross-shaped style.\"\n  }\n]);\n\nexport default NOTATION_SYMBOLS;\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/monacoConfig/NOTATION_SYMBOLS.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n/// <reference types=\"monaco-editor\" />\n// Note: object literal order is meaningful to monarch in tokenizer!\n// tslint:disable:max-line-length object-literal-sort-keys\n\nconst LILYPOND_MONARCH_PROVIDER: monaco.languages.IMonarchLanguage = {\n  tokenPostfix: '.ly',\n\n  brackets: [\n    {\n      open: '\\\\(',\n      close: '\\\\)',\n      token: 'bracket.parenthesis',\n    },\n    {\n      open: '(',\n      close: ')',\n      token: 'bracket.parenthesis',\n    },\n    {\n      open: '{',\n      close: '}',\n      token: 'bracket.curly',\n    },\n    {\n      open: '[',\n      close: ']',\n      token: 'bracket.square',\n    },\n    {\n      open: '<<',\n      close: '>>',\n      token: 'bracket.triangle',\n    },\n    {\n      open: '<',\n      close: '>',\n      token: 'bracket.triangle',\n    },\n  ],\n\n  tokenizer: {\n    root: [\n      {\n        regex: /#\"/,\n        action: {\n          token: 'string.d.delim',\n          bracket: '@open',\n          next: '@dstring.d.\"',\n        },\n      },\n      {\n        regex: /#.*/,\n        action: {\n          token: 'constant',\n        },\n      },\n      {\n        regex: /\\b((solx|soltcs|soltcb|solstqt|solss|solsqt|solsd|solsb|sols|solkk|solk|soldsd|soldd|sold|solcs|solcb|solbtqt|solbsb|solbqt|solbb|solb|sol|six|sitcs|sitcb|sistqt|siss|sisqt|sisd|sisb|sis|sikk|sik|sidsd|sidd|sid|sics|sicb|sibtqt|sibsb|sibqt|sibb|sib|si|rex|retcs|retcb|restqt|ress|resqt|resd|resb|res|rekk|rek|redsd|redd|red|recs|recb|rebtqt|rebsb|rebqt|rebb|reb|re|mix|mitcs|mitcb|mistqt|miss|misqt|misd|misb|mis|mikk|mik|midsd|midd|mid|mics|micb|mibtqt|mibsb|mibqt|mibb|mib|mi|lax|latcs|latcb|lastqt|lass|lasqt|lasd|lasb|las|lakk|lak|ladsd|ladd|lad|lacs|lacb|labtqt|labsb|labqt|labb|lab|la|hississ|hiss|hisis|hisih|his|hih|hessess|heses|heseh|h|gx|gtqs|gtqf|gss|gsharpsharp|gsharp|gs|gqs|gqf|gississ|giss|gisis|gisih|gis|gih|gflatflat|gflat|gff|gf|gessess|gess|geses|geseh|ges|geh|g|fx|ftqs|ftqf|fss|fsharpsharp|fsharp|fs|fqs|fqf|fississ|fiss|fisis|fisih|fis|fih|fflatflat|fflat|fff|ff|fessess|fess|feses|feseh|fes|feh|fax|fatcs|fatcb|fastqt|fass|fasqt|fasd|fasb|fas|fakk|fak|fadsd|fadd|fad|facs|facb|fabtqt|fabsb|fabqt|fabb|fab|fa|f|ex|etqs|etqf|essess|ess|esharpsharp|esharp|eses|eseh|es|eqs|eqf|eississ|eiss|eisis|eisih|eis|eih|eflatflat|eflat|eff|ef|eessess|eess|eeses|eeseh|ees|eeh|e|dx|dtqs|dtqf|dss|dsharpsharp|dsharp|ds|dqs|dqf|dox|dotcs|dotcb|dostqt|doss|dosqt|dosd|dosb|dos|dokk|dok|dodsd|dodd|dod|docs|docb|dobtqt|dobsb|dobqt|dobb|dob|do|dississ|diss|disis|disih|dis|dih|dflatflat|dflat|dff|df|dessess|dess|deses|deseh|des|deh|d|cx|ctqs|ctqf|css|csharpsharp|csharp|cs|cqs|cqf|cississ|ciss|cisis|cisih|cis|cih|cflatflat|cflat|cff|cf|cessess|cess|ceses|ceseh|ces|ceh|c|bx|btqs|btqf|bss|bsharpsharp|bsharp|bs|bqs|bqf|bisis|bisih|bis|bih|bflatflat|bflat|bff|bf|bess|beses|beseh|bes|beh|bb|b|ax|atqs|atqf|assess|ass|asharpsharp|asharp|ases|aseh|asas|asah|as|aqs|aqf|aississ|aiss|aisis|aisih|ais|aih|aflatflat|aflat|aff|af|aessess|aess|aeses|aeseh|aes|aeh|a|a)(\\s*[=]?\\s*(([,]\\s*)|([']\\s*)){0,4}\\s*[?!]?)?|r|s|R|q)(?![A-Za-z])((128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)(\\s*[.]\\s*)*((\\s*\\*\\s*\\d+(\\/\\d+)?)+)?)?(\\s*[:](\\s*(aug7|aug|dim|maj7|maj9|maj11|maj|m7\\.5-|m7\\+|m11|m9|m7|m6|m5|m|dim7|13\\.11|13[-+]?|6[-+]?|9[-+]?|11[-+]?|sus2|sus4|sus|1[-+]?\\.5[-+]?|1[-+]?\\.5[-+]?\\.8[-+]?|\\d*[-+]?)((\\s*[.]?\\s*\\d+[-+]?)|[-+])*)?)?(\\s*\\^\\s*\\d+(\\s*\\.\\s*\\d+)*)?(?![A-Za-z0-9])?/,\n        action: {\n          token: 'string',\n        },\n      },\n      {\n        regex: /([-_^](\\s*))?(((\\\\lyrics\\s*)({))|((\\\\lyricmode\\s*)({))|((\\\\addlyrics\\s*)({))|((\\\\lyricsto\\s*(\\\".*\\\")\\s*)({))|(((\\\\lyricsto)\\s*(\\S*)\\s*)({)))/,\n        action: {\n          token: 'string.d.delim',\n          bracket: '@open',\n          next: '@lyricmode',\n        },\n      },\n      {\n        regex: /([-_^](\\s*))?\\\\[a-zA-Z-.]*/,\n        action: {\n          token: 'keyword',\n        },\n      },\n      {\n        regex: /\\b(NullVoice|spacing|signature|routine|notes|handler|corrected|beams|arpeggios|Volta_engraver|Voice|Vertical_align_engraver|Vaticana_ligature_engraver|VaticanaVoice|VaticanaStaff|Tweak_engraver|Tuplet_engraver|Trill_spanner_engraver|Timing_translator|Time_signature_performer|Time_signature_engraver|Tie_performer|Tie_engraver|Text_spanner_engraver|Text_engraver|Tempo_performer|Tab_tie_follow_engraver|Tab_staff_symbol_engraver|Tab_note_heads_engraver|TabVoice|TabStaff|System_start_delimiter_engraver|Stem_engraver|Stanza_number_engraver|Stanza_number_align_engraver|Staff_symbol_engraver|Staff_performer|Staff_collecting_engraver|StaffGroup|Staff|Spanner_break_forbid_engraver|Span_bar_stub_engraver|Span_bar_engraver|Span_arpeggio_engraver|Spacing_engraver|Slur_performer|Slur_engraver|Slash_repeat_engraver|Separating_line_group_engraver|Script_row_engraver|Script_engraver|Script_column_engraver|Score|Rhythmic_column_engraver|RhythmicStaff|Rest_engraver|Rest_collision_engraver|Repeat_tie_engraver|Repeat_acknowledge_engraver|Pure_from_neighbor_engraver|Pitched_trill_engraver|Pitch_squash_engraver|Piano_pedal_performer|Piano_pedal_engraver|Piano_pedal_align_engraver|PianoStaff|Phrasing_slur_engraver|PetrucciVoice|PetrucciStaff|Percent_repeat_engraver|Part_combine_engraver|Parenthesis_engraver|Paper_column_engraver|Output_property_engraver|Ottava_spanner_engraver|Note_spacing_engraver|Note_performer|Note_name_engraver|Note_heads_engraver|Note_head_line_engraver|NoteNames|New_fingering_engraver|New_dynamic_engraver|Multi_measure_rest_engraver|Metronome_mark_engraver|Mensural_ligature_engraver|MensuralVoice|MensuralStaff|Mark_engraver|Lyrics|Lyric_performer|Lyric_engraver|Ligature_bracket_engraver|Ledger_line_engraver|Laissez_vibrer_engraver|KievanVoice|KievanStaff|Key_performer|Key_engraver|Keep_alive_together_engraver|Instrument_switch_engraver|Instrument_name_engraver|Hyphen_engraver|Hara_kiri_engraver|Grob_pq_engraver|GregorianTranscriptionVoice|GregorianTranscriptionStaff|GrandStaff|Grace_spacing_engraver|Grace_engraver|Grace_beam_engraver|Global|Glissando_engraver|Fretboard_engraver|FretBoards|Forbid_line_break_engraver|Footnote_engraver|Font_size_engraver|Fingering_engraver|Figured_bass_position_engraver|Figured_bass_engraver|FiguredBass|Extender_engraver|Episema_engraver|Dynamics|Dynamic_performer|Dynamic_align_engraver|Drum_notes_engraver|Drum_note_performer|DrumVoice|DrumStaff|Double_percent_repeat_engraver|Dots_engraver|Dot_column_engraver|Devnull|Default_bar_line_engraver|Custos_engraver|Cue_clef_engraver|CueVoice|Control_track_performer|Concurrent_hairpin_engraver|Collision_engraver|Cluster_spanner_engraver|Clef_engraver|Chord_tremolo_engraver|Chord_name_engraver|ChordNames|ChordNameVoice|ChoirStaff|Breathing_sign_engraver|Break_align_engraver|Bend_engraver|Beam_performer|Beam_engraver|Beam_collision_engraver|Bar_number_engraver|Bar_engraver|Axis_group_engraver|Auto_beam_engraver|Arpeggio_engraver|Accidental_engraver|Score|volta|unfold|percent|tremolo)\\b/,\n        action: {\n          token: 'constructor',\n        },\n      },\n      // Cheat for chords :/\n      {\n        regex: /</,\n        action: {\n          token: 'string',\n        },\n      },\n      {\n        regex: '>(128|64|32|16|8|4|2|1|\\\\breve|\\\\longa|\\\\maxima)?',\n        action: {\n          token: 'string',\n        },\n      },\n      {\n        regex: /\\d+\\/\\d+/,\n        action: {\n          token: 'constant',\n        },\n      },\n      {\n        regex: /\\d+/,\n        action: {\n          token: 'constant',\n        },\n      },\n      {\n        regex: /[{}()[\\]]/,\n        action: {\n          token: '@brackets',\n        },\n      },\n      {\n        regex: /\"/,\n        action: {\n          token: 'string.d.delim',\n          bracket: '@open',\n          next: '@dstring.d.\"',\n        },\n      },\n      {\n        regex: /\\w+/,\n        action: {\n          token: 'text',\n        },\n      },\n\n      // whitespace\n      {\n        include: '@whitespace',\n      },\n    ],\n\n    whitespace: [\n      {\n        regex: /[ \\t\\r\\n]+/,\n        action: {\n          token: 'white',\n        },\n      },\n      {\n        regex: /%{/,\n        action: {\n          token: 'comment',\n          next: '@comment',\n        },\n      },\n      {\n        regex: /%.*/,\n        action: {\n          token: 'comment',\n        },\n      },\n    ],\n\n    comment: [\n      {\n        regex: /[^%{}]+/,\n        action: {\n          token: 'comment',\n        },\n      },\n      {\n        regex: /%{/,\n        action: {\n          token: 'comment',\n          next: '@push',\n        },\n      },    // nested comment\n      {\n        regex: '%}',\n        action: {\n          token: 'comment',\n          next: '@pop',\n        },\n      },\n      {\n        regex: /%{/,\n        action: {\n          token: 'comment',\n        },\n      },\n      {\n        regex: /%.*/,\n        action: {\n          token: 'comment',\n        },\n      },\n    ],\n\n    lyricmode: [\n      {\n        regex: /{/,\n        action: {\n          token: 'comment',\n          next: '@push',\n        },\n      },\n      {\n        regex: /}/,\n        action: {\n          token: 'comment',\n          next: '@pop',\n        },\n      },\n    ],\n\n    // double quoted \"string\".\n    // dstring.<kind>.<delim> where kind is 'd' (double quoted), 'x' (command), or 's' (symbol)\n    // and delim is the ending delimiter (\" or `)\n    dstring: [\n      {\n        regex: /[^\\\\`\"#]+/,\n        action: {\n          token: 'string.$S2',\n        },\n      },\n      {\n        regex: /\\\\$/,\n        action: {\n          token: 'string.$S2.escape',\n        },\n      },\n      {\n        regex: /\\\\./,\n        action: {\n          token: 'string.$S2.escape.invalid',\n        },\n      },\n      {\n        regex: /[`\"]/,\n        action: {\n          cases: {\n            '$#==$S3': {\n              token: 'string.$S2.delim',\n              bracket: '@close',\n              next: '@pop',\n            },\n            '@default': 'string.$S2',\n          },\n        },\n      },\n    ],\n  },\n};\n\nexport default LILYPOND_MONARCH_PROVIDER;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/monacoConfig/LILYPOND_MONARCH_PROVIDER.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { Auth } from './auth';\nimport { File, ls } from './gitfs';\nimport { HEADER_STYLE, MENU_STYLE } from './styles';\n\ninterface Props {\n  auth: Auth | null;\n  colourScheme: 'vs-dark' | 'vs';\n  windowWidth: number;\n  onDeleteSong(song: string): void;\n  onHide(): void;\n  onLoadSong(song: string): void;\n  onShowAbout(): void;\n  onSignIn(): void;\n  onSignOut(): void;\n  setColourScheme(colourScheme: 'vs-dark' | 'vs'): void;\n}\n\ninterface State {\n  repoError: React.ReactNode | null;\n  repoTree: File[] | null;\n}\n\n/**\n * Renders the OPENED menu that is visible when clicking the button to the\n * left of the view mode selector.\n *\n * The menu button is rendered by <Header />\n *\n * NOTE: THIS IS NOT THE MENU IN THE STANDALONE APP. See StandaloneAppHost and\n * the hacklily-standalone repo.\n */\nclass Menu extends React.PureComponent<Props, State> {\n  state: State = {\n    repoError: null,\n    repoTree: null,\n  };\n\n  componentDidMount(): void {\n    this.fetchSongs();\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.auth !== this.props.auth) {\n      this.fetchSongs();\n    }\n  }\n\n  render(): JSX.Element {\n    const { auth, onSignOut, onHide, onShowAbout, windowWidth } = this.props;\n\n    let signOut: React.ReactNode;\n    if (auth) {\n      signOut = (\n        <button onClick={onSignOut} className={css(MENU_STYLE.option)}>\n          <i className=\"fa fa-fw fa-sign-out\" aria-hidden={true} />{' '}\n          Sign out ({auth.name})\n        </button>\n      );\n    }\n\n    let warning: React.ReactNode = null;\n    if (windowWidth < 500) {\n      warning = (\n        <div>\n          <i className=\"fa fa-fw fa-exclamation-triangle\" />{' '}\n          Hacklily works best on wider screens.\n        </div>\n      );\n    }\n\n    // tslint:disable:no-http-string because of silly lilypond\n    const tutorial: React.ReactNode = (\n      <a\n          href=\"http://lilypond.org/doc/v2.18/Documentation/learning/index\"\n          rel=\"noopener noreferrer\"\n          className={css(MENU_STYLE.option)}\n          target=\"_blank\"\n      >\n        <i className=\"fa fa-fw fa-life-ring\" aria-hidden={true} />{' '}\n        Lilypond manual\n      </a>\n    );\n    // tslint:enable:no-http-string because of silly lilypond\n\n    const about: React.ReactNode = (\n      <button onClick={onShowAbout} className={css(MENU_STYLE.option)}>\n        <i className=\"fa fa-fw fa-info-circle\" aria-hidden={true} />{' '}\n        About Hacklily\n      </button>\n    );\n\n    return (\n      <ReactModal\n        className={css(MENU_STYLE.menu)}\n        contentLabel=\"Menu\"\n        isOpen={true}\n        onRequestClose={onHide}\n        overlayClassName={css(MENU_STYLE.menuOverlay)}\n      >\n        <div className={css(MENU_STYLE.menuColumn)}>\n          {warning}\n          <div className={css(MENU_STYLE.songList, MENU_STYLE.option)}>\n            {this.renderSongs()}\n          </div>\n          {signOut}\n          {tutorial}\n          {this.renderSetColourScheme()}\n          {about}\n        </div>\n      </ReactModal>\n    );\n  }\n\n  private fetchSongs = async (): Promise<void> => {\n    const { auth } = this.props;\n    if (auth) {\n      try {\n        const repoTree: File[] = await ls(auth.accessToken, auth.repo);\n        this.setState({\n          repoTree,\n        });\n      } catch (err) {\n        this.setState({\n          repoError: 'Could not retreive your songs.',\n        });\n      }\n    } else {\n      this.setState({\n        repoError: null,\n        repoTree: null,\n      });\n    }\n  }\n\n  private handleColourSchemeToggled = (): void => {\n    const newColourScheme: 'vs-dark' | 'vs' = (\n      this.props.colourScheme === 'vs-dark' ? 'vs' : 'vs-dark');\n\n    this.props.setColourScheme(newColourScheme);\n  }\n\n  private handleSongDeleteClick = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    const song: string | undefined = ev.currentTarget.dataset.song;\n    if (!song) {\n      throw new Error('No song defined on element.');\n    }\n    this.props.onDeleteSong(song);\n  }\n\n  private handleSongLiClick = (ev: React.MouseEvent<HTMLButtonElement>): void => {\n    const song: string | undefined = ev.currentTarget.dataset.song;\n    if (!song) {\n      throw new Error('No song defined on element.');\n    }\n    this.props.onLoadSong(song);\n  }\n\n  private renderSetColourScheme(): React.ReactNode {\n    const text: string = (\n      this.props.colourScheme === 'vs-dark' ?\n        'Use light colour scheme' :\n        'Use dark colour scheme');\n\n    return (\n      <button\n        onClick={this.handleColourSchemeToggled}\n        className={css(MENU_STYLE.option)}\n      >\n        <i className=\"fa fa-fw fa-lightbulb-o\" aria-hidden={true} />{' '}\n        {text}\n      </button>\n    );\n  }\n\n  private renderSongs(): React.ReactNode {\n    const { auth, onSignIn } = this.props;\n    const { repoTree, repoError } = this.state;\n\n    let songs: React.ReactNode;\n\n    if (auth) {\n      if (repoError) {\n        songs = (\n          <div className={css(MENU_STYLE.placeholder)}>\n            {repoError}\n          </div>\n        );\n      } else if (!repoTree) {\n        songs = (\n          <div className={css(MENU_STYLE.placeholder)}>\n            <i className=\"fa fa-spinner fa-spin\" aria-hidden={true} />\n          </div>\n        );\n      } else {\n        const lilySongs: File[] = repoTree\n          .filter((song: File) => song.path.endsWith('.ly'))\n          .sort();\n        if (!lilySongs.length) {\n          songs = (\n            <div className={css(MENU_STYLE.placeholder)}>\n              Save / share a song to see it here.\n            </div>\n          );\n        } else {\n          const eachSong: React.ReactNode[] = lilySongs\n            .map((song: File) => (\n              <li key={song.path}>\n                <button\n                  className={css(MENU_STYLE.song)}\n                  onClick={this.handleSongLiClick}\n                  data-song={`${auth.repo}/${song.path}`}\n                >\n                  <i className=\"fa fa-file-o fa-fw\" aria-hidden={true} />{' '}\n                  {song.path}\n                </button>\n                <button\n                  className={css(MENU_STYLE.deleteSong)}\n                  onClick={this.handleSongDeleteClick}\n                  data-song={`${auth.repo}/${song.path}`}\n                >\n                  <i className=\"fa fa-remove fa-fw\" aria-hidden={true} />\n                  <span className={css(HEADER_STYLE.srOnly)}>\n                    Delete this song\n                  </span>\n                </button>\n              </li>\n            ));\n          songs = (\n            <ul className={css(MENU_STYLE.innerSongList)}>\n              {eachSong}\n            </ul>\n          );\n        }\n      }\n    } else {\n      songs = (\n        <div className={css(MENU_STYLE.placeholder)}>\n          <button onClick={onSignIn} className={css(MENU_STYLE.placeholderLink)}>\n            Sign in\n          </button>{' '}to see your songs.\n        </div>\n      );\n    }\n\n    return songs;\n  }\n}\n\nexport default Menu;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Menu.tsx","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bodyOpenClassName = exports.portalClassName = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ModalPortal = require(\"./ModalPortal\");\n\nvar _ModalPortal2 = _interopRequireDefault(_ModalPortal);\n\nvar _ariaAppHider = require(\"../helpers/ariaAppHider\");\n\nvar ariaAppHider = _interopRequireWildcard(_ariaAppHider);\n\nvar _safeHTMLElement = require(\"../helpers/safeHTMLElement\");\n\nvar _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar portalClassName = exports.portalClassName = \"ReactModalPortal\";\nvar bodyOpenClassName = exports.bodyOpenClassName = \"ReactModal__Body--open\";\n\nvar isReact16 = _reactDom2.default.createPortal !== undefined;\nvar createPortal = isReact16 ? _reactDom2.default.createPortal : _reactDom2.default.unstable_renderSubtreeIntoContainer;\n\nfunction getParentElement(parentSelector) {\n  return parentSelector();\n}\n\nvar Modal = function (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.removePortal = function () {\n      !isReact16 && _reactDom2.default.unmountComponentAtNode(_this.node);\n      var parent = getParentElement(_this.props.parentSelector);\n      parent.removeChild(_this.node);\n    }, _this.portalRef = function (ref) {\n      _this.portal = ref;\n    }, _this.renderPortal = function (props) {\n      var portal = createPortal(_this, _react2.default.createElement(_ModalPortal2.default, _extends({ defaultStyles: Modal.defaultStyles }, props)), _this.node);\n      _this.portalRef(portal);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!_safeHTMLElement.canUseDOM) return;\n\n      if (!isReact16) {\n        this.node = document.createElement(\"div\");\n      }\n      this.node.className = this.props.portalClassName;\n\n      var parent = getParentElement(this.props.parentSelector);\n      parent.appendChild(this.node);\n\n      !isReact16 && this.renderPortal(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (!_safeHTMLElement.canUseDOM) return;\n      var isOpen = newProps.isOpen;\n      // Stop unnecessary renders if modal is remaining closed\n\n      if (!this.props.isOpen && !isOpen) return;\n\n      var currentParent = getParentElement(this.props.parentSelector);\n      var newParent = getParentElement(newProps.parentSelector);\n\n      if (newParent !== currentParent) {\n        currentParent.removeChild(this.node);\n        newParent.appendChild(this.node);\n      }\n\n      !isReact16 && this.renderPortal(newProps);\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(newProps) {\n      if (!_safeHTMLElement.canUseDOM) return;\n      if (newProps.portalClassName !== this.props.portalClassName) {\n        this.node.className = newProps.portalClassName;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!_safeHTMLElement.canUseDOM || !this.node || !this.portal) return;\n\n      var state = this.portal.state;\n      var now = Date.now();\n      var closesAt = state.isOpen && this.props.closeTimeoutMS && (state.closesAt || now + this.props.closeTimeoutMS);\n\n      if (closesAt) {\n        if (!state.beforeClose) {\n          this.portal.closeWithTimeout();\n        }\n\n        setTimeout(this.removePortal, closesAt - now);\n      } else {\n        this.removePortal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!_safeHTMLElement.canUseDOM || !isReact16) {\n        return null;\n      }\n\n      if (!this.node && isReact16) {\n        this.node = document.createElement(\"div\");\n      }\n\n      return createPortal(_react2.default.createElement(_ModalPortal2.default, _extends({\n        ref: this.portalRef,\n        defaultStyles: Modal.defaultStyles\n      }, this.props)), this.node);\n    }\n  }], [{\n    key: \"setAppElement\",\n    value: function setAppElement(element) {\n      ariaAppHider.setElement(element);\n    }\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /* eslint-enable react/no-unused-prop-types */\n\n  }]);\n\n  return Modal;\n}(_react.Component);\n\nModal.propTypes = {\n  isOpen: _propTypes2.default.bool.isRequired,\n  style: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  portalClassName: _propTypes2.default.string,\n  bodyOpenClassName: _propTypes2.default.string,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n    base: _propTypes2.default.string.isRequired,\n    afterOpen: _propTypes2.default.string.isRequired,\n    beforeClose: _propTypes2.default.string.isRequired\n  })]),\n  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n    base: _propTypes2.default.string.isRequired,\n    afterOpen: _propTypes2.default.string.isRequired,\n    beforeClose: _propTypes2.default.string.isRequired\n  })]),\n  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),\n  onAfterOpen: _propTypes2.default.func,\n  onRequestClose: _propTypes2.default.func,\n  closeTimeoutMS: _propTypes2.default.number,\n  ariaHideApp: _propTypes2.default.bool,\n  shouldFocusAfterRender: _propTypes2.default.bool,\n  shouldCloseOnOverlayClick: _propTypes2.default.bool,\n  shouldReturnFocusAfterClose: _propTypes2.default.bool,\n  parentSelector: _propTypes2.default.func,\n  aria: _propTypes2.default.object,\n  role: _propTypes2.default.string,\n  contentLabel: _propTypes2.default.string,\n  shouldCloseOnEsc: _propTypes2.default.bool\n};\nModal.defaultProps = {\n  isOpen: false,\n  portalClassName: portalClassName,\n  bodyOpenClassName: bodyOpenClassName,\n  ariaHideApp: true,\n  closeTimeoutMS: 0,\n  shouldFocusAfterRender: true,\n  shouldCloseOnEsc: true,\n  shouldCloseOnOverlayClick: true,\n  shouldReturnFocusAfterClose: true,\n  parentSelector: function parentSelector() {\n    return document.body;\n  }\n};\nModal.defaultStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\"\n  },\n  content: {\n    position: \"absolute\",\n    top: \"40px\",\n    left: \"40px\",\n    right: \"40px\",\n    bottom: \"40px\",\n    border: \"1px solid #ccc\",\n    background: \"#fff\",\n    overflow: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    borderRadius: \"4px\",\n    outline: \"none\",\n    padding: \"20px\"\n  }\n};\nexports.default = Modal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/components/Modal.js\n// module id = 80\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _focusManager = require(\"../helpers/focusManager\");\n\nvar focusManager = _interopRequireWildcard(_focusManager);\n\nvar _scopeTab = require(\"../helpers/scopeTab\");\n\nvar _scopeTab2 = _interopRequireDefault(_scopeTab);\n\nvar _ariaAppHider = require(\"../helpers/ariaAppHider\");\n\nvar ariaAppHider = _interopRequireWildcard(_ariaAppHider);\n\nvar _refCount = require(\"../helpers/refCount\");\n\nvar refCount = _interopRequireWildcard(_refCount);\n\nvar _bodyClassList = require(\"../helpers/bodyClassList\");\n\nvar bodyClassList = _interopRequireWildcard(_bodyClassList);\n\nvar _safeHTMLElement = require(\"../helpers/safeHTMLElement\");\n\nvar _safeHTMLElement2 = _interopRequireDefault(_safeHTMLElement);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// so that our CSS is statically analyzable\nvar CLASS_NAMES = {\n  overlay: \"ReactModal__Overlay\",\n  content: \"ReactModal__Content\"\n};\n\nvar TAB_KEY = 9;\nvar ESC_KEY = 27;\n\nvar ModalPortal = function (_Component) {\n  _inherits(ModalPortal, _Component);\n\n  function ModalPortal(props) {\n    _classCallCheck(this, ModalPortal);\n\n    var _this = _possibleConstructorReturn(this, (ModalPortal.__proto__ || Object.getPrototypeOf(ModalPortal)).call(this, props));\n\n    _this.setFocusAfterRender = function (focus) {\n      _this.focusAfterRender = _this.props.shouldFocusAfterRender && focus;\n    };\n\n    _this.setOverlayRef = function (overlay) {\n      _this.overlay = overlay;\n    };\n\n    _this.setContentRef = function (content) {\n      _this.content = content;\n    };\n\n    _this.afterClose = function () {\n      var _this$props = _this.props,\n          appElement = _this$props.appElement,\n          ariaHideApp = _this$props.ariaHideApp;\n\n      // Remove body class\n\n      bodyClassList.remove(_this.props.bodyOpenClassName);\n\n      // Reset aria-hidden attribute if all modals have been removed\n      if (ariaHideApp && refCount.totalCount() < 1) {\n        ariaAppHider.show(appElement);\n      }\n\n      if (_this.props.shouldFocusAfterRender) {\n        if (_this.props.shouldReturnFocusAfterClose) {\n          focusManager.returnFocus();\n          focusManager.teardownScopedFocus();\n        } else {\n          focusManager.popWithoutFocus();\n        }\n      }\n    };\n\n    _this.open = function () {\n      _this.beforeOpen();\n      if (_this.state.afterOpen && _this.state.beforeClose) {\n        clearTimeout(_this.closeTimer);\n        _this.setState({ beforeClose: false });\n      } else {\n        if (_this.props.shouldFocusAfterRender) {\n          focusManager.setupScopedFocus(_this.node);\n          focusManager.markForFocusLater();\n        }\n\n        _this.setState({ isOpen: true }, function () {\n          _this.setState({ afterOpen: true });\n\n          if (_this.props.isOpen && _this.props.onAfterOpen) {\n            _this.props.onAfterOpen();\n          }\n        });\n      }\n    };\n\n    _this.close = function () {\n      if (_this.props.closeTimeoutMS > 0) {\n        _this.closeWithTimeout();\n      } else {\n        _this.closeWithoutTimeout();\n      }\n    };\n\n    _this.focusContent = function () {\n      return _this.content && !_this.contentHasFocus() && _this.content.focus();\n    };\n\n    _this.closeWithTimeout = function () {\n      var closesAt = Date.now() + _this.props.closeTimeoutMS;\n      _this.setState({ beforeClose: true, closesAt: closesAt }, function () {\n        _this.closeTimer = setTimeout(_this.closeWithoutTimeout, _this.state.closesAt - Date.now());\n      });\n    };\n\n    _this.closeWithoutTimeout = function () {\n      _this.setState({\n        beforeClose: false,\n        isOpen: false,\n        afterOpen: false,\n        closesAt: null\n      }, _this.afterClose);\n    };\n\n    _this.handleKeyDown = function (event) {\n      if (event.keyCode === TAB_KEY) {\n        (0, _scopeTab2.default)(_this.content, event);\n      }\n\n      if (_this.props.shouldCloseOnEsc && event.keyCode === ESC_KEY) {\n        event.preventDefault();\n        _this.requestClose(event);\n      }\n    };\n\n    _this.handleOverlayOnClick = function (event) {\n      if (_this.shouldClose === null) {\n        _this.shouldClose = true;\n      }\n\n      if (_this.shouldClose && _this.props.shouldCloseOnOverlayClick) {\n        if (_this.ownerHandlesClose()) {\n          _this.requestClose(event);\n        } else {\n          _this.focusContent();\n        }\n      }\n      _this.shouldClose = null;\n      _this.moveFromContentToOverlay = null;\n    };\n\n    _this.handleOverlayOnMouseUp = function () {\n      if (_this.moveFromContentToOverlay === null) {\n        _this.shouldClose = false;\n      }\n    };\n\n    _this.handleContentOnMouseUp = function () {\n      _this.shouldClose = false;\n    };\n\n    _this.handleOverlayOnMouseDown = function (event) {\n      if (!_this.props.shouldCloseOnOverlayClick && event.target == _this.overlay) {\n        event.preventDefault();\n      }\n      _this.moveFromContentToOverlay = false;\n    };\n\n    _this.handleContentOnClick = function () {\n      _this.shouldClose = false;\n    };\n\n    _this.handleContentOnMouseDown = function () {\n      _this.shouldClose = false;\n      _this.moveFromContentToOverlay = false;\n    };\n\n    _this.requestClose = function (event) {\n      return _this.ownerHandlesClose() && _this.props.onRequestClose(event);\n    };\n\n    _this.ownerHandlesClose = function () {\n      return _this.props.onRequestClose;\n    };\n\n    _this.shouldBeClosed = function () {\n      return !_this.state.isOpen && !_this.state.beforeClose;\n    };\n\n    _this.contentHasFocus = function () {\n      return document.activeElement === _this.content || _this.content.contains(document.activeElement);\n    };\n\n    _this.buildClassName = function (which, additional) {\n      var classNames = (typeof additional === \"undefined\" ? \"undefined\" : _typeof(additional)) === \"object\" ? additional : {\n        base: CLASS_NAMES[which],\n        afterOpen: CLASS_NAMES[which] + \"--after-open\",\n        beforeClose: CLASS_NAMES[which] + \"--before-close\"\n      };\n      var className = classNames.base;\n      if (_this.state.afterOpen) {\n        className = className + \" \" + classNames.afterOpen;\n      }\n      if (_this.state.beforeClose) {\n        className = className + \" \" + classNames.beforeClose;\n      }\n      return typeof additional === \"string\" && additional ? className + \" \" + additional : className;\n    };\n\n    _this.ariaAttributes = function (items) {\n      return Object.keys(items).reduce(function (acc, name) {\n        acc[\"aria-\" + name] = items[name];\n        return acc;\n      }, {});\n    };\n\n    _this.state = {\n      afterOpen: false,\n      beforeClose: false\n    };\n\n    _this.shouldClose = null;\n    _this.moveFromContentToOverlay = null;\n    return _this;\n  }\n\n  _createClass(ModalPortal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Focus needs to be set when mounting and already open\n      if (this.props.isOpen) {\n        this.setFocusAfterRender(true);\n        this.open();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (newProps.bodyOpenClassName !== this.props.bodyOpenClassName) {\n          // eslint-disable-next-line no-console\n          console.warn('React-Modal: \"bodyOpenClassName\" prop has been modified. ' + \"This may cause unexpected behavior when multiple modals are open.\");\n        }\n      }\n      // Focus only needs to be set once when the modal is being opened\n      if (!this.props.isOpen && newProps.isOpen) {\n        this.setFocusAfterRender(true);\n        this.open();\n      } else if (this.props.isOpen && !newProps.isOpen) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.focusAfterRender) {\n        this.focusContent();\n        this.setFocusAfterRender(false);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.afterClose();\n      clearTimeout(this.closeTimer);\n    }\n  }, {\n    key: \"beforeOpen\",\n    value: function beforeOpen() {\n      var _props = this.props,\n          appElement = _props.appElement,\n          ariaHideApp = _props.ariaHideApp,\n          bodyOpenClassName = _props.bodyOpenClassName;\n      // Add body class\n\n      bodyClassList.add(bodyOpenClassName);\n      // Add aria-hidden to appElement\n      if (ariaHideApp) {\n        ariaAppHider.hide(appElement);\n      }\n    }\n\n    // Don't steal focus from inner elements\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          className = _props2.className,\n          overlayClassName = _props2.overlayClassName,\n          defaultStyles = _props2.defaultStyles;\n\n      var contentStyles = className ? {} : defaultStyles.content;\n      var overlayStyles = overlayClassName ? {} : defaultStyles.overlay;\n\n      return this.shouldBeClosed() ? null : _react2.default.createElement(\n        \"div\",\n        {\n          ref: this.setOverlayRef,\n          className: this.buildClassName(\"overlay\", overlayClassName),\n          style: _extends({}, overlayStyles, this.props.style.overlay),\n          onClick: this.handleOverlayOnClick,\n          onMouseDown: this.handleOverlayOnMouseDown,\n          onMouseUp: this.handleOverlayOnMouseUp,\n          \"aria-modal\": \"true\"\n        },\n        _react2.default.createElement(\n          \"div\",\n          _extends({\n            ref: this.setContentRef,\n            style: _extends({}, contentStyles, this.props.style.content),\n            className: this.buildClassName(\"content\", className),\n            tabIndex: \"-1\",\n            onKeyDown: this.handleKeyDown,\n            onMouseDown: this.handleContentOnMouseDown,\n            onMouseUp: this.handleContentOnMouseUp,\n            onClick: this.handleContentOnClick,\n            role: this.props.role,\n            \"aria-label\": this.props.contentLabel\n          }, this.ariaAttributes(this.props.aria || {})),\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return ModalPortal;\n}(_react.Component);\n\nModalPortal.defaultProps = {\n  style: {\n    overlay: {},\n    content: {}\n  }\n};\nModalPortal.propTypes = {\n  isOpen: _propTypes2.default.bool.isRequired,\n  defaultStyles: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  style: _propTypes2.default.shape({\n    content: _propTypes2.default.object,\n    overlay: _propTypes2.default.object\n  }),\n  className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  overlayClassName: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  bodyOpenClassName: _propTypes2.default.string,\n  ariaHideApp: _propTypes2.default.bool,\n  appElement: _propTypes2.default.instanceOf(_safeHTMLElement2.default),\n  onAfterOpen: _propTypes2.default.func,\n  onRequestClose: _propTypes2.default.func,\n  closeTimeoutMS: _propTypes2.default.number,\n  shouldFocusAfterRender: _propTypes2.default.bool,\n  shouldCloseOnOverlayClick: _propTypes2.default.bool,\n  shouldReturnFocusAfterClose: _propTypes2.default.bool,\n  role: _propTypes2.default.string,\n  contentLabel: _propTypes2.default.string,\n  aria: _propTypes2.default.object,\n  children: _propTypes2.default.node,\n  shouldCloseOnEsc: _propTypes2.default.bool\n};\nexports.default = ModalPortal;\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/components/ModalPortal.js\n// module id = 81\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleBlur = handleBlur;\nexports.handleFocus = handleFocus;\nexports.markForFocusLater = markForFocusLater;\nexports.returnFocus = returnFocus;\nexports.popWithoutFocus = popWithoutFocus;\nexports.setupScopedFocus = setupScopedFocus;\nexports.teardownScopedFocus = teardownScopedFocus;\n\nvar _tabbable = require(\"../helpers/tabbable\");\n\nvar _tabbable2 = _interopRequireDefault(_tabbable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar focusLaterElements = [];\nvar modalElement = null;\nvar needToFocus = false;\n\nfunction handleBlur() {\n  needToFocus = true;\n}\n\nfunction handleFocus() {\n  if (needToFocus) {\n    needToFocus = false;\n    if (!modalElement) {\n      return;\n    }\n    // need to see how jQuery shims document.on('focusin') so we don't need the\n    // setTimeout, firefox doesn't support focusin, if it did, we could focus\n    // the element outside of a setTimeout. Side-effect of this implementation\n    // is that the document.body gets focus, and then we focus our element right\n    // after, seems fine.\n    setTimeout(function () {\n      if (modalElement.contains(document.activeElement)) {\n        return;\n      }\n      var el = (0, _tabbable2.default)(modalElement)[0] || modalElement;\n      el.focus();\n    }, 0);\n  }\n}\n\nfunction markForFocusLater() {\n  focusLaterElements.push(document.activeElement);\n}\n\n/* eslint-disable no-console */\nfunction returnFocus() {\n  var toFocus = null;\n  try {\n    toFocus = focusLaterElements.pop();\n    toFocus.focus();\n    return;\n  } catch (e) {\n    console.warn([\"You tried to return focus to\", toFocus, \"but it is not in the DOM anymore\"].join(\" \"));\n  }\n}\n/* eslint-enable no-console */\n\nfunction popWithoutFocus() {\n  focusLaterElements.length > 0 && focusLaterElements.pop();\n}\n\nfunction setupScopedFocus(element) {\n  modalElement = element;\n\n  if (window.addEventListener) {\n    window.addEventListener(\"blur\", handleBlur, false);\n    document.addEventListener(\"focus\", handleFocus, true);\n  } else {\n    window.attachEvent(\"onBlur\", handleBlur);\n    document.attachEvent(\"onFocus\", handleFocus);\n  }\n}\n\nfunction teardownScopedFocus() {\n  modalElement = null;\n\n  if (window.addEventListener) {\n    window.removeEventListener(\"blur\", handleBlur);\n    document.removeEventListener(\"focus\", handleFocus);\n  } else {\n    window.detachEvent(\"onBlur\", handleBlur);\n    document.detachEvent(\"onFocus\", handleFocus);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/focusManager.js\n// module id = 82\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scopeTab;\n\nvar _tabbable = require(\"./tabbable\");\n\nvar _tabbable2 = _interopRequireDefault(_tabbable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction scopeTab(node, event) {\n  var tabbable = (0, _tabbable2.default)(node);\n\n  if (!tabbable.length) {\n    // Do nothing, since there are no elements that can receive focus.\n    event.preventDefault();\n    return;\n  }\n\n  var shiftKey = event.shiftKey;\n  var head = tabbable[0];\n  var tail = tabbable[tabbable.length - 1];\n\n  // proceed with default browser behavior\n  if (node === document.activeElement) {\n    return;\n  }\n\n  var target;\n  if (tail === document.activeElement && !shiftKey) {\n    target = head;\n  }\n\n  if (head === document.activeElement && shiftKey) {\n    target = tail;\n  }\n\n  if (target) {\n    event.preventDefault();\n    target.focus();\n    return;\n  }\n\n  // Safari radio issue.\n  //\n  // Safari does not move the focus to the radio button,\n  // so we need to force it to really walk through all elements.\n  //\n  // This is very error prune, since we are trying to guess\n  // if it is a safari browser from the first occurence between\n  // chrome or safari.\n  //\n  // The chrome user agent contains the first ocurrence\n  // as the 'chrome/version' and later the 'safari/version'.\n  var checkSafari = /(\\bChrome\\b|\\bSafari\\b)\\//.exec(navigator.userAgent);\n  var isSafariDesktop = checkSafari != null && checkSafari[1] != \"Chrome\" && /\\biPod\\b|\\biPad\\b/g.exec(navigator.userAgent) == null;\n\n  // If we are not in safari desktop, let the browser control\n  // the focus\n  if (!isSafariDesktop) return;\n\n  var x = tabbable.indexOf(document.activeElement);\n\n  if (x > -1) {\n    x += shiftKey ? -1 : 1;\n  }\n\n  event.preventDefault();\n\n  tabbable[x].focus();\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/scopeTab.js\n// module id = 83\n// module chunks = 2","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/warning/browser.js\n// module id = 84\n// module chunks = 2","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.remove = remove;\n\nvar _refCount = require(\"./refCount\");\n\nvar refCount = _interopRequireWildcard(_refCount);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction add(bodyClass) {\n  // Increment class(es) on refCount tracker and add class(es) to body\n  bodyClass.split(\" \").map(refCount.add).forEach(function (className) {\n    return document.body.classList.add(className);\n  });\n}\n\nfunction remove(bodyClass) {\n  var classListMap = refCount.get();\n  // Decrement class(es) from the refCount tracker\n  // and remove unused class(es) from body\n  bodyClass.split(\" \").map(refCount.remove).filter(function (className) {\n    return classListMap[className] === 0;\n  }).forEach(function (className) {\n    return document.body.classList.remove(className);\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-modal/lib/helpers/bodyClassList.js\n// module id = 85\n// module chunks = 2","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/exenv/index.js\n// module id = 86\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { MODAL_STYLE } from './styles';\n\ninterface Props {\n  onHide(): void;\n}\n\n/**\n * A 404 modal that is rendered when the 404 query is set.\n *\n * 404.html (which GitHub pages will render for every unmatched URL) redirects to\n * '/?404=1', which renders <App 404=\"1\" />, which results in this modal being shown.\n */\nexport default class Modal404 extends React.PureComponent<Props> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"About Hacklily\"\n        isOpen={true}\n        onRequestClose={this.props.onHide}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            <strong>Page not found (404)</strong>\n            <button\n              aria-label=\"Back to song\"\n              onClick={this.props.onHide}\n              className={css(MODAL_STYLE.closeButton)}\n            >\n              <i className=\"fa-close fa\" aria-hidden={true} />\n            </button>\n          </div>\n          <div className={css(MODAL_STYLE.modalBody)}>\n            <p style={{ marginTop: 0 }}>\n              The requested page may have been moved or deleted.\n            </p>\n            <p>\n              Hacklily is a free online sheet-music editor and publishing tool.\n              While you are here, why not{' '}\n              <button onClick={this.props.onHide} className={css(MODAL_STYLE.link)}>\n                give it a try\n              </button>?\n            </p>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Modal404.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { MODAL_STYLE } from './styles';\n\ninterface Props {\n  onHide(): void;\n}\n\n/**\n * The About dialog, accessible through the menu in the header.\n */\nclass ModalAbout extends React.PureComponent<Props> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"About Hacklily\"\n        isOpen={true}\n        onRequestClose={this.props.onHide}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            About Hacklily\n            <button\n              aria-label=\"Back to song\"\n              onClick={this.props.onHide}\n              className={css(MODAL_STYLE.closeButton)}\n            >\n              <i className=\"fa-close fa\" aria-hidden={true} />\n            </button>\n        </div>\n        <div className={css(MODAL_STYLE.modalBody)}>\n          <div>\n            <strong>\n              Hacklily is an online sheet-music editor and publishing tool.\n            </strong>\n            <p>\n              It is powered by{' '}\n              {/*tslint:disable:no-http-string because of silly lilypond*/}\n              <a href=\"http://lilypond.org/\" target=\"_blank\" rel=\"noopener noreferrer\">LilyPond</a>.\n              New to LilyPond? Take a look at the{' '}\n              <a\n                href=\"http://lilypond.org/doc/v2.18/Documentation/learning/index\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                tutorial\n              </a>!\n              {/*tslint:enable:no-http-string becuase of silly lilypond*/}\n            </p>\n            <p>\n              You can view Hacklily's source and contribute code on{' '}\n              <a\n                href=\"https://github.com/hacklily/hacklily\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                 GitHub\n              </a>.\n            </p>\n          </div>\n          <div className={css(MODAL_STYLE.license)}>\n            <p>\n                This project is <a href=\"https://www.fsf.org/about/what-is-free-software\">\n                free software</a>: you can\n                redistribute it and/or modify it under the terms of the GNU\n                General Public License (GNU GPL) as published by the Free Software\n                Foundation, either version 3 of the License, or (at your option)\n                any later version.  The code is distributed WITHOUT ANY WARRANTY;\n                without even the implied warranty of MERCHANTABILITY or FITNESS\n                FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.\n            </p>\n            <p>\n              <a href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n                Read the GNU General Public License version 3.\n              </a>\n            </p>\n            <p>\n              {/* about-javascript.html contains the jslicense1 rel for scrapers */}\n                See {' '}\n                <a href=\"about-javascript.html\">\n                  additional license statements\n                  <span className={css(MODAL_STYLE.gpl)}>\n                  <img\n                    src=\"gplv3-127x51.png\"\n                    alt=\"Licensed under the GNU General Public License version 3\"\n                  />\n                </span>\n                </a>,{' '}\n                <a href=\"dmca.html\">\n                  DMCA info\n                </a>, and{' '}\n                <a href=\"privacy-statement.html\">\n                  privacy statement\n                </a>.\n                <br />\n                &copy; Copyright{' '}\n                <a href=\"https://nettek.ca\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Joshua Netterfield\n                </a> 2017 - present. 🇨🇦\n            </p>\n          </div>\n        </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nexport default ModalAbout;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalAbout.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { BUTTON_STYLE, MODAL_STYLE } from './styles';\n\ninterface Props {\n  resolveGitHub(): void;\n  resolveLocalStorage(): void;\n}\n\n/**\n * This is shown when you load a song that was loaded dirty and has been edited elsewhere.\n */\nexport default class ModalConflict extends React.PureComponent<Props> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"Resolve external changes\"\n        isOpen={true}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            Keep unsaved changes?\n          </div>\n          <div className={css(MODAL_STYLE.modalBody)}>\n            <p style={{ marginTop: 0 }}>\n              <strong>This song was edited outside of this browser.</strong>{' '}\n              You can either keep the unsaved version from this browser, or revert\n              to the saved version.\n            </p>\n            <p>\n              <strong>Tip: </strong> Next time, save songs before closing Hacklily.\n            </p>\n            <div style={{ display: 'flex', marginBottom: 10 }}>\n              <div style={{ flex: 1 }} />\n              <div>\n                <button\n                  onClick={this.props.resolveLocalStorage}\n                  className={css(BUTTON_STYLE.buttonStyle)}\n                >\n                  Keep unsaved version\n                </button>\n                <button\n                  onClick={this.props.resolveGitHub}\n                  className={css(BUTTON_STYLE.buttonStyle)}\n                >\n                  Revert to saved version\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalConflict.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { MODAL_STYLE } from './styles';\n\n/**\n * A modal that is rendered when this song is being edited in another tab.\n * There's no escaping this modal. You need to reload or close the tab to continue.\n */\nexport default class ModalLocked extends React.PureComponent {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"Opened in another tab...\"\n        isOpen={true}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            This song was opened in another tab. You can only edit in one tab at once.\n            If you have closed the other tab, you may{' '}\n            <a href={window.location.toString()}>resume editing here</a>.\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nexport function lock(songID: string): void {\n  // This is a trick to send a notification to other pages editing this document.\n  // Other tabs can listen to the 'storage' event and lock when startedEditedNotification is set to\n  // a song they are editing.\n  localStorage.setItem('startedEditingNotification', songID);\n  localStorage.removeItem('startedEditingNotification');\n}\n\nlet editingNotificationHandler: null | ((ev: StorageEvent) => void) = null;\n/**\n * Calls handler when another tab starts editing a song.\n */\nexport function setEditingNotificationHandler(handler: null | ((songID: string) => void)): void {\n  if (editingNotificationHandler) {\n    window.removeEventListener('storage', editingNotificationHandler);\n    editingNotificationHandler = null;\n  }\n  if (handler) {\n    editingNotificationHandler = (ev: StorageEvent): void => {\n      if (ev.key === 'startedEditingNotification' && ev.newValue) {\n        handler(ev.newValue);\n      }\n    };\n    window.addEventListener('storage', editingNotificationHandler);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalLocked.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { CLIENT_ID, getOauthRedirect } from './auth';\nimport { GITHUB_STYLE, MODAL_STYLE } from './styles';\n\ninterface Props {\n  connectToGitHubReason: string | null;\n  csrf: string;\n  onHide(): void;\n  setCSRF(csrf: string): void;\n}\n\n/**\n * Login modal that explains the privacy of Hacklily and redirects the user to\n * the GitHub OAauth flow.\n *\n * Renders when you click login from the menu, or press \"New Song\" / \"Save / share\"\n * while not logged in.\n *\n * Sets a new CSRF for the app before rendering. The CSRF is used throughout the\n * OAuth flow.\n *\n * The user is redirected back to the app after the flow. <App /> then calls\n * checkLogin, below, to set localStorage.\n */\nexport default class ModalLogin extends React.PureComponent<Props> {\n  componentWillMount(): void {\n    const randomContainer: Uint32Array = new Uint32Array(1);\n    crypto.getRandomValues(randomContainer);\n    const csrf: string = randomContainer[0].toString();\n\n    this.props.setCSRF(csrf);\n  }\n\n  render(): JSX.Element {\n    const { csrf, onHide, connectToGitHubReason } = this.props;\n\n    if (!CLIENT_ID) {\n      return (\n        <ReactModal\n          isOpen={true}\n          onRequestClose={onHide}\n          className={css(MODAL_STYLE.modal)}\n          contentLabel=\"Sign in\"\n          overlayClassName={css(MODAL_STYLE.overlay)}\n        >\n          <p>\n            GitHub integration is not enabled in this copy of Hacklily since the{' '}\n            <code>REACT_APP_GITHUB_CLIENT_ID</code> environment variable was not set\n            when bundling the application.\n          </p>\n        </ReactModal>\n      );\n    }\n\n    const explanation: React.ReactNode = (\n      <span>\n        <strong>\n          <i className=\"fa fa-info-circle\" aria-hidden=\"true\" />{' '}\n          {connectToGitHubReason || 'Sign in or create an account'}\n        </strong>\n      </span>\n    );\n\n    return (\n      <ReactModal\n        isOpen={true}\n        onRequestClose={onHide}\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"Sign in\"\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            {explanation}\n            <button\n              className={css(MODAL_STYLE.closeButton)}\n              aria-label=\"Back to song\"\n              onClick={onHide}\n            >\n              <i className=\"fa-close fa\" aria-hidden={true} />\n            </button>\n          </div>\n          <div className={css(MODAL_STYLE.modalBody)}>\n            <p className={css(MODAL_STYLE.signInPrivacy)}>\n              Songs you save will be <strong>public</strong> on GitHub and Hacklily.\n            </p>\n            <p className={css(MODAL_STYLE.signInPrivacy)}>\n              If you do not have a{' '}\n              <a\n                href=\"https://help.github.com/articles/github-glossary/#repository\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n              repo\n              </a>{' '} named <code>sheet-music</code>, Hacklily{' '}\n              will create one.\n            </p>\n            <p className={css(MODAL_STYLE.login)}>\n              <a href={getOauthRedirect(csrf)}>\n                <button className={css(GITHUB_STYLE.btnGithub)}>\n                  Continue with GitHub\n                </button>\n              </a>\n            </p>\n            <p className={css(MODAL_STYLE.license)}>\n              Only save songs you want to share. See the{' '}\n              <a\n                href=\"privacy-statement.html\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                privacy statement\n              </a>.{' '}\n              <a\n                href=\"dmca.html\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                DMCA\n              </a>\n            </p>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalLogin.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { Auth } from './auth';\nimport { Conflict, File, FileNotFound, ls, rm, write } from './gitfs';\nimport ModalSaving from './ModalSaving';\nimport RPCClient from './RPCClient';\nimport { BUTTON_STYLE, MODAL_STYLE, PUBLISH_STYLE } from './styles';\n\ninterface Props {\n  auth: Auth;\n  code: string;\n  rpc: RPCClient;\n  onHide(): void;\n  onPublished(path: string): void;\n}\n\ninterface State {\n  filename: string;\n  files: File[] | null;\n  invitationRequired: boolean;\n  saving: boolean;\n}\n\n/**\n * This is the modal you see when you try to save an untitled file.\n * It asks you for a name.\n */\nclass ModalPublish extends React.PureComponent<Props, State> {\n  state: State = {\n    filename: '',\n    files: null,\n    invitationRequired: false,\n    saving: false,\n  };\n\n  componentDidMount(): void {\n    this.loadExistingSongs();\n  }\n\n  render(): JSX.Element {\n    // tslint:disable max-func-body-length\n    // TODO(joshuan): Split this up\n    const { auth, onHide } = this.props;\n    const { filename, files, invitationRequired, saving } = this.state;\n    let disabled: boolean = false;\n\n    if (saving) {\n      return <ModalSaving />;\n    }\n\n    let error: React.ReactNode = null;\n    if (!filename.length) {\n      disabled = true;\n      error = (\n        <span className={css(PUBLISH_STYLE.error)}>\n          <i className=\"fa fa-exclamation-triangle\" aria-hidden={true} />{' '}\n          Please enter a filename.\n        </span>\n      );\n    } else if (files && files.map((file: File) => file.path).indexOf(`${filename}.ly`) !== -1) {\n      disabled = true;\n      error = (\n        <span className={css(PUBLISH_STYLE.error)}>\n          <i className=\"fa fa-exclamation-triangle\" aria-hidden={true} />{' '}\n          That filename is taken.\n        </span>\n      );\n    } else if (invitationRequired) {\n      error = (\n        <span className={css(PUBLISH_STYLE.error)}>\n          Permission denied. You may need to{' '}\n          <a\n              href={`https://github.com/${auth.repo}/invitations`}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n          >\n            enable write access\n          </a> then try agin!\n        </span>\n      );\n    }\n\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal, MODAL_STYLE.big)}\n        contentLabel=\"Publish\"\n        isOpen={true}\n        onRequestClose={onHide}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            Save / share song\n            <button\n              aria-label=\"Back to song\"\n              onClick={onHide}\n              className={css(MODAL_STYLE.closeButton)}\n            >\n              <i className=\"fa-close fa\" aria-hidden={true} />\n            </button>\n          </div>\n          <div className={css(MODAL_STYLE.modalBody)}>\n            <div className={css(PUBLISH_STYLE.row)}>\n              <span className={css(PUBLISH_STYLE.cell)}>\n                Save to:&nbsp;\n                <code className={css(PUBLISH_STYLE.mono)}>\n                  <a\n                    href={`https://github.com/${auth.repo}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                      {`${auth.repo}`}\n                  </a>\n                  /\n                </code>\n              </span>\n              <input\n                value={filename}\n                className={css(PUBLISH_STYLE.cell, PUBLISH_STYLE.expand, PUBLISH_STYLE.mono)}\n                placeholder=\"filename\"\n                autoFocus={true}\n                onChange={this.handleChange}\n              />\n              <span className={css(PUBLISH_STYLE.cell)}>\n                <code className={css(PUBLISH_STYLE.mono)}>\n                  &nbsp;.ly\n                </code>\n              </span>\n              {/* Don't judge me too strongly (ok, judge me a little), but I have no idea */}\n              {/* where 7 comes from, and I want to get on with the fun part of making Hacklily. */}\n              <div style={{ width: 7, display: 'table-cell' }} />\n            </div>\n            <div className={css(PUBLISH_STYLE.footer)}>\n              {error}\n              <button\n                onClick={this.handleSave}\n                disabled={disabled}\n                className={css(BUTTON_STYLE.buttonStyle, PUBLISH_STYLE.publishBtn)}\n              >\n                <i className=\"fa fa-save\" aria-hidden={true} />{' '}\n                Save / share\n              </button>\n            </div>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n\n  private handleChange = (ev: React.ChangeEvent<HTMLInputElement>): void => {\n    const filename: string = ev.target.value.replace(/[^a-zA-Z0-9_-]*/g, '');\n    this.setState({\n      filename,\n    });\n  }\n\n  private handleSave = async (): Promise<void> => {\n    let didFail: boolean = false;\n    try {\n      this.setState({\n        saving: true,\n      });\n      const { code, auth, rpc } = this.props;\n      const { filename } = this.state;\n      await doPublish(code, auth, `${filename}.ly`, rpc, false);\n    } catch (err) {\n      if (err instanceof FileNotFound) {\n        didFail = true;\n        this.setState({\n          invitationRequired: true,\n        });\n\n        return;\n      }\n\n      // tslint:disable-next-line:no-console\n      console.log(err);\n      alert(err.toString());\n      didFail = true;\n    } finally {\n      this.setState({\n        saving: false,\n      });\n      if (!didFail) {\n        this.props.onPublished(`${this.props.auth.repo}/${this.state.filename}.ly`);\n      }\n    }\n  }\n\n  private loadExistingSongs = async(): Promise<void> => {\n    const {\n      auth: {\n        accessToken,\n        repo,\n      },\n    } = this.props;\n\n    const files: File[] = await ls(accessToken, repo);\n    this.setState({\n      files,\n    });\n  }\n\n}\n\nfunction b64EncodeUnicode(str: string): string {\n  // first we use encodeURIComponent to get percent-encoded UTF-8,\n  // then we convert the percent encodings into raw bytes which\n  // can be fed into btoa.\n  return btoa(\n    encodeURIComponent(str).replace(\n      /%([0-9A-F]{2})/g,\n      (match: string, p1: string) => String.fromCharCode(+(`0x${p1}`)),\n    ),\n  );\n}\n\nexport async function doPublish(\n  code: string,\n  auth: Auth,\n  filename: string,\n  rpc: RPCClient,\n  overwrite: boolean,\n): Promise<boolean> {\n  const pdf: string = (await rpc.call('render', {\n    backend: 'pdf',\n    src: code,\n  })).result.files[0];\n\n  const pdfFilename: string = filename.replace(/\\.ly$/, '.pdf');\n\n  const files: File[] = await ls(auth.accessToken, auth.repo);\n  const file: File | undefined = files.find((candidate: File) =>\n    candidate.path === filename);\n  const pdfFile: File | undefined = files.find((candidate: File) =>\n    candidate.path === pdfFilename);\n\n  if (!overwrite && (file || pdfFile)) {\n    throw new Error('That name is already taken.');\n  }\n\n  const { accessToken, repo } = auth;\n  try {\n    // These each result in a commit -- it would be better to write them all at once.\n    await write(accessToken, repo, pdfFilename, pdf, pdfFile ? pdfFile.sha : undefined , 'master');\n    await write(accessToken, repo, filename, b64EncodeUnicode(code),\n                file ? file.sha : undefined, 'master');\n  } catch (err) {\n    // tslint:disable-next-line:no-console\n    console.log(err);\n    if (err instanceof Conflict) {\n      if (overwrite) {\n        throw new Error(\n          'Could not save file. ' +\n          'You may need to wait a minute or so after publishing before publishing again.',\n        );\n      } else {\n        throw new Error('This name is already taken.');\n      }\n    } else if (err instanceof FileNotFound) {\n      // This is probably actually an authentication issue.\n      // Let the caller deal with daat.\n      throw err;\n    } else {\n      throw new Error('Could not save file.');\n    }\n  }\n\n  return true;\n}\n\nexport async function doUnpublish(\n  auth: Auth,\n  filename: string,\n  rpc: RPCClient,\n): Promise<boolean> {\n\n  const pdfFilename: string = filename.replace(/\\.ly$/, '.pdf');\n\n  const files: File[] = await ls(auth.accessToken, auth.repo);\n  const file: File | undefined = files.find((candidate: File) =>\n    candidate.path === filename);\n  const pdfFile: File | undefined = files.find((candidate: File) =>\n    candidate.path === pdfFilename);\n\n  const { accessToken, repo } = auth;\n  try {\n    // These each result in a commit -- it would be better to write them all at once.\n    if (pdfFile) {\n      await rm(accessToken, repo, pdfFilename, pdfFile.sha , 'master');\n    }\n    if (file) {\n      await rm(accessToken, repo, filename, file.sha, 'master');\n    }\n  } catch (err) {\n    // tslint:disable-next-line:no-console\n    console.log(err);\n    if (err instanceof Conflict) {\n      alert('Could not delete file.');\n\n      return false;\n    }\n\n    alert('Could not delete file.');\n\n    return false;\n  }\n\n  return true;\n}\n\nexport default ModalPublish;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalPublish.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\nimport * as ReactModal from 'react-modal';\n\nimport { BUTTON_STYLE, MODAL_STYLE } from './styles';\n\ninterface Props {\n  cancel(): void;\n  discardChanges(): void;\n  save(): void;\n}\n\n/**\n * This is the \"Do you want to save your changes\" modal you get when you load a song\n * while the current one has unsaved changes in the current song.\n *\n * Now, we could instead just redirect the user, since we do store the code for\n * ALL songs that are dirty in localStorage, but that may result in the user being\n * confused when she or he tries editing the song somewhere else and isn't sure where\n * the source went. Multiple sources of truth are bad in this case. So we leave this\n * feature only for the case when the tab is closed without saving. In no case will\n * the page change while leaving dirty state for the old song.\n *\n * This modal requests to be closed by calling one of the three callbacks.\n */\nexport default class ModalUnsavedChangesInterstitial extends\n    React.PureComponent<Props> {\n  render(): JSX.Element {\n    return (\n      <ReactModal\n        className={css(MODAL_STYLE.modal)}\n        contentLabel=\"Unsaved changes\"\n        isOpen={true}\n        onRequestClose={this.props.cancel}\n        overlayClassName={css(MODAL_STYLE.overlay)}\n      >\n        <div>\n          <div className={css(MODAL_STYLE.modalHeader)}>\n            Your changes have not been saved.\n            <button\n              aria-label=\"Cancel\"\n              onClick={this.props.cancel}\n              className={css(MODAL_STYLE.closeButton)}\n            >\n              <i className=\"fa-close fa\" aria-hidden={true} />\n            </button>\n          </div>\n          <div className={css(MODAL_STYLE.modalBody)}>\n            <p style={{ marginTop: 0 }}>\n              If you do not save your changes, they will be <strong>permanently lost</strong>!\n            </p>\n            <div style={{ display: 'flex', marginBottom: 10 }}>\n              <div style={{ flex: 1 }} />\n              <div>\n                <button\n                  onClick={this.props.cancel}\n                  className={css(BUTTON_STYLE.buttonStyle)}\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={this.props.discardChanges}\n                  className={css(BUTTON_STYLE.buttonStyle)}\n                >\n                  Discard changes\n                </button>\n                <button\n                  onClick={this.props.save}\n                  className={css(BUTTON_STYLE.buttonStyle)}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/ModalUnsavedChangesInterstitial.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport DOMPurify from 'dompurify';\nimport React from 'react';\n\nimport { decodeArrayBuffer } from './base64Binary';\nimport { MODE_BOTH, MODE_VIEW, ViewMode } from './Header';\nimport Logs from './Logs';\nimport RPCClient, { RenderResponse } from './RPCClient';\nimport { APP_STYLE, BUTTON_STYLE } from './styles';\nimport debounce from './util/debounce';\n\n/**\n * How long the code must not be edited for a preview to render.\n */\nconst DEBOUNCE_REFERSH_TIMEOUT: number = 1000;\n\n/**\n * HTML with a #root element under which the svgs will be inserted.\n *\n * Note: Chrome doesn't render font-face in inline CSS.\n */\nconst BODY_IFRAME_TEMPLATE: string = `\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/preview.css\">\n<div id=\"root\"></div>\n`;\n\ninterface Props {\n  /**\n   * The source to render.\n   *\n   * When this changes, the preview will update (but maybe not right away -- see\n   * DEBOUNCE_REFRESH_TIMEOUT).\n   */\n  code: string;\n\n  /**\n   * Whether or not to use RPC.\n   *\n   * rpc must be null if and only if isStandalone is set.\n   */\n  isStandalone: boolean;\n\n  /**\n   * The logs to render in the Logs button.\n   *\n   * Although the logs are generated here, it's not stored here to -- that way the parent\n   * stays the single source of truth for the logs.\n   */\n  logs: string | null;\n\n  /**\n   * Whether the preview is full-page, half-page, or hidden.\n   */\n  mode: ViewMode;\n\n  /**\n   * Client to use to request the SVG and logs.\n   *\n   * rpc must be null if and only if isStandalone is set.\n   */\n  rpc: RPCClient | null;\n\n  songURL: string | null;\n\n  /**\n   * Called whenever a preview is rendered. The parent should in turn re-render,\n   * settings the logs prop on this component and <Editor />.\n   */\n  onLogsObtained(logs: string | null): void;\n\n  onMidiObtained(midi: ArrayBuffer | null): void;\n\n  /**\n   * Called whenever a note is clicked. The parent should let the <Editor /> know\n   * so it can focus where the note is defined.\n   */\n  onSelectionChanged(selection: monaco.ISelection | null): void;\n\n  standaloneRender(src: string, filetype: string): Promise<{content: string[], logs: string}>;\n}\n\ninterface State {\n  error: string | null;\n  pendingPreviews: number;\n  previewAlreadyDirty: boolean;\n}\n\n/**\n * Makes the logs easier to read by hiding details not relevant to the user.\n */\nfunction cleanLogs(logs: string): string {\n  return logs\n    // Move wrapper errors to the start of the page.\n    .replace(/\\/tmp\\/lyp\\/wrappers\\/hacklily.ly:([0-9]*):([0-9]*)/g,\n             '/tmp/hacklily.ly:2:1')\n    // Hide confusing reference to lyp\n    .replace(/`\\/tmp\\/lyp\\/wrappers\\/hacklily.ly'/g,\n             '`hacklily-wrapper.ly\\'')\n    .replace(/^Lyp.*\\n/gm, '')\n    .replace(/^GNU LilyPond Server.*[\\n\\s]*/gm, '')\n    // Remove prompt\n    .replace(/^>\\s*\\n?/gm, '');\n}\n\n/**\n * Renders an SVG preview of the song in an iframe.\n *\n * The SVG is retreived from the backend server via the RPCClient.\n *\n * On update, it sends back the logs to the parent so that it can be used to highlight\n * errors in the editor. See onLogsObtained.\n *\n * When you click a note, it fires onSelectionChanged so that the editor can highlight\n * where the note is defined.\n */\nexport default class Preview extends React.PureComponent<Props, State> {\n  state: State = {\n    error: null,\n    pendingPreviews: 0,\n    previewAlreadyDirty: false,\n  };\n\n  private iframeLoaded: boolean = false;\n  private previousMIDIData: string | null = null;\n  private sheetMusicView: HTMLIFrameElement;\n\n  componentDidMount(): void {\n    this.fetchNewPreview();\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.code !== this.props.code) {\n      this.fetchNewPreview();\n    }\n    if (prevProps.mode !== this.props.mode) {\n      this.handleModeDidChange();\n    }\n  }\n\n  render(): JSX.Element {\n    const { mode, logs } = this.props;\n    const { pendingPreviews, error } = this.state;\n    const previewMaskStyle: string = css(\n      APP_STYLE.pendingPreviewMask,\n      mode === MODE_VIEW && APP_STYLE.previewPendingMaskModeView,\n    );\n\n    // WARNING: The iframe is NOT sandboxed so we can write to the iframe and so\n    // that we can add a click event (see onSelectionChanged).\n\n    // tslint:disable:react-iframe-missing-sandbox -- see above\n    return (\n      <div style={{ backgroundColor: 'white' }}>\n        <iframe\n          className={css(APP_STYLE.sheetMusicView)}\n          frameBorder=\"0\"\n          height=\"100%\"\n          ref={this.handleSetSheetMusicView}\n          width={mode === MODE_BOTH ? '50%' : (mode === MODE_VIEW ? '100%' : '0')}\n        />\n        {pendingPreviews > 0 && <div className={previewMaskStyle} />}\n        {error && <div className={css(APP_STYLE.errorMask)}>{error}</div>}\n        {this.props.songURL && this.renderPublishedURL(this.props.songURL)}\n        <Logs logs={logs} />\n      </div>\n    );\n    // tslint:enable:react-iframe-missing-sandbox\n  }\n\n  @debounce(DEBOUNCE_REFERSH_TIMEOUT)\n  private async fetchNewPreview(): Promise<void> {\n    if (this.state.pendingPreviews) {\n      this.setState({\n        previewAlreadyDirty: true,\n      });\n\n      return;\n    }\n\n    this.setState({\n      pendingPreviews: this.state.pendingPreviews + 1,\n    });\n\n    if (!this.iframeLoaded) {\n      this.handleIFrameLoaded();\n    }\n\n    const { code, isStandalone, rpc } = this.props;\n\n    try {\n      let dirtyLogs: string;\n      let midi: string | null;\n      let files: string[];\n\n      if (isStandalone) {\n        const reply: {content: string[], logs: string} =\n          await this.props.standaloneRender(code, 'svg');\n        files = reply.content;\n        dirtyLogs = reply.logs;\n        midi = null;  // TODO(joshuan)\n      } else {\n        if (!rpc) {\n          throw new Error('If not standalone, rpc must be set!');\n        }\n        const response: RenderResponse = await rpc.call('render', {\n          backend: 'svg',\n          src: code,\n        });\n\n        files = response.result.files;\n        dirtyLogs = response.result.logs;\n        midi = response.result.midi || null;\n      }\n\n      const logs: string = cleanLogs(dirtyLogs);\n\n      const root: HTMLElement | null =\n        this.sheetMusicView.contentWindow.document.getElementById('root');\n      if (!root) {\n        throw new Error('Could not get sheet music view root!');\n      }\n\n      // If we've gotten into an error state, keep the existing height\n      // so that we don't rescroll on update.\n      root.style.minHeight = files.length === 0 || files[0].trim() === '' ?\n        `${root.scrollHeight}px` :\n        null;\n\n      // tslint:disable-next-line:no-inner-html no-object-literal-type-assertion -- types are wrong\n      root.innerHTML = DOMPurify.sanitize(files.join(''), {\n        ALLOW_UNKNOWN_PROTOCOLS: true,\n      } as object);\n\n      this.props.onLogsObtained(logs);\n      if (midi !== this.previousMIDIData) {\n        if (midi) {\n          this.props.onMidiObtained(decodeArrayBuffer(midi.replace(/\\s/g, '')));\n        } else {\n          this.props.onMidiObtained(null);\n        }\n      }\n      this.previousMIDIData = midi;\n\n      const svgs: SVGSVGElement[] = Array.from(root.getElementsByTagName('svg'));\n      for (const svg of svgs) {\n        svg.removeAttribute('width');\n        svg.removeAttribute('height');\n      }\n      this.setState({\n        pendingPreviews: this.state.pendingPreviews - 1,\n      });\n      if (this.state.previewAlreadyDirty) {\n        this.setState({\n          error: null,\n          previewAlreadyDirty: false,\n        });\n        this.fetchNewPreview();\n      }\n\n      return;\n    } catch (err) {\n      this.setState({\n        pendingPreviews: this.state.pendingPreviews - 1,\n        previewAlreadyDirty: true,\n      });\n    }\n  }\n\n  private handleIFrameLoaded = (): void => {\n    if (this.sheetMusicView) {\n      const body: HTMLElement = this.sheetMusicView.contentWindow.document.body;\n      // tslint:disable-next-line:no-inner-html\n      body.innerHTML = BODY_IFRAME_TEMPLATE;\n      body.addEventListener('click', (ev: MouseEvent) => {\n        ev.preventDefault();\n        let target: HTMLElement | null = ev.target as HTMLElement | null;\n        while (target && target.localName !== 'a') {\n          target = target.parentElement;\n        }\n        if (target && target.localName === 'a') {\n          const link: string | null = target.getAttribute('xlink:href');\n          if (!link) {\n            return;\n          }\n          const pathAndLocation: string[] = link.split('.ly:');\n          if (pathAndLocation.length === 2) {\n            const [line, startColumn, endColumn] = pathAndLocation[1].split(':');\n            this.props.onSelectionChanged({\n              // NOTE: we add a line on render:\n              positionColumn: parseInt(endColumn, 10) + 1,\n              positionLineNumber: parseInt(line, 10) - 1,\n              selectionStartColumn: parseInt(startColumn, 10) + 1,\n              selectionStartLineNumber: parseInt(line, 10) - 1,\n            });\n          }\n        }\n      });\n    }\n    this.handleModeDidChange();\n    this.iframeLoaded = true;\n  }\n\n  private handleModeDidChange = (): void => {\n    if (this.sheetMusicView) {\n      const body: HTMLElement = this.sheetMusicView.contentWindow.document.body;\n      body.classList.remove('modeBoth', 'modeView', 'modeEdit');\n      switch (this.props.mode) {\n        case MODE_BOTH:\n          body.classList.add('modeBoth');\n          break;\n        case MODE_VIEW:\n          body.classList.add('modeView');\n          break;\n        default:\n          body.classList.add('modeEdit');\n          break;\n      }\n    }\n  }\n\n  private handleSetSheetMusicView = (sheetMusicView: HTMLIFrameElement): void => {\n    this.sheetMusicView = sheetMusicView;\n  }\n\n  private renderPublishedURL(url: string): JSX.Element {\n    return (\n      <a\n        href={url.replace(/\\.ly$/, '.pdf')}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={css(BUTTON_STYLE.buttonStyle, APP_STYLE.githubButton)}\n      >\n        <i className=\"fa fa-file-pdf-o\" />{' '}\n        View PDF\n      </a>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Preview.tsx","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DOMPurify = factory());\n}(this, (function () { 'use strict';\n\nvar html = ['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'];\n\n// SVG\nvar svg = ['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern'];\n\nvar svgFilters = ['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence'];\n\nvar mathMl = ['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmuliscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mpspace', 'msqrt', 'mystyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover'];\n\nvar text = ['#text'];\n\nvar html$1 = ['accept', 'action', 'align', 'alt', 'autocomplete', 'background', 'bgcolor', 'border', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'coords', 'datetime', 'default', 'dir', 'disabled', 'download', 'enctype', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'ismap', 'label', 'lang', 'list', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'multiple', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'span', 'srclang', 'start', 'src', 'step', 'style', 'summary', 'tabindex', 'title', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns'];\n\nvar svg$1 = ['accent-height', 'accumulate', 'additivive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan'];\n\nvar mathMl$1 = ['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns'];\n\nvar xml = ['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink'];\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  var l = array.length;\n  while (l--) {\n    if (typeof array[l] === 'string') {\n      array[l] = array[l].toLowerCase();\n    }\n    set[array[l]] = true;\n  }\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = {};\n  var property = void 0;\n  for (property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      newObject[property] = object[property];\n    }\n  }\n  return newObject;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n      * Version label, exposed for easier checks\n      * if DOMPurify is up to date or not\n      */\n  DOMPurify.version = '1.0.2';\n\n  /**\n    * Array of elements that DOMPurify removed during sanitation.\n    * Empty if nothing was removed.\n    */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n  var useDOMParser = false; // See comment below\n  var useXHR = false;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      _window$XMLHttpReques = window.XMLHttpRequest,\n      XMLHttpRequest = _window$XMLHttpReques === undefined ? window.XMLHttpRequest : _window$XMLHttpReques,\n      _window$encodeURI = window.encodeURI,\n      encodeURI = _window$encodeURI === undefined ? window.encodeURI : _window$encodeURI;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n\n  var importNode = originalDocument.importNode;\n\n  var hooks = {};\n\n  /**\n    * Expose whether this browser supports running the full DOMPurify.\n    */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n  /**\n    * We consider the elements and attributes below to be safe. Ideally\n    * don't add any new ones but feel free to remove unwanted ones.\n    */\n\n  /* allowed element names */\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(svgFilters), _toConsumableArray(mathMl), _toConsumableArray(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(mathMl$1), _toConsumableArray(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for jQuery's $() factory? */\n  var SAFE_FOR_JQUERY = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Specify template detection regex for SAFE_FOR_TEMPLATES mode */\n  var MUSTACHE_EXPR = /\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm;\n  var ERB_EXPR = /<%[\\s\\S]*|[\\s\\S]*%>/gm;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html string.\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html string */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['audio', 'head', 'math', 'script', 'style', 'template', 'svg', 'video']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n  * _parseConfig\n  *\n  * @param  optional config literal\n  */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    /* Shield configuration object from tampering */\n    if ((typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (Object && 'freeze' in Object) {\n      Object.freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n  * _forceRemove\n  *\n  * @param  a DOM node\n  */\n  var _forceRemove = function _forceRemove(node) {\n    DOMPurify.removed.push({ element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (err) {\n      node.outerHTML = '';\n    }\n  };\n\n  /**\n  * _removeAttribute\n  *\n  * @param  an Attribute name\n  * @param  a DOM node\n  */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    DOMPurify.removed.push({\n      attribute: node.getAttributeNode(name),\n      from: node\n    });\n    node.removeAttribute(name);\n  };\n\n  /**\n  * _initDocument\n  *\n  * @param  a string of dirty markup\n  * @return a DOM, filled with the dirty markup\n  */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var body = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    }\n\n    /* Use XHR if necessary because Safari 10.1 and newer are buggy */\n    if (useXHR) {\n      try {\n        dirty = encodeURI(dirty);\n      } catch (err) {}\n      var xhr = new XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + dirty, false);\n      xhr.send(null);\n      doc = xhr.response;\n    }\n\n    /* Use DOMParser to workaround Firefox bug (see comment below) */\n    if (useDOMParser) {\n      try {\n        doc = new DOMParser().parseFromString(dirty, 'text/html');\n      } catch (err) {}\n    }\n\n    /* Otherwise use createHTMLDocument, because DOMParser is unsafe in\n    Safari (see comment below) */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      body = doc.body;\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = dirty;\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  // Safari 10.1+ (unfixed as of time of writing) has a catastrophic bug in\n  // its implementation of DOMParser such that the following executes the\n  // JavaScript:\n  //\n  // new DOMParser()\n  //   .parseFromString('<svg onload=alert(document.domain)>', 'text/html');\n  //\n  // Later, it was also noticed that even more assumed benign and inert ways\n  // of creating a document are now insecure thanks to Safari. So we work\n  // around that with a feature test and use XHR to create the document in\n  // case we really have to. That one seems safe for now.\n  //\n  // However, Firefox uses a different parser for innerHTML rather than\n  // DOMParser (see https://bugzilla.mozilla.org/show_bug.cgi?id=1205631)\n  // which means that you *must* use DOMParser, otherwise the output may\n  // not be safe if used in a document.write context later.\n  //\n  // So we feature detect the Firefox bug and use the DOMParser if necessary.\n  if (DOMPurify.isSupported) {\n    (function () {\n      var doc = _initDocument('<svg><g onload=\"this.parentNode.remove()\"></g></svg>');\n      if (!doc.querySelector('svg')) {\n        useXHR = true;\n      }\n      try {\n        doc = _initDocument('<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">');\n        if (doc.querySelector('svg img')) {\n          useDOMParser = true;\n        }\n      } catch (err) {}\n    })();\n  }\n\n  /**\n  * _createIterator\n  *\n  * @param  document/fragment to create iterator for\n  * @return iterator instance\n  */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n  * _isClobbered\n  *\n  * @param  element to check for clobbering attacks\n  * @return true if clobbered, false if safe\n  */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function') {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n  * _isNode\n  *\n  * @param object to check whether it's a DOM node\n  * @return true is object is a DOM node\n  */\n  var _isNode = function _isNode(obj) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? obj instanceof Node : obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && typeof obj.nodeType === 'number' && typeof obj.nodeName === 'string';\n  };\n\n  /**\n  * _executeHook\n  * Execute user configurable hooks\n  *\n  * @param  {String} entryPoint  Name of the hook's entry point\n  * @param  {Node} currentNode\n  */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    hooks[entryPoint].forEach(function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n  * _sanitizeElements\n  *\n  * @protect nodeName\n  * @protect textContent\n  * @protect removeChild\n  *\n  * @param   node to check for permission to exist\n  * @return  true if node was killed, false if left alive\n  */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = currentNode.nodeName.toLowerCase();\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for black-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          currentNode.insertAdjacentHTML('AfterEnd', currentNode.innerHTML);\n        } catch (err) {}\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Convert markup to cover jQuery behavior */\n    if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && /</g.test(currentNode.textContent)) {\n      DOMPurify.removed.push({ element: currentNode.cloneNode() });\n      currentNode.innerHTML = currentNode.textContent.replace(/</g, '&lt;');\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = content.replace(MUSTACHE_EXPR, ' ');\n      content = content.replace(ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        DOMPurify.removed.push({ element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  var DATA_ATTR = /^data-[\\-\\w.\\u00B7-\\uFFFF]/; // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = /^aria-[\\-\\w]+$/; // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = /^(?:(?:(?:f|ht)tps?|mailto|tel):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\n  var IS_SCRIPT_OR_DATA = /^(?:\\w+script|data):/i;\n  /* This needs to be extensive thanks to Webkit/Blink's behavior */\n  var ATTR_WHITESPACE = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g;\n\n  /**\n  * _sanitizeAttributes\n  *\n  * @protect attributes\n  * @protect nodeName\n  * @protect removeAttribute\n  * @protect setAttribute\n  *\n  * @param   node to sanitize\n  * @return  void\n  */\n  // eslint-disable-next-line complexity\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var name = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var idAttr = void 0;\n    var attributes = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      name = attr.name;\n      value = attr.value.trim();\n      lcName = name.toLowerCase();\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Remove attribute */\n      // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n      // remove a \"name\" attribute from an <img> tag that has an \"id\"\n      // attribute at the time.\n      if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n        idAttr = attributes.id;\n        attributes = Array.prototype.slice.apply(attributes);\n        _removeAttribute('id', currentNode);\n        _removeAttribute(name, currentNode);\n        if (attributes.indexOf(idAttr) > l) {\n          currentNode.setAttribute('id', idAttr.value);\n        }\n      } else if (\n      // This works around a bug in Safari, where input[type=file]\n      // cannot be dynamically set after type has been removed\n      currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n        continue;\n      } else {\n        // This avoids a crash in Safari v9.0 with double-ids.\n        // The trick is to first set the id to be empty and then to\n        // remove the attribute\n        if (name === 'id') {\n          currentNode.setAttribute(name, '');\n        }\n        _removeAttribute(name, currentNode);\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in window || value in document || value in formElement)) {\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = value.replace(MUSTACHE_EXPR, ' ');\n        value = value.replace(ERB_EXPR, ' ');\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n         (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n         XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n         We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && DATA_ATTR.test(lcName)) {\n        // This attribute is safe\n      } else if (ALLOW_ARIA_ATTR && ARIA_ATTR.test(lcName)) {\n        // This attribute is safe\n        /* Otherwise, check the name is permitted */\n      } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        continue;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n        // This attribute is safe\n        /* Check no script, data or unknown possibly unsafe URI\n         unless we know URI values are safe for that attribute */\n      } else if (IS_ALLOWED_URI.test(value.replace(ATTR_WHITESPACE, ''))) {\n        // This attribute is safe\n        /* Keep image data URIs alive if src/xlink:href is allowed */\n      } else if ((lcName === 'src' || lcName === 'xlink:href') && value.indexOf('data:') === 0 && DATA_URI_TAGS[currentNode.nodeName.toLowerCase()]) {\n        // This attribute is safe\n        /* Allow unknown protocols: This provides support for links that\n         are handled by protocol handlers which may be unknown ahead of\n         time, e.g. fb:, spotify: */\n      } else if (ALLOW_UNKNOWN_PROTOCOLS && !IS_SCRIPT_OR_DATA.test(value.replace(ATTR_WHITESPACE, ''))) {\n        // This attribute is safe\n        /* Check for binary attributes */\n        // eslint-disable-next-line no-negated-condition\n      } else if (!value) {\n        // Binary attributes are safe at this point\n        /* Anything else, presume unsafe, do not add it back */\n      } else {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        currentNode.setAttribute(name, value);\n        DOMPurify.removed.pop();\n      } catch (err) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n  * _sanitizeShadowDOM\n  *\n  * @param  fragment to iterate over recursively\n  * @return void\n  */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n  * Sanitize\n  * Public method providing core sanitation functionality\n  *\n  * @param {String|Node} dirty string or DOM node\n  * @param {Object} configuration object\n  */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw new TypeError('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        } else if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!-->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else {\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !WHOLE_DOCUMENT && dirty.indexOf('<') === -1) {\n        return dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /* AdoptNode() is not used because internal state is not reset\n               (e.g. the past names map of a HTMLFormElement), this is safe\n               in theory but we would rather not risk another attack vector.\n               The state that is cloned by importNode() is explicitly defined\n               by the specs. */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    return WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n  };\n\n  /**\n  * Public method to set the configuration once\n  * setConfig\n  *\n  * @param {Object} configuration object\n  * @return void\n  */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n  * Public method to remove the configuration\n  * clearConfig\n  *\n  * @return void\n  */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n  * AddHook\n  * Public method to add DOMPurify hooks\n  *\n  * @param {String} entryPoint\n  * @param {Function} hookFunction\n  */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    hooks[entryPoint].push(hookFunction);\n  };\n\n  /**\n  * RemoveHook\n  * Public method to remove a DOMPurify hook at a given entryPoint\n  * (pops it from the stack of hooks if more are present)\n  *\n  * @param {String} entryPoint\n  * @return void\n  */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint].pop();\n    }\n  };\n\n  /**\n  * RemoveHooks\n  * Public method to remove all DOMPurify hooks at a given entryPoint\n  *\n  * @param  {String} entryPoint\n  * @return void\n  */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n  * RemoveAllHooks\n  * Public method to remove all DOMPurify hooks\n  *\n  * @return void\n  */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nreturn purify;\n\n})));\n//# sourceMappingURL=purify.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dompurify/dist/purify.js\n// module id = 95\n// module chunks = 2","/*\nCopyright (c) 2011, Daniel Guerrero\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Uses the new array typed in javascript to binary base64 encode/decode\n * at the moment just decodes a binary base64 encoded\n * into either an ArrayBuffer (decodeArrayBuffer)\n * or into an Uint8Array (decode)\n *\n * References:\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\n * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\n */\n\nconst keyStr: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n/* will return a  Uint8Array type */\nexport function decodeArrayBuffer(input: string): ArrayBuffer {\n  const bytes: number = (input.length / 4) * 3;\n  const ab: ArrayBuffer = new ArrayBuffer(bytes);\n  decode(input, ab);\n\n  return ab;\n}\n\nexport function removePaddingChars(input: string): string {\n  const lkey: number = keyStr.indexOf(input.charAt(input.length - 1));\n  if (lkey === 64) {\n    return input.substring(0, input.length - 1);\n  }\n\n  return input;\n}\n\nexport function decode(inputStr: string, arrayBuffer: ArrayBuffer): Uint8Array {\n\n  // get last chars to see if are valid\n  let input: string = inputStr;\n  input = removePaddingChars(input);\n  input = removePaddingChars(input);\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  const bytes: number = parseInt(String((input.length / 4) * 3), 10);\n\n  const uarray: Uint8Array = arrayBuffer ? new Uint8Array(arrayBuffer) : new Uint8Array(bytes);\n  let chr1: number;\n  let chr2: number;\n  let chr3: number;\n  let enc1: number;\n  let enc2: number;\n  let enc3: number;\n  let enc4: number;\n  let j: number = 0;\n\n  for (let i: number = 0; i < bytes; i += 3) {\n    // get the 3 octects in 4 ascii chars\n    enc1 = keyStr.indexOf(input.charAt(j));\n    j += 1;\n    enc2 = keyStr.indexOf(input.charAt(j));\n    j += 1;\n    enc3 = keyStr.indexOf(input.charAt(j));\n    j += 1;\n    enc4 = keyStr.indexOf(input.charAt(j));\n    j += 1;\n\n    /* tslint:disable */\n    chr1 = (enc1 << 2) | (enc2 >> 4);\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    chr3 = ((enc3 & 3) << 6) | enc4;\n    /* tslint:enable */\n\n    uarray[i] = chr1;\n    if (enc3 !== 64) {\n      uarray[i + 1] = chr2;\n    }\n    if (enc4 !== 64) {\n      uarray[i + 2] = chr3;\n    }\n  }\n\n  return uarray;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/base64Binary.ts","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport { css } from 'aphrodite';\nimport React from 'react';\n\nimport { BUTTON_STYLE, LOGS_STYLE } from './styles';\n\ninterface Props {\n  logs: string | null;\n}\n\ninterface State {\n  hover: boolean;\n}\n\n/**\n * Renders a logs button, that when hovered, expands to show the output from Lilypond.\n *\n * This is visible in the app whenever the preview is visible.\n */\nexport default class Logs extends React.Component<Props, State> {\n  state: State = {\n    hover: false,\n  };\n\n  render(): JSX.Element | null {\n    const { logs } = this.props;\n    const { hover } = this.state;\n    if (logs === null) {\n      return null;\n    }\n\n    if (hover) {\n      // The mask is so that on touch devices where onMouseLeave is supported,\n      // if the user taps outside of the logs, the logs go away.\n      return (\n        <div\n            className={css(LOGS_STYLE.mask)}\n            onClick={this.handleMouseLeave}\n            role=\"presentation\"\n        >\n          <div\n            className={css(BUTTON_STYLE.buttonStyle, LOGS_STYLE.logsButton)}\n            onMouseLeave={this.handleMouseLeave}\n          >\n            <pre style={{ whiteSpace: 'pre-wrap' }}>\n              {logs}\n            </pre>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className={css(BUTTON_STYLE.buttonStyle, LOGS_STYLE.logsButton)}\n        onClick={this.handleMouseClick}\n        onMouseEnter={this.handleMouseEnter}\n        role=\"button\"\n      >\n        <i className=\"fa fa-file-o\" aria-hidden={true} />{' '}\n        Logs\n      </div>\n    );\n  }\n\n  private handleMouseClick = (): void => {\n    // For touch browsers.\n    this.handleMouseEnter();\n  }\n\n  private handleMouseEnter = (): void => {\n    // HACK: in mobile, for some reason if we do this right away,\n    // the mask's click event also goes through.\n    setTimeout(\n      () => {\n        this.setState({\n          hover: true,\n        });\n      },\n      10,\n    );\n  }\n\n  private handleMouseLeave = (): void => {\n    this.setState({\n      hover: false,\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/Logs.tsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n// tslint:disable-next-line:match-default-export-name\nimport lodashDebounce from 'lodash.debounce';\n\nexport default function debounce(timeout: number):\n    <T>(target: {}, propertyKey: string, descriptor: TypedPropertyDescriptor<() => T>) =>\n    TypedPropertyDescriptor<() => T> {\n  return <T>(\n    target: {},\n    propertyKey: string,\n    descriptor: TypedPropertyDescriptor<() => T>,\n  ): TypedPropertyDescriptor<() => T> => {\n\n    const originalMethod: (() => T) | undefined = descriptor.value;\n    if (originalMethod === undefined) {\n      throw new Error('No function to debounce.');\n    }\n\n    descriptor.value = lodashDebounce(originalMethod, timeout);\n\n    return descriptor;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/util/debounce.ts","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.debounce/index.js\n// module id = 99\n// module chunks = 2","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\nimport React from 'react';\n\nimport { File, ls } from './gitfs';\nimport { Auth } from './Auth';\n\nclass Connection extends React.Component {\n    from;\n    to;\n\n    render() {\n        if (this.props.to !== this.to || this.props.from !== this.from) {\n            this.disconnect();\n            this.from = this.props.from;\n            this.to = this.props.to;\n            this.connect();\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.disconnect();\n    }\n\n    disconnect() {\n        if (this.from && this.to) {\n            this.from.disconnect(this.to);\n        }\n    }\n\n    connect() {\n        if (this.from && this.to) {\n            this.from.connect(this.to);\n        }\n    }\n}\n\nexport default class StandaloneAppHost extends React.Component {\n  props;\n\n  resolvers = {};\n  rejectors = {};\n\n  render() {\n    if (this.channel) {\n      const {webContentsBridge, localFiles} = this.channel.objects;\n      return (\n        <noscript>\n          <Connection from={webContentsBridge.onNewSong} to={this.props.onNewSong} />\n          <Connection from={webContentsBridge.onOpen} to={this.props.onOpen} />\n          <Connection from={webContentsBridge.onImport} to={this.props.onImport} />\n          <Connection from={webContentsBridge.onImportRejected} to={this.props.onImportRejected} />\n          <Connection from={webContentsBridge.onSave} to={this.props.onSave} />\n          <Connection from={webContentsBridge.onFind} to={this.props.onFind} />\n          <Connection from={webContentsBridge.onFindNext} to={this.props.onFindNext} />\n          <Connection from={webContentsBridge.onViewMode} to={this.props.onViewMode} />\n          <Connection from={webContentsBridge.onRequestImport} to={this.props.onRequestImport} />\n          <Connection from={webContentsBridge.onSelectAll} to={this.props.onSelectAll} />\n          <Connection from={webContentsBridge.onSplitMode} to={this.props.onSplitMode} />\n          <Connection from={webContentsBridge.onCodeMode} to={this.props.onCodeMode} />\n          <Connection from={webContentsBridge.onAboutHacklily} to={this.props.onAboutHacklily} />\n          <Connection from={webContentsBridge.onExportRequested} to={this.props.onExportRequested} />\n          <Connection from={webContentsBridge.unsavedChangesSave} to={this.props.onUnsavedChangesSave} />\n          <Connection from={webContentsBridge.unsavedChangesCancel} to={this.props.onUnsavedChangesCancel} />\n          <Connection from={webContentsBridge.unsavedChangesDiscard} to={this.props.onUnsavedChangesDiscard} />\n          <Connection from={webContentsBridge.openCancel} to={this.props.onOpenCancel} />\n          <Connection from={webContentsBridge.openFile} to={this.props.onOpenFile} />\n          <Connection from={webContentsBridge.renderCompleted} to={this.handleRenderCompleted} />\n          <Connection from={webContentsBridge.renderError} to={this.handleRenderError} />\n          <Connection from={webContentsBridge.saveAsCancel} to={this.props.onSaveAsCancel} />\n          <Connection from={webContentsBridge.saveAsFile} to={this.props.onSaveAsFile} />\n          <Connection from={localFiles.pathChanged} to={this.props.onLocalFilesChanged} />\n        </noscript>\n      );\n    }\n\n    return null;\n\n  }\n\n  componentWillMount() {\n    if (typeof QWebChannel === 'undefined') {\n      // We only use this in the standalone app.\n      return;\n    }\n    new QWebChannel(qt.webChannelTransport, (channel) => {\n      this.channel = channel;\n    });\n  }\n\n  get localFiles() {\n    if (!this.channel) {\n      return null;\n    }\n    return this.channel.objects.localFiles.contents;\n  }\n\n  componentWillUnmount() {\n    if (this.channel) {\n      this.channel = null;\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.channel) {\n      const {webContentsBridge} = this.channel.objects;\n      if (newProps.showUnsavedChangesDialog !== this.props.showUnsavedChangesDialog) {\n        webContentsBridge.unsavedChangesModalVisible = newProps.showUnsavedChangesDialog;\n      }\n      if (newProps.showOpenDialog !== this.props.showOpenDialog) {\n        webContentsBridge.openDialogVisible = newProps.showOpenDialog;\n        if (newProps.showOpenDialog) {\n          this.fetchSongs();\n        }\n      }\n      if (newProps.showSaveAs !== this.props.showSaveAs) {\n        webContentsBridge.saveAsVisible = newProps.showSaveAs;\n        if (this.props.showSaveAs) {\n          this.fetchSongs(); // To check against files that already exist.\n        }\n      }\n      if (newProps.showImport !== this.props.showImport) {\n        webContentsBridge.importVisible = newProps.showImport;\n      }\n      if (newProps.showSaving !== this.props.showSaving) {\n        webContentsBridge.savingVisible = newProps.showSaving;\n      }\n    }\n  }\n\n  fetchSongs = async () => {\n    const { auth } = this.props;\n    if (auth) {\n      try {\n        const repoTree = await ls(auth.accessToken, auth.repo);\n        if (this.channel) {\n          this.channel.objects.webContentsBridge.remoteFiles = repoTree;\n        }\n      } catch (err) {\n        console.error('Could not retreive your songs.');\n      }\n    } else {\n      console.error('Could not retreive your songs.');\n    }\n  }\n\n  renderLy = (src, filetype) => {\n    console.log(\"HI!\");\n    console.log(`Rendering ${filetype}`)\n    const id = String(Math.random());\n    if (this.channel) {\n      this.channel.objects.webContentsBridge.render(id, src, filetype)\n      return new Promise((resolve, reject) => {\n        this.resolvers[id] = resolve;\n        this.rejectors[id] = reject;\n      });\n    } else {\n      console.log(`No channel`);\n      return new Promise((resolve, reject) => {\n        reject(new Error(\"No channel\"));\n      })\n    }\n  }\n\n  save = async (src, filename) => {\n    const pdf = await this.renderLy(src, 'pdf');\n    this.channel.objects.webContentsBridge.save(src, filename, pdf.content[0]);\n  }\n\n  /**\n   * @param {string} id\n   * @param {string[]} result\n   * @param {string} log\n   */\n  handleRenderCompleted = (id, contents, logs) => {\n    console.log(`Render completed ${id}`);\n    if (this.resolvers[id]) {\n      console.log(\"Found resolver\");\n      this.resolvers[id]({content: contents, logs});\n      delete this.resolvers[id];\n      delete this.rejectors[id];\n    }\n  }\n  /**\n   * @param {string} id\n   * @param {string} error\n   * @returns void\n   */\n  handleRenderError = (id, error) => {\n    console.log(`Render error ${id}`);\n    if (this.rejectors[id]) {\n      console.warn(error);\n      this.rejectors[id]({error});\n      delete this.resolvers[id];\n      delete this.rejectors[id];\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/StandaloneAppHost.jsx","/**\n * @license\n * This file is part of Hacklily, a web-based LilyPond editor.\n * Copyright (C) 2017 - present Joshua Netterfield <joshua@nettek.ca>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n */\n\n// http://stackoverflow.com/a/8648962\nexport function parseQuery(qstr: string): { [key: string]: string } {\n  const query: { [key: string]: string } = {};\n  const a: string[] = (qstr[0] === '?' ? qstr.substr(1) : qstr).split('&');\n  for (const item of a) {\n    if (!item) {\n      continue;\n    }\n    const b: string[] = item.split('=');\n    query[decodeURIComponent(b[0])] = decodeURIComponent(b[1] || '');\n  }\n\n  return query;\n}\n\n// http://stackoverflow.com/a/5505137\nexport function toQueryString(obj: {[key: string]: string}): string {\n  const parts: string[] = [];\n  for (const i of Object.keys(obj)) {\n    if (obj[i] !== undefined) {\n      parts.push(`${encodeURIComponent(i)}=${encodeURIComponent(obj[i])}`);\n    }\n  }\n\n  return parts.join('&')\n    .replace(/%2F/g, '/'); // because we can, and it's less ugly.\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./src/util/queryString.tsx"],"sourceRoot":""}